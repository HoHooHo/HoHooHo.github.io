{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"\u68a6\u4e4b\u658b","title":"\u9996\u9875"},{"location":"Windows%E9%83%A8%E7%BD%B2mkdocs/","text":"Windows \u90e8\u7f72 mkdocs # \u5b89\u88c5 Python # \u4f7f\u7528 python3.x \u7248\u672c\uff0c\u786e\u4fdd\u52fe\u9009\u4e86 \u5b89\u88c5 pip \u5b89\u88c5 mkdocs # cmd \u6267\u884c\u547d\u4ee4 pip install mkdocs \u5b89\u88c5 mkdocs-bootswatch \u4e3b\u9898 # cmd \u6267\u884c\u547d\u4ee4 pip install mkdocs-bootswatch \u5b89\u88c5 markdown_katex \u6570\u5b66\u51fd\u6570\u6e32\u67d3\u5e93 # cmd \u6267\u884c\u547d\u4ee4 pip install markdown_katex pip install python-markdown-math \u542f\u52a8 # cmd \u6267\u884c\u547d\u4ee4 mkdocs new mkdocs serve mkdocs gh-deploy \u90e8\u7f72\u5230 Github # - markdown_katex: no_inline_svg: True insert_fonts_css: True - admonition","title":"Windows \u90e8\u7f72 mkdocs"},{"location":"Windows%E9%83%A8%E7%BD%B2mkdocs/#windows-mkdocs","text":"","title":"Windows \u90e8\u7f72 mkdocs"},{"location":"Windows%E9%83%A8%E7%BD%B2mkdocs/#python","text":"\u4f7f\u7528 python3.x \u7248\u672c\uff0c\u786e\u4fdd\u52fe\u9009\u4e86 \u5b89\u88c5 pip","title":"\u5b89\u88c5 Python"},{"location":"Windows%E9%83%A8%E7%BD%B2mkdocs/#mkdocs","text":"cmd \u6267\u884c\u547d\u4ee4 pip install mkdocs","title":"\u5b89\u88c5 mkdocs"},{"location":"Windows%E9%83%A8%E7%BD%B2mkdocs/#mkdocs-bootswatch","text":"cmd \u6267\u884c\u547d\u4ee4 pip install mkdocs-bootswatch","title":"\u5b89\u88c5 mkdocs-bootswatch \u4e3b\u9898"},{"location":"Windows%E9%83%A8%E7%BD%B2mkdocs/#markdown_katex","text":"cmd \u6267\u884c\u547d\u4ee4 pip install markdown_katex pip install python-markdown-math","title":"\u5b89\u88c5 markdown_katex \u6570\u5b66\u51fd\u6570\u6e32\u67d3\u5e93"},{"location":"Windows%E9%83%A8%E7%BD%B2mkdocs/#_1","text":"cmd \u6267\u884c\u547d\u4ee4 mkdocs new mkdocs serve mkdocs gh-deploy","title":"\u542f\u52a8"},{"location":"Windows%E9%83%A8%E7%BD%B2mkdocs/#github","text":"- markdown_katex: no_inline_svg: True insert_fonts_css: True - admonition","title":"\u90e8\u7f72\u5230 Github"},{"location":"markdown/","text":"Markdown \u6807\u9898 # # \u4e00\u7ea7\u6807\u9898 ## \u4e8c\u7ea7\u6807\u9898 ### \u4e09\u7ea7\u6807\u9898 #### \u56db\u7ea7\u6807\u9898 ##### \u4e94\u7ea7\u6807\u9898 ###### \u516d\u7ea7\u6807\u9898 Markdown \u6bb5\u843d # \u7ea2\u8272\u6587\u5b57 \u7eff\u8272\u6587\u5b57 \u84dd\u8272\u6587\u5b57 \u9ec4\u8272\u6587\u5b57 \u659c\u4f53\u6587\u672c \u659c\u4f53\u6587\u672c \u7c97\u4f53\u6587\u672c \u7c97\u4f53\u6587\u672c \u7c97\u659c\u4f53\u6587\u672c \u7c97\u659c\u4f53\u6587\u672c \u5206\u5272\u7ebf \u6d4b\u8bd5\u6587\u672c ~~\u6d4b\u8bd5\u6587\u672c~~ \u5e26\u4e0b\u5212\u7ebf\u6587\u672c Markdown \u5217\u8868 # \u65e0\u5e8f\u5217\u8868\u4f7f\u7528\u661f\u53f7(*)\u3001\u52a0\u53f7(+)\u6216\u662f\u51cf\u53f7(-)\u4f5c\u4e3a\u5217\u8868\u6807\u8bb0\uff0c\u8fd9\u4e9b\u6807\u8bb0\u540e\u9762\u8981\u6dfb\u52a0\u4e00\u4e2a\u7a7a\u683c\uff0c\u7136\u540e\u518d\u586b\u5199\u5185\u5bb9\u3002\u6709\u5e8f\u5217\u8868\u4f7f\u7528\u6570\u5b57\u5e76\u52a0\u4e0a . \u53f7\u6765\u8868\u793a \u7b2c\u4e00\u9879 \u7b2c\u4e8c\u9879 \u7b2c\u4e09\u9879 \u7b2c\u4e00\u9879 \u7b2c\u4e8c\u9879 \u7b2c\u4e09\u9879 \u7b2c\u4e00\u9879 \u7b2c\u4e8c\u9879 \u7b2c\u4e09\u9879 \u7b2c\u4e00\u9879 \u7b2c\u4e8c\u9879 \u7b2c\u4e09\u9879 \u5217\u8868\u5d4c\u5957\u53ea\u9700\u5728\u5b50\u5217\u8868\u4e2d\u7684\u9009\u9879\u524d\u9762\u6dfb\u52a0\u56db\u4e2a\u7a7a\u683c\u5373\u53ef\uff1a \u7b2c\u4e00\u9879\uff1a \u7b2c\u4e00\u9879\u5d4c\u5957\u7684\u7b2c\u4e00\u4e2a\u5143\u7d20 \u7b2c\u4e00\u9879\u5d4c\u5957\u7684\u7b2c\u4e8c\u4e2a\u5143\u7d20 \u7b2c\u4e8c\u9879\uff1a \u7b2c\u4e8c\u9879\u5d4c\u5957\u7684\u7b2c\u4e00\u4e2a\u5143\u7d20 \u7b2c\u4e8c\u9879\u5d4c\u5957\u7684\u7b2c\u4e8c\u4e2a\u5143\u7d20 Markdown \u533a\u5757 # \u533a\u5757\u5f15\u7528 \u83dc\u9e1f\u6559\u7a0b \u5b66\u7684\u4e0d\u4ec5\u662f\u6280\u672f\u66f4\u662f\u68a6\u60f3 \u6700\u5916\u5c42 \u7b2c\u4e00\u5c42\u5d4c\u5957 \u7b2c\u4e8c\u5c42\u5d4c\u5957 Markdown \u4ee3\u7801 # printf() \u51fd\u6570 int a = 0; int a = 0; $(document).ready(function () { alert('RUNOOB'); }); Markdown \u94fe\u63a5 # \u94fe\u63a5\u4f7f\u7528\u65b9\u6cd5\u5982\u4e0b\uff1a [\u94fe\u63a5\u540d\u79f0](\u94fe\u63a5\u5730\u5740) \u6216\u8005 <\u94fe\u63a5\u5730\u5740> Markdown \u56fe\u7247 # Markdown \u8868\u683c # Markdown \u5236\u4f5c\u8868\u683c\u4f7f\u7528 | \u6765\u5206\u9694\u4e0d\u540c\u7684\u5355\u5143\u683c\uff0c\u4f7f\u7528 - \u6765\u5206\u9694\u8868\u5934\u548c\u5176\u4ed6\u884c\u3002 \u6211\u4eec\u53ef\u4ee5\u8bbe\u7f6e\u8868\u683c\u7684\u5bf9\u9f50\u65b9\u5f0f\uff1a -: \u8bbe\u7f6e\u5185\u5bb9\u548c\u6807\u9898\u680f\u5c45\u53f3\u5bf9\u9f50\u3002 :- \u8bbe\u7f6e\u5185\u5bb9\u548c\u6807\u9898\u680f\u5c45\u5de6\u5bf9\u9f50\u3002 :-: \u8bbe\u7f6e\u5185\u5bb9\u548c\u6807\u9898\u680f\u5c45\u4e2d\u5bf9\u9f50\u3002 \u8868\u5934 \u8868\u5934 \u5355\u5143\u683c \u5355\u5143\u683c \u5355\u5143\u683c \u5355\u5143\u683c \u5de6\u5bf9\u9f50 \u53f3\u5bf9\u9f50 \u5c45\u4e2d\u5bf9\u9f50 \u5355\u5143\u683c \u5355\u5143\u683c \u5355\u5143\u683c \u5355\u5143\u683c \u5355\u5143\u683c \u5355\u5143\u683c Markdown \u9ad8\u7ea7\u6280\u5de7 # \u652f\u6301\u7684 HTML \u5143\u7d20\uff0c\u4e0d\u5728 Markdown \u6db5\u76d6\u8303\u56f4\u4e4b\u5185\u7684\u6807\u7b7e\uff0c\u90fd\u53ef\u4ee5\u76f4\u63a5\u5728\u6587\u6863\u91cc\u9762\u7528 HTML \u64b0\u5199\u3002 \u76ee\u524d\u652f\u6301\u7684 HTML \u5143\u7d20\u6709\uff1a<kbd> <b> <i> <em> <sup> <sub> <br>\u7b49 \u4f7f\u7528 Ctrl + Alt + Del \u91cd\u542f\u7535\u8111 \u652f\u6301\u8f6c\u4e49\u5b57\u7b26 \u6587\u672c\u52a0\u7c97 ** \u6b63\u5e38\u663e\u793a\u661f\u53f7 ** Markdown \u652f\u6301\u4ee5\u4e0b\u8fd9\u4e9b\u7b26\u53f7\u524d\u9762\u52a0\u4e0a\u53cd\u659c\u6760\u6765\u5e2e\u52a9\u63d2\u5165\u666e\u901a\u7684\u7b26\u53f7\uff1a \\ \u53cd\u659c\u7ebf ` \u53cd\u5f15\u53f7 * \u661f\u53f7 _ \u4e0b\u5212\u7ebf {} \u82b1\u62ec\u53f7 [] \u65b9\u62ec\u53f7 () \u5c0f\u62ec\u53f7 # \u4e95\u5b57\u53f7 + \u52a0\u53f7 - \u51cf\u53f7 . \u82f1\u6587\u53e5\u70b9 ! \u611f\u53f9\u53f7 Markdown \u6570\u5b66\u516c\u5f0f # \u5d4c\u5165\u4e86Katex\u7684\u8bdd\u53ef\u4ee5\u4f7f\u7528\u6570\u5b66\u516c\u5f0f f(x) = \\int_{-\\infty}^\\infty \\hat f(\\xi)\\,e^{2 \\pi i \\xi x} \\,d\\xi \\bar{v} = \\begin{pmatrix} \\color{red}x \\\\ \\color{green}y \\\\ \\color{blue}z \\end{pmatrix} https://katex.org/docs/supported.html https://katex.org/docs/support_table.html Markdown \u65b9\u6846 # summary \"!!! summary \"summary\"\" example \"!!! example \"example\"\" quote \"!!! quote \"quote\"\" tip \"!!! tip \"tip\"\" info \"!!! info \"info\"\" success \"!!! success \"success\"\" help \"!!! help \"help\"\" attention \"!!! attention \"attention\"\" warning \"!!! warning \"warning\"\" fail \"!!! fail \"fail\"\" danger \"!!! danger \"danger\"\" error \"!!! error \"error\"\" bug \"!!! bug \"bug\"\"","title":"markdown\u8bed\u6cd5"},{"location":"markdown/#markdown","text":"# \u4e00\u7ea7\u6807\u9898 ## \u4e8c\u7ea7\u6807\u9898 ### \u4e09\u7ea7\u6807\u9898 #### \u56db\u7ea7\u6807\u9898 ##### \u4e94\u7ea7\u6807\u9898 ###### \u516d\u7ea7\u6807\u9898","title":"Markdown \u6807\u9898"},{"location":"markdown/#markdown_1","text":"\u7ea2\u8272\u6587\u5b57 \u7eff\u8272\u6587\u5b57 \u84dd\u8272\u6587\u5b57 \u9ec4\u8272\u6587\u5b57 \u659c\u4f53\u6587\u672c \u659c\u4f53\u6587\u672c \u7c97\u4f53\u6587\u672c \u7c97\u4f53\u6587\u672c \u7c97\u659c\u4f53\u6587\u672c \u7c97\u659c\u4f53\u6587\u672c \u5206\u5272\u7ebf \u6d4b\u8bd5\u6587\u672c ~~\u6d4b\u8bd5\u6587\u672c~~ \u5e26\u4e0b\u5212\u7ebf\u6587\u672c","title":"Markdown \u6bb5\u843d"},{"location":"markdown/#markdown_2","text":"\u65e0\u5e8f\u5217\u8868\u4f7f\u7528\u661f\u53f7(*)\u3001\u52a0\u53f7(+)\u6216\u662f\u51cf\u53f7(-)\u4f5c\u4e3a\u5217\u8868\u6807\u8bb0\uff0c\u8fd9\u4e9b\u6807\u8bb0\u540e\u9762\u8981\u6dfb\u52a0\u4e00\u4e2a\u7a7a\u683c\uff0c\u7136\u540e\u518d\u586b\u5199\u5185\u5bb9\u3002\u6709\u5e8f\u5217\u8868\u4f7f\u7528\u6570\u5b57\u5e76\u52a0\u4e0a . \u53f7\u6765\u8868\u793a \u7b2c\u4e00\u9879 \u7b2c\u4e8c\u9879 \u7b2c\u4e09\u9879 \u7b2c\u4e00\u9879 \u7b2c\u4e8c\u9879 \u7b2c\u4e09\u9879 \u7b2c\u4e00\u9879 \u7b2c\u4e8c\u9879 \u7b2c\u4e09\u9879 \u7b2c\u4e00\u9879 \u7b2c\u4e8c\u9879 \u7b2c\u4e09\u9879 \u5217\u8868\u5d4c\u5957\u53ea\u9700\u5728\u5b50\u5217\u8868\u4e2d\u7684\u9009\u9879\u524d\u9762\u6dfb\u52a0\u56db\u4e2a\u7a7a\u683c\u5373\u53ef\uff1a \u7b2c\u4e00\u9879\uff1a \u7b2c\u4e00\u9879\u5d4c\u5957\u7684\u7b2c\u4e00\u4e2a\u5143\u7d20 \u7b2c\u4e00\u9879\u5d4c\u5957\u7684\u7b2c\u4e8c\u4e2a\u5143\u7d20 \u7b2c\u4e8c\u9879\uff1a \u7b2c\u4e8c\u9879\u5d4c\u5957\u7684\u7b2c\u4e00\u4e2a\u5143\u7d20 \u7b2c\u4e8c\u9879\u5d4c\u5957\u7684\u7b2c\u4e8c\u4e2a\u5143\u7d20","title":"Markdown \u5217\u8868"},{"location":"markdown/#markdown_3","text":"\u533a\u5757\u5f15\u7528 \u83dc\u9e1f\u6559\u7a0b \u5b66\u7684\u4e0d\u4ec5\u662f\u6280\u672f\u66f4\u662f\u68a6\u60f3 \u6700\u5916\u5c42 \u7b2c\u4e00\u5c42\u5d4c\u5957 \u7b2c\u4e8c\u5c42\u5d4c\u5957","title":"Markdown \u533a\u5757"},{"location":"markdown/#markdown_4","text":"printf() \u51fd\u6570 int a = 0; int a = 0; $(document).ready(function () { alert('RUNOOB'); });","title":"Markdown \u4ee3\u7801"},{"location":"markdown/#markdown_5","text":"\u94fe\u63a5\u4f7f\u7528\u65b9\u6cd5\u5982\u4e0b\uff1a [\u94fe\u63a5\u540d\u79f0](\u94fe\u63a5\u5730\u5740) \u6216\u8005 <\u94fe\u63a5\u5730\u5740>","title":"Markdown \u94fe\u63a5"},{"location":"markdown/#markdown_6","text":"","title":"Markdown \u56fe\u7247"},{"location":"markdown/#markdown_7","text":"Markdown \u5236\u4f5c\u8868\u683c\u4f7f\u7528 | \u6765\u5206\u9694\u4e0d\u540c\u7684\u5355\u5143\u683c\uff0c\u4f7f\u7528 - \u6765\u5206\u9694\u8868\u5934\u548c\u5176\u4ed6\u884c\u3002 \u6211\u4eec\u53ef\u4ee5\u8bbe\u7f6e\u8868\u683c\u7684\u5bf9\u9f50\u65b9\u5f0f\uff1a -: \u8bbe\u7f6e\u5185\u5bb9\u548c\u6807\u9898\u680f\u5c45\u53f3\u5bf9\u9f50\u3002 :- \u8bbe\u7f6e\u5185\u5bb9\u548c\u6807\u9898\u680f\u5c45\u5de6\u5bf9\u9f50\u3002 :-: \u8bbe\u7f6e\u5185\u5bb9\u548c\u6807\u9898\u680f\u5c45\u4e2d\u5bf9\u9f50\u3002 \u8868\u5934 \u8868\u5934 \u5355\u5143\u683c \u5355\u5143\u683c \u5355\u5143\u683c \u5355\u5143\u683c \u5de6\u5bf9\u9f50 \u53f3\u5bf9\u9f50 \u5c45\u4e2d\u5bf9\u9f50 \u5355\u5143\u683c \u5355\u5143\u683c \u5355\u5143\u683c \u5355\u5143\u683c \u5355\u5143\u683c \u5355\u5143\u683c","title":"Markdown \u8868\u683c"},{"location":"markdown/#markdown_8","text":"\u652f\u6301\u7684 HTML \u5143\u7d20\uff0c\u4e0d\u5728 Markdown \u6db5\u76d6\u8303\u56f4\u4e4b\u5185\u7684\u6807\u7b7e\uff0c\u90fd\u53ef\u4ee5\u76f4\u63a5\u5728\u6587\u6863\u91cc\u9762\u7528 HTML \u64b0\u5199\u3002 \u76ee\u524d\u652f\u6301\u7684 HTML \u5143\u7d20\u6709\uff1a<kbd> <b> <i> <em> <sup> <sub> <br>\u7b49 \u4f7f\u7528 Ctrl + Alt + Del \u91cd\u542f\u7535\u8111 \u652f\u6301\u8f6c\u4e49\u5b57\u7b26 \u6587\u672c\u52a0\u7c97 ** \u6b63\u5e38\u663e\u793a\u661f\u53f7 ** Markdown \u652f\u6301\u4ee5\u4e0b\u8fd9\u4e9b\u7b26\u53f7\u524d\u9762\u52a0\u4e0a\u53cd\u659c\u6760\u6765\u5e2e\u52a9\u63d2\u5165\u666e\u901a\u7684\u7b26\u53f7\uff1a \\ \u53cd\u659c\u7ebf ` \u53cd\u5f15\u53f7 * \u661f\u53f7 _ \u4e0b\u5212\u7ebf {} \u82b1\u62ec\u53f7 [] \u65b9\u62ec\u53f7 () \u5c0f\u62ec\u53f7 # \u4e95\u5b57\u53f7 + \u52a0\u53f7 - \u51cf\u53f7 . \u82f1\u6587\u53e5\u70b9 ! \u611f\u53f9\u53f7","title":"Markdown \u9ad8\u7ea7\u6280\u5de7"},{"location":"markdown/#markdown_9","text":"\u5d4c\u5165\u4e86Katex\u7684\u8bdd\u53ef\u4ee5\u4f7f\u7528\u6570\u5b66\u516c\u5f0f f(x) = \\int_{-\\infty}^\\infty \\hat f(\\xi)\\,e^{2 \\pi i \\xi x} \\,d\\xi \\bar{v} = \\begin{pmatrix} \\color{red}x \\\\ \\color{green}y \\\\ \\color{blue}z \\end{pmatrix} https://katex.org/docs/supported.html https://katex.org/docs/support_table.html","title":"Markdown \u6570\u5b66\u516c\u5f0f"},{"location":"markdown/#markdown_10","text":"summary \"!!! summary \"summary\"\" example \"!!! example \"example\"\" quote \"!!! quote \"quote\"\" tip \"!!! tip \"tip\"\" info \"!!! info \"info\"\" success \"!!! success \"success\"\" help \"!!! help \"help\"\" attention \"!!! attention \"attention\"\" warning \"!!! warning \"warning\"\" fail \"!!! fail \"fail\"\" danger \"!!! danger \"danger\"\" error \"!!! error \"error\"\" bug \"!!! bug \"bug\"\"","title":"Markdown \u65b9\u6846"},{"location":"%E9%81%93%E6%B3%95%E6%9C%AF/","text":"\u6bcf\u65e5\u590d\u76d8 \u677f\u5757 \u8fd1\u671f\u6700\u5f3a\u677f\u5757 \u677f\u5757\u6307\u6570 \u4eca\u65e5\u6700\u5f3a\u677f\u5757 \u677f\u5757\u6da8\u505c\u6570\u91cf \u6da8\u505c\u70b8\u677f\u6570\u91cf \u5e02\u573a\u6709\u9f99\u5934 \u677f\u5757\u4eca\u65e5\u662f\u5426\u9ad8\u6f6e\uff0c\u5c3e\u76d8\u5206\u6b67 \u82e5\u662f\uff0c\u5219\u6b21\u65e5\u53ea\u80fd\u65e9\u76d8\u5206\u6b67\u4f4e\u5438\uff0c\u5176\u4ed6\u5219\u653e\u5f03 \u677f\u5757\u662f\u5426\u6709\u82e5\u5e72\u5c0f\u5f1f\u6da8\u505c \u677f\u5757\u4f9d\u65e7\u7ef4\u6301\u4e00\u5b9a\u70ed\u5ea6\uff0c\u9f99\u5934\u53ef\u6301\u7eed\u53c2\u4e0e \u9f99\u5934\u590d\u724c\u540e\u9ad8\u4f4d\u9707\u83614-5\u5929\uff0c\u5f31\u52bf\u884c\u60c5\u4f4e\u5438\u9f99\u5934 -\u9f99\u5934\u662f\u5426\u7ed3\u675f \u9ad8\u5ea6\u662f\u7528\u6765\u7a81\u7834\u7684 \u9f99\u5934\u4e0d\u8a00\u9876 \u9f99\u5934\u6b7b\u4e8e\u4e00\u81f4 \u9f99\u5934\u7f29\u91cf\u52a0\u901f \u4e00\u81f4\u8f6c\u5206\u6b67\uff0c\u5de8\u9707\u624d\u662f\u7ed3\u675f\u7684\u6807\u5fd7 \u660e\u65e5\u63a5\u529b \u51b0\u70b9 \u8fde\u677f\u9ad8\u5ea6\u7a81\u7834 \u8fde\u677f\u6307\u6570\u4e0a\u5347 \u4e0d\u63a5\u4e00\u81f4\u540e\u7684\u7968 \u6700\u5f3a\u677f\u5757\u4e2dK\u7ebf\u5f62\u6001\u597d\u7684\u4e2a\u80a1 \u6b21\u65e5\u8c01\u5f3a\u5e72\u8c01 \u6d41\u901a\u5e02\u503c\u5c0f\u4e8e100\u4ebf \u59d4\u6bd4\u8d8a\u5927\u8d8a\u597d \u4e00\u81f4\u8f6c\u5206\u6b67\u8c28\u614e \u76d8\u4e2d\u4ea4\u6613 \u76d8\u4e2d\u62c9\u5347\u5fc5\u987b\u5e26\u91cf\uff0c\u5426\u5219\u5fc5\u56de\u843d \u5f00\u76d8\u4e0b\u7838\uff0c\u4e00\u822c9:35\u662f\u4f4e\u70b9 \u5f00\u76d8\u62c9\u5347\uff0c\u4e00\u822c9:47\u662f\u9ad8\u70b9","title":"\u9053\u6cd5\u672f"},{"location":"Interview/C%2B%2B%E5%9F%BA%E7%A1%80/","text":"\u6784\u9020\u51fd\u6570\u548c\u6790\u6784\u51fd\u6570\u7684\u8c03\u7528\u987a\u5e8f # \u6784\u9020\u51fd\u6570 \u57fa\u7c7b\u7684\u6784\u9020\u51fd\u6570->\u6d3e\u751f\u7c7b\u7684\u6784\u9020\u51fd\u6570 \u6790\u6784\u51fd\u6570 \u6d3e\u751f\u7c7b\u7684\u6790\u6784\u9020\u51fd\u6570->\u57fa\u7c7b\u7684\u6790\u6784\u51fd\u6570 \u6784\u9020\u51fd\u6570\u548c\u6790\u6784\u51fd\u6570\u80fd\u5426\u4e3a\u865a\u51fd\u6570\uff1f \u4e3a\u4ec0\u4e48\uff1f # \u6784\u9020\u51fd\u6570\u4e0d\u80fd\u58f0\u660e\u4e3a\u865a\u51fd\u6570 \u865a\u51fd\u6570\u662f\u5728\u8fd0\u884c\u65f6\u901a\u8fc7\u865a\u51fd\u6570\u8868\u6765\u786e\u5b9a\u5176\u7c7b\u578b\u7684\uff0c\u865a\u51fd\u6570\u8868\u5b58\u653e\u5728\u5bf9\u8c61\u7684\u5185\u5b58\u7a7a\u95f4\u4e2d\u3002\u5728\u521b\u5efa\u4e00\u4e2a\u5bf9\u8c61\u65f6\uff0c\u7531\u4e8e\u5bf9\u8c61\u8fd8\u672a\u521b\u5efa\u6210\u529f\uff0c\u6ca1\u6709\u5185\u5b58\u7a7a\u95f4\uff0c\u66f4\u6ca1\u6709\u865a\u51fd\u6570\u8868\u7528\u6765\u8c03\u7528\u865a\u51fd\u6570\u3002 \u6790\u6784\u51fd\u6570\u6700\u597d\u58f0\u660e\u4e3a\u865a\u51fd\u6570 \u5f53\u6790\u6784\u4e00\u4e2a\u6307\u5411\u6d3e\u751f\u7c7b\u7684\u57fa\u7c7b\u6307\u9488\u65f6\uff0c\u5982\u679c\u57fa\u7c7b\u7684\u6790\u6784\u51fd\u6570\u4e0d\u662f\u865a\u51fd\u6570\uff0c\u5219\u4f1a\u5bfc\u81f4\u5185\u5b58\u6cc4\u9732\u3002 \u5f15\u7528\u4f5c\u4e3a\u51fd\u6570\u53c2\u6570\u7684\u4f18\u70b9 # \u503c\u4f20\u9012 \u5f62\u53c2\u662f\u5b9e\u53c2\u7684\u62f7\u8d1d\u526f\u672c\uff0c\u6539\u53d8\u5f62\u53c2\u7684\u503c\u5e76\u4e0d\u4f1a\u5f71\u54cd\u5916\u90e8\u5b9e\u53c2\u7684\u503c\u3002 \u5f15\u7528\u4f20\u9012 \u5f62\u53c2\u662f\u5b9e\u53c2\u7684\u201c\u522b\u540d\u201d\uff0c\u4e0d\u5b58\u5728\u62f7\u8d1d\u526f\u672c\u3002 static_cast\u3001dynamic_cast\u3001const_cast\u3001reinterpret_cast # static_cast \u7f16\u8bd1\u65f6\u671f\u7684\u9759\u6001\u7c7b\u578b\u68c0\u67e5\uff0c\u8f6c\u6362\u7684\u5b89\u5168\u6027\u8981\u5f00\u53d1\u4eba\u5458\u6765\u4fdd\u8bc1\uff0c\u4e00\u822c\u7528\u4e8e\u4e0a\u884c\u8f6c\u6362 dynamic_cast \u8fd0\u884c\u65f6\u8fdb\u884c\u7c7b\u578b\u5b89\u5168\u68c0\u67e5\uff0c\u4e00\u822c\u7528\u4e8e\u4e0b\u884c\u8f6c\u6362 const_cast \u53bb\u9664const\u5e38\u91cf\u5c5e\u6027\uff0c\u4f7f\u5176\u53ef\u4ee5\u4fee\u6539\u3002","title":"C++\u57fa\u7840"},{"location":"Interview/C%2B%2B%E5%9F%BA%E7%A1%80/#_1","text":"\u6784\u9020\u51fd\u6570 \u57fa\u7c7b\u7684\u6784\u9020\u51fd\u6570->\u6d3e\u751f\u7c7b\u7684\u6784\u9020\u51fd\u6570 \u6790\u6784\u51fd\u6570 \u6d3e\u751f\u7c7b\u7684\u6790\u6784\u9020\u51fd\u6570->\u57fa\u7c7b\u7684\u6790\u6784\u51fd\u6570","title":"\u6784\u9020\u51fd\u6570\u548c\u6790\u6784\u51fd\u6570\u7684\u8c03\u7528\u987a\u5e8f"},{"location":"Interview/C%2B%2B%E5%9F%BA%E7%A1%80/#_2","text":"\u6784\u9020\u51fd\u6570\u4e0d\u80fd\u58f0\u660e\u4e3a\u865a\u51fd\u6570 \u865a\u51fd\u6570\u662f\u5728\u8fd0\u884c\u65f6\u901a\u8fc7\u865a\u51fd\u6570\u8868\u6765\u786e\u5b9a\u5176\u7c7b\u578b\u7684\uff0c\u865a\u51fd\u6570\u8868\u5b58\u653e\u5728\u5bf9\u8c61\u7684\u5185\u5b58\u7a7a\u95f4\u4e2d\u3002\u5728\u521b\u5efa\u4e00\u4e2a\u5bf9\u8c61\u65f6\uff0c\u7531\u4e8e\u5bf9\u8c61\u8fd8\u672a\u521b\u5efa\u6210\u529f\uff0c\u6ca1\u6709\u5185\u5b58\u7a7a\u95f4\uff0c\u66f4\u6ca1\u6709\u865a\u51fd\u6570\u8868\u7528\u6765\u8c03\u7528\u865a\u51fd\u6570\u3002 \u6790\u6784\u51fd\u6570\u6700\u597d\u58f0\u660e\u4e3a\u865a\u51fd\u6570 \u5f53\u6790\u6784\u4e00\u4e2a\u6307\u5411\u6d3e\u751f\u7c7b\u7684\u57fa\u7c7b\u6307\u9488\u65f6\uff0c\u5982\u679c\u57fa\u7c7b\u7684\u6790\u6784\u51fd\u6570\u4e0d\u662f\u865a\u51fd\u6570\uff0c\u5219\u4f1a\u5bfc\u81f4\u5185\u5b58\u6cc4\u9732\u3002","title":"\u6784\u9020\u51fd\u6570\u548c\u6790\u6784\u51fd\u6570\u80fd\u5426\u4e3a\u865a\u51fd\u6570\uff1f \u4e3a\u4ec0\u4e48\uff1f"},{"location":"Interview/C%2B%2B%E5%9F%BA%E7%A1%80/#_3","text":"\u503c\u4f20\u9012 \u5f62\u53c2\u662f\u5b9e\u53c2\u7684\u62f7\u8d1d\u526f\u672c\uff0c\u6539\u53d8\u5f62\u53c2\u7684\u503c\u5e76\u4e0d\u4f1a\u5f71\u54cd\u5916\u90e8\u5b9e\u53c2\u7684\u503c\u3002 \u5f15\u7528\u4f20\u9012 \u5f62\u53c2\u662f\u5b9e\u53c2\u7684\u201c\u522b\u540d\u201d\uff0c\u4e0d\u5b58\u5728\u62f7\u8d1d\u526f\u672c\u3002","title":"\u5f15\u7528\u4f5c\u4e3a\u51fd\u6570\u53c2\u6570\u7684\u4f18\u70b9"},{"location":"Interview/C%2B%2B%E5%9F%BA%E7%A1%80/#static_castdynamic_castconst_castreinterpret_cast","text":"static_cast \u7f16\u8bd1\u65f6\u671f\u7684\u9759\u6001\u7c7b\u578b\u68c0\u67e5\uff0c\u8f6c\u6362\u7684\u5b89\u5168\u6027\u8981\u5f00\u53d1\u4eba\u5458\u6765\u4fdd\u8bc1\uff0c\u4e00\u822c\u7528\u4e8e\u4e0a\u884c\u8f6c\u6362 dynamic_cast \u8fd0\u884c\u65f6\u8fdb\u884c\u7c7b\u578b\u5b89\u5168\u68c0\u67e5\uff0c\u4e00\u822c\u7528\u4e8e\u4e0b\u884c\u8f6c\u6362 const_cast \u53bb\u9664const\u5e38\u91cf\u5c5e\u6027\uff0c\u4f7f\u5176\u53ef\u4ee5\u4fee\u6539\u3002","title":"static_cast\u3001dynamic_cast\u3001const_cast\u3001reinterpret_cast"},{"location":"Interview/C%2B%2B%E9%AB%98%E7%BA%A7/","text":"C++\u6587\u4ef6\u7f16\u8bd1\u56db\u4e2a\u9636\u6bb5 # \u9884\u5904\u7406\uff1a \u6839\u636e\u6587\u4ef6\u4e2d\u7684\u9884\u5904\u7406\u6307\u4ee4\u6765\u5904\u7406\u4ee3\u7801\u6587\u4ef6 \u9884\u7f16\u8bd1\u8fc7\u7a0b\u4e3b\u8981\u5904\u7406\u90a3\u4e9b\u6e90\u4ee3\u7801\u4e2d\u4ee5#\u5f00\u59cb\u7684\u9884\u7f16\u8bd1\u6307\u4ee4\uff0c\u4e3b\u8981\u5904\u7406\u89c4\u5219\u5982\u4e0b\uff1a \u5c06\u6240\u6709\u7684#define\u5220\u9664\uff0c\u5e76\u4e14\u5c55\u5f00\u6240\u6709\u7684\u5b8f\u5b9a\u4e49 \u5904\u7406\u6240\u6709\u6761\u4ef6\u7f16\u8bd1\u6307\u4ee4\uff0c\u5982#if\uff0c#ifdef\u7b49 \u5904\u7406#include\u9884\u7f16\u8bd1\u6307\u4ee4\uff0c\u5c06\u88ab\u5305\u542b\u7684\u6587\u4ef6\u63d2\u5165\u5230\u8be5\u9884\u7f16\u8bd1\u6307\u4ee4\u7684\u4f4d\u7f6e\u3002\u8be5\u8fc7\u7a0b\u9012\u5f52\u8fdb\u884c\uff0c\u53ca\u88ab\u5305\u542b\u7684\u6587\u4ef6\u53ef\u80fd\u8fd8\u5305\u542b\u5176\u4ed6\u6587\u4ef6 \u5220\u9664\u6240\u6709\u7684\u6ce8\u91ca//\u548c /**/ \u6dfb\u52a0\u884c\u53f7\u548c\u6587\u4ef6\u6807\u8bc6\uff0c\u5982#2 \u201chello.c\u201d 2,\u4ee5\u4fbf\u4e8e\u7f16\u8bd1\u65f6\u7f16\u8bd1\u5668\u4ea7\u751f\u8c03\u8bd5\u7528\u7684\u884c\u53f7\u4fe1\u606f\u53ca\u7528\u4e8e\u7f16\u8bd1\u65f6\u4ea7\u751f\u7f16\u8bd1\u9519\u8bef\u6216\u8b66\u544a\u65f6\u80fd\u591f\u663e\u793a\u884c\u53f7\u4fe1\u606f \u4fdd\u7559\u6240\u6709\u7684#pragma\u7f16\u8bd1\u5668\u6307\u4ee4\uff0c\u56e0\u4e3a\u7f16\u8bd1\u5668\u987b\u8981\u4f7f\u7528\u5b83\u4eec\uff1b \u7f16\u8bd1 \u628a\u9884\u5904\u7406\u5b8c\u7684\u6587\u4ef6\u8fdb\u884c\u4e00\u7cfb\u5217\u8bcd\u6cd5\u5206\u6790\uff0c\u8bed\u6cd5\u5206\u6790\uff0c\u8bed\u4e49\u5206\u6790\u53ca\u4f18\u5316\u540e\u751f\u6210\u76f8\u5e94\u7684\u6c47\u7f16\u4ee3\u7801\u6587\u4ef6 \u6c47\u7f16 \u6c47\u7f16\u5668\u628a\u6c47\u7f16\u4ee3\u7801\u8f6c\u53d8\u6210\u76ee\u6807\u673a\u5668\u6307\u4ee4 \u94fe\u63a5 \u94fe\u63a5\u5668\u5c06\u5404\u4e2a\u76ee\u6807\u6587\u4ef6\u7ec4\u88c5\u5728\u4e00\u8d77\uff0c\u89e3\u51b3\u7b26\u53f7\u4f9d\u8d56\u3001\u5e93\u4f9d\u8d56\u5173\u7cfb\uff0c\u5e76\u751f\u6210\u53ef\u6267\u884c\u6587\u4ef6\u3002 C++\u5185\u5b58\u533a\u57df\u76845\u4e2a\u533a\u57df # \u6808 \u7f16\u8bd1\u5668\u81ea\u52a8\u5206\u914d\u91ca\u653e\uff0c\u4e3b\u8981\u5b58\u653e\u51fd\u6570\u7684\u53c2\u6570\u503c\uff0c\u5c40\u90e8\u53d8\u91cf\u503c\u7b49 \u5806 \u7531\u7a0b\u5e8f\u5458\u5206\u914d\u91ca\u653e \u5168\u5c40/\u9759\u6001\u533a \u5b58\u653e\u5168\u5c40\u53d8\u91cf\u548c\u9759\u6001\u53d8\u91cf\uff1b\u7a0b\u5e8f\u7ed3\u675f\u65f6\u7531\u7cfb\u7edf\u91ca\u653e \u5e38\u91cf\u533a \u8fd9\u662f\u4e00\u5757\u6bd4\u8f83\u7279\u6b8a\u7684\u5b58\u50a8\u533a\uff0c\u91cc\u9762\u5b58\u653e\u7684\u662f\u5e38\u91cf\uff0c\u4e0d\u5141\u8bb8\u4fee\u6539 \u7a0b\u5e8f\u4ee3\u7801\u533a \u5b58\u653e\u51fd\u6570\u4f53\u7684\u4e8c\u8fdb\u5236\u4ee3\u7801 extern\u201cC\u201d\u7684\u4f5c\u7528 # extern \u201cC\u201d \u544a\u8bc9 C++ \u7f16\u8bd1\u5668\u7528 C\u89c4\u5219 \u7f16\u8bd1\u6307\u5b9a\u7684\u4ee3\u7801 C++\u9700\u8981\u652f\u6301\u91cd\u8f7d\uff0c\u5355\u7eaf\u7684\u51fd\u6570\u540d\u65e0\u6cd5\u533a\u5206\u51fa\u5177\u4f53\u7684\u51fd\u6570\uff0c\u6240\u4ee5\u5728\u7f16\u8bd1\u9636\u6bb5\u5c31\u9700\u8981\u5c06\u5f62\u53c2\u5217\u8868\u4f5c\u4e3a\u9644\u52a0\u9879\u589e\u52a0\u5230\u51fd\u6570\u7b26\u53f7\u4e2d","title":"C++\u9ad8\u7ea7"},{"location":"Interview/C%2B%2B%E9%AB%98%E7%BA%A7/#c","text":"\u9884\u5904\u7406\uff1a \u6839\u636e\u6587\u4ef6\u4e2d\u7684\u9884\u5904\u7406\u6307\u4ee4\u6765\u5904\u7406\u4ee3\u7801\u6587\u4ef6 \u9884\u7f16\u8bd1\u8fc7\u7a0b\u4e3b\u8981\u5904\u7406\u90a3\u4e9b\u6e90\u4ee3\u7801\u4e2d\u4ee5#\u5f00\u59cb\u7684\u9884\u7f16\u8bd1\u6307\u4ee4\uff0c\u4e3b\u8981\u5904\u7406\u89c4\u5219\u5982\u4e0b\uff1a \u5c06\u6240\u6709\u7684#define\u5220\u9664\uff0c\u5e76\u4e14\u5c55\u5f00\u6240\u6709\u7684\u5b8f\u5b9a\u4e49 \u5904\u7406\u6240\u6709\u6761\u4ef6\u7f16\u8bd1\u6307\u4ee4\uff0c\u5982#if\uff0c#ifdef\u7b49 \u5904\u7406#include\u9884\u7f16\u8bd1\u6307\u4ee4\uff0c\u5c06\u88ab\u5305\u542b\u7684\u6587\u4ef6\u63d2\u5165\u5230\u8be5\u9884\u7f16\u8bd1\u6307\u4ee4\u7684\u4f4d\u7f6e\u3002\u8be5\u8fc7\u7a0b\u9012\u5f52\u8fdb\u884c\uff0c\u53ca\u88ab\u5305\u542b\u7684\u6587\u4ef6\u53ef\u80fd\u8fd8\u5305\u542b\u5176\u4ed6\u6587\u4ef6 \u5220\u9664\u6240\u6709\u7684\u6ce8\u91ca//\u548c /**/ \u6dfb\u52a0\u884c\u53f7\u548c\u6587\u4ef6\u6807\u8bc6\uff0c\u5982#2 \u201chello.c\u201d 2,\u4ee5\u4fbf\u4e8e\u7f16\u8bd1\u65f6\u7f16\u8bd1\u5668\u4ea7\u751f\u8c03\u8bd5\u7528\u7684\u884c\u53f7\u4fe1\u606f\u53ca\u7528\u4e8e\u7f16\u8bd1\u65f6\u4ea7\u751f\u7f16\u8bd1\u9519\u8bef\u6216\u8b66\u544a\u65f6\u80fd\u591f\u663e\u793a\u884c\u53f7\u4fe1\u606f \u4fdd\u7559\u6240\u6709\u7684#pragma\u7f16\u8bd1\u5668\u6307\u4ee4\uff0c\u56e0\u4e3a\u7f16\u8bd1\u5668\u987b\u8981\u4f7f\u7528\u5b83\u4eec\uff1b \u7f16\u8bd1 \u628a\u9884\u5904\u7406\u5b8c\u7684\u6587\u4ef6\u8fdb\u884c\u4e00\u7cfb\u5217\u8bcd\u6cd5\u5206\u6790\uff0c\u8bed\u6cd5\u5206\u6790\uff0c\u8bed\u4e49\u5206\u6790\u53ca\u4f18\u5316\u540e\u751f\u6210\u76f8\u5e94\u7684\u6c47\u7f16\u4ee3\u7801\u6587\u4ef6 \u6c47\u7f16 \u6c47\u7f16\u5668\u628a\u6c47\u7f16\u4ee3\u7801\u8f6c\u53d8\u6210\u76ee\u6807\u673a\u5668\u6307\u4ee4 \u94fe\u63a5 \u94fe\u63a5\u5668\u5c06\u5404\u4e2a\u76ee\u6807\u6587\u4ef6\u7ec4\u88c5\u5728\u4e00\u8d77\uff0c\u89e3\u51b3\u7b26\u53f7\u4f9d\u8d56\u3001\u5e93\u4f9d\u8d56\u5173\u7cfb\uff0c\u5e76\u751f\u6210\u53ef\u6267\u884c\u6587\u4ef6\u3002","title":"C++\u6587\u4ef6\u7f16\u8bd1\u56db\u4e2a\u9636\u6bb5"},{"location":"Interview/C%2B%2B%E9%AB%98%E7%BA%A7/#c5","text":"\u6808 \u7f16\u8bd1\u5668\u81ea\u52a8\u5206\u914d\u91ca\u653e\uff0c\u4e3b\u8981\u5b58\u653e\u51fd\u6570\u7684\u53c2\u6570\u503c\uff0c\u5c40\u90e8\u53d8\u91cf\u503c\u7b49 \u5806 \u7531\u7a0b\u5e8f\u5458\u5206\u914d\u91ca\u653e \u5168\u5c40/\u9759\u6001\u533a \u5b58\u653e\u5168\u5c40\u53d8\u91cf\u548c\u9759\u6001\u53d8\u91cf\uff1b\u7a0b\u5e8f\u7ed3\u675f\u65f6\u7531\u7cfb\u7edf\u91ca\u653e \u5e38\u91cf\u533a \u8fd9\u662f\u4e00\u5757\u6bd4\u8f83\u7279\u6b8a\u7684\u5b58\u50a8\u533a\uff0c\u91cc\u9762\u5b58\u653e\u7684\u662f\u5e38\u91cf\uff0c\u4e0d\u5141\u8bb8\u4fee\u6539 \u7a0b\u5e8f\u4ee3\u7801\u533a \u5b58\u653e\u51fd\u6570\u4f53\u7684\u4e8c\u8fdb\u5236\u4ee3\u7801","title":"C++\u5185\u5b58\u533a\u57df\u76845\u4e2a\u533a\u57df"},{"location":"Interview/C%2B%2B%E9%AB%98%E7%BA%A7/#externc","text":"extern \u201cC\u201d \u544a\u8bc9 C++ \u7f16\u8bd1\u5668\u7528 C\u89c4\u5219 \u7f16\u8bd1\u6307\u5b9a\u7684\u4ee3\u7801 C++\u9700\u8981\u652f\u6301\u91cd\u8f7d\uff0c\u5355\u7eaf\u7684\u51fd\u6570\u540d\u65e0\u6cd5\u533a\u5206\u51fa\u5177\u4f53\u7684\u51fd\u6570\uff0c\u6240\u4ee5\u5728\u7f16\u8bd1\u9636\u6bb5\u5c31\u9700\u8981\u5c06\u5f62\u53c2\u5217\u8868\u4f5c\u4e3a\u9644\u52a0\u9879\u589e\u52a0\u5230\u51fd\u6570\u7b26\u53f7\u4e2d","title":"extern\u201cC\u201d\u7684\u4f5c\u7528"},{"location":"Note/AppleWWDRCA%E8%AF%81%E4%B9%A6/","text":"AppleWWDRCA\uff08Apple Worldwide Developer Relations Certification Authority\uff09\u8bc1\u4e66 # iOS\u5f00\u53d1\u8005\u8bc1\u4e66\u4e0d\u53d7\u4fe1\u4efb \u5f53\u6211\u4eec\u81ea\u5df1\u7684\u5f00\u53d1\u8005\u8bc1\u4e66\u6ca1\u95ee\u9898\u65f6\uff0c\u5374\u51fa\u73b0\u4e86 \u4e0d\u53d7\u4fe1\u4efb\u7684\u63d0\u793a\u65f6\uff0c\u5f88\u6709\u53ef\u80fd\u662f\u7f3a\u5c11\u4e86 AppleWWDRCA\u8bc1\u4e66\u3002 AppleWWDRCA\u8bc1\u4e66 \u76ee\u524d\u9700\u8981 2\u4e2a AppleWWDRCA\u8bc1\u4e66\u3002 2023\u5e742\u67088\u53f7\u5230\u671f\u7684 http://developer.apple.com/certificationauthority/AppleWWDRCA.cer 2030\u5e742\u670820\u53f7\u5230\u671f https://www.apple.com/certificateauthority/AppleWWDRCAG3.cer","title":"AppleWWDRCA\u8bc1\u4e66"},{"location":"Note/AppleWWDRCA%E8%AF%81%E4%B9%A6/#applewwdrcaapple-worldwide-developer-relations-certification-authority","text":"iOS\u5f00\u53d1\u8005\u8bc1\u4e66\u4e0d\u53d7\u4fe1\u4efb \u5f53\u6211\u4eec\u81ea\u5df1\u7684\u5f00\u53d1\u8005\u8bc1\u4e66\u6ca1\u95ee\u9898\u65f6\uff0c\u5374\u51fa\u73b0\u4e86 \u4e0d\u53d7\u4fe1\u4efb\u7684\u63d0\u793a\u65f6\uff0c\u5f88\u6709\u53ef\u80fd\u662f\u7f3a\u5c11\u4e86 AppleWWDRCA\u8bc1\u4e66\u3002 AppleWWDRCA\u8bc1\u4e66 \u76ee\u524d\u9700\u8981 2\u4e2a AppleWWDRCA\u8bc1\u4e66\u3002 2023\u5e742\u67088\u53f7\u5230\u671f\u7684 http://developer.apple.com/certificationauthority/AppleWWDRCA.cer 2030\u5e742\u670820\u53f7\u5230\u671f https://www.apple.com/certificateauthority/AppleWWDRCAG3.cer","title":"AppleWWDRCA\uff08Apple Worldwide Developer Relations Certification Authority\uff09\u8bc1\u4e66"},{"location":"Note/Mac%E5%8D%B8%E8%BD%BDJDK/","text":"\u5728\u547d\u4ee4\u884c\u4e2d\u4f9d\u6b21\u8f93\u5165\u4ee5\u4e0b\u547d\u4ee4 # sudo rm -fr /Library/Internet\\ Plug-Ins/JavaAppletPlugin.plugin sudo rm -fr /Library/PreferencesPanes/JavaControlPanel.prefpane sudo rm -rf /Library/Java/JavaVirtualMachines/xxx.jdk \u6ce8\u610f\u7248\u672c\u53f7 xxx.jdk \u4e2d\u7684 xxx\u662f\u4f60\u7535\u8111\u5b89\u88c5\u7684JDK\u7248\u672c","title":"Mac\u5378\u8f7dJDK"},{"location":"Note/Mac%E5%8D%B8%E8%BD%BDJDK/#_1","text":"sudo rm -fr /Library/Internet\\ Plug-Ins/JavaAppletPlugin.plugin sudo rm -fr /Library/PreferencesPanes/JavaControlPanel.prefpane sudo rm -rf /Library/Java/JavaVirtualMachines/xxx.jdk \u6ce8\u610f\u7248\u672c\u53f7 xxx.jdk \u4e2d\u7684 xxx\u662f\u4f60\u7535\u8111\u5b89\u88c5\u7684JDK\u7248\u672c","title":"\u5728\u547d\u4ee4\u884c\u4e2d\u4f9d\u6b21\u8f93\u5165\u4ee5\u4e0b\u547d\u4ee4"},{"location":"Note/Mac%E5%AE%89%E8%A3%85Homebrew/","text":"1\u3001\u5b98\u7f51\u811a\u672c # /bin/bash -c \"$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install.sh)\" \u4e0d\u63a8\u8350 \u7531\u4e8e\u56fd\u5185\u8bbf\u95ee http://raw.githubusercontent.com \u4e0d\u7a33\u5b9a\uff0c\u5f88\u53ef\u80fd\u4e0b\u8f7d\u5f88\u6162\uff0c\u751a\u81f3\u5931\u8d25\u3002 2\u3001\u955c\u50cf\u811a\u672c # /usr/bin/ruby -e \"$(curl -fsSL https://cdn.jsdelivr.net/gh/ineo6/homebrew-install/install)\" \u63a8\u8350 \u8fd9\u662f\u4e2d\u79d1\u5927\u7684\u955c\u50cf\u811a\u672c\uff0c\u901f\u5ea6\u5f88\u5feb\u3002 \u73af\u5883\u53d8\u91cf \u5b89\u88c5\u5b8c Homebrew \u65f6\uff0c\u5982\u679c\u9700\u8981\u8bbe\u7f6e\u73af\u5883\u53d8\u91cf\u4f1a\u6709\u76f8\u5e94\u7684log\uff0c\u5728log\u4e2d\u590d\u5236\u5176\u547d\u4ee4\u6267\u884c\u5373\u53ef\u3002","title":"Mac\u5b89\u88c5Homebrew"},{"location":"Note/Mac%E5%AE%89%E8%A3%85Homebrew/#1","text":"/bin/bash -c \"$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install.sh)\" \u4e0d\u63a8\u8350 \u7531\u4e8e\u56fd\u5185\u8bbf\u95ee http://raw.githubusercontent.com \u4e0d\u7a33\u5b9a\uff0c\u5f88\u53ef\u80fd\u4e0b\u8f7d\u5f88\u6162\uff0c\u751a\u81f3\u5931\u8d25\u3002","title":"1\u3001\u5b98\u7f51\u811a\u672c"},{"location":"Note/Mac%E5%AE%89%E8%A3%85Homebrew/#2","text":"/usr/bin/ruby -e \"$(curl -fsSL https://cdn.jsdelivr.net/gh/ineo6/homebrew-install/install)\" \u63a8\u8350 \u8fd9\u662f\u4e2d\u79d1\u5927\u7684\u955c\u50cf\u811a\u672c\uff0c\u901f\u5ea6\u5f88\u5feb\u3002 \u73af\u5883\u53d8\u91cf \u5b89\u88c5\u5b8c Homebrew \u65f6\uff0c\u5982\u679c\u9700\u8981\u8bbe\u7f6e\u73af\u5883\u53d8\u91cf\u4f1a\u6709\u76f8\u5e94\u7684log\uff0c\u5728log\u4e2d\u590d\u5236\u5176\u547d\u4ee4\u6267\u884c\u5373\u53ef\u3002","title":"2\u3001\u955c\u50cf\u811a\u672c"},{"location":"OpenGL/Pipeline/","text":"Pipeline # OpenGL ES 3.2 pipeline # \u6e32\u67d3\u7ba1\u7ebf\u5404\u9636\u6bb5\u7684\u5de5\u4f5c\u5185\u5bb9 \u56fe\u4e2d\u7684\u56fe\u5143\u88c5\u914d\u5b9e\u9645\u4e0a\u662f \u65e9\u671f\u56fe\u5143\u88c5\u914d OpenGL \u57fa\u672c\u56fe\u5143 # Shader # none (Default) same as in in For parameter passed into a function out For values passed out of a function inout Function parameters passed in and out \u53c2\u8003 # Rendering_Pipeline_Overview OpenGL 4.5 Reference Guide OpenGL ES 3.2 Reference Guide","title":"\u6e32\u67d3\u7ba1\u7ebf"},{"location":"OpenGL/Pipeline/#pipeline","text":"","title":"Pipeline"},{"location":"OpenGL/Pipeline/#opengl-es-32-pipeline","text":"\u6e32\u67d3\u7ba1\u7ebf\u5404\u9636\u6bb5\u7684\u5de5\u4f5c\u5185\u5bb9 \u56fe\u4e2d\u7684\u56fe\u5143\u88c5\u914d\u5b9e\u9645\u4e0a\u662f \u65e9\u671f\u56fe\u5143\u88c5\u914d","title":"OpenGL ES 3.2 pipeline"},{"location":"OpenGL/Pipeline/#opengl","text":"","title":"OpenGL \u57fa\u672c\u56fe\u5143"},{"location":"OpenGL/Pipeline/#shader","text":"none (Default) same as in in For parameter passed into a function out For values passed out of a function inout Function parameters passed in and out","title":"Shader"},{"location":"OpenGL/Pipeline/#_1","text":"Rendering_Pipeline_Overview OpenGL 4.5 Reference Guide OpenGL ES 3.2 Reference Guide","title":"\u53c2\u8003"},{"location":"OpenGL/VAO_VBO_EBO/","text":"VBO # \u9876\u70b9\u7f13\u51b2\u5bf9\u8c61(Vertex Buffer Object\u3001VBO)\uff1a\u7528\u4e8e\u5b58\u50a8\u9876\u70b9\u7684\u5404\u7c7b\u5c5e\u6027\u4fe1\u606f\uff08\u5982\u9876\u70b9\u5750\u6807\u3001\u9876\u70b9\u6cd5\u5411\u91cf\u3001\u9876\u70b9\u989c\u8272\u7b49\uff09\u3002\u5728\u6e32\u67d3\u65f6\uff0c\u53ef\u4ee5\u76f4\u63a5\u4eceVBO\u4e2d\u8bfb\u53d6\u9876\u70b9\u7684\u5404\u7c7b\u5c5e\u6027\u6570\u636e\uff0c\u7531\u4e8eVBO\u5728\u663e\u5b58\u4e2d\u800c\u4e0d\u662f\u5728\u5185\u5b58\u4e2d\uff0c\u5904\u7406\u6548\u7387\u66f4\u9ad8\u3002\u6bcf\u4e2aVBO\u5728OpenGL\u4e2d\u6709\u552f\u4e00\u6807\u8bc6ID\uff0c\u901a\u8fc7\u8fd9\u4e2aID\u53ef\u4ee5\u5bf9\u7279\u5b9a\u7684VBO\u5185\u7684\u6570\u636e\u8fdb\u884c\u5b58\u53d6\u64cd\u4f5c\u3002 EBO # \u7d22\u5f15\u7f13\u51b2\u5bf9\u8c61(Element Buffer Object\uff0cEBO\u6216Index Buffer Object\uff0cIBO)\uff1a\u5f53\u9700\u8981\u4f7f\u7528\u91cd\u590d\u7684\u9876\u70b9\u65f6\uff0c\u53ef\u4ee5\u901a\u8fc7EBO\u8282\u7701\u5185\u5b58\uff0c\u63d0\u9ad8\u6267\u884c\u6548\u7387\u3002EBO\u4e2d\u5b58\u50a8\u7684\u5185\u5bb9\u5c31\u662f\u9876\u70b9\u4f4d\u7f6e\u7684\u7d22\u5f15\uff0cEBO\u8ddfVBO\u7c7b\u4f3c\uff0c\u53ea\u4e0d\u8fc7EBO\u4fdd\u5b58\u7684\u662f\u9876\u70b9\u7684\u7d22\u5f15\u3002 VAO # \u9876\u70b9\u6570\u7ec4\u5bf9\u8c61(Vertex Array Object\u3001VAO)\uff1a\u53ef\u4ee5\u50cfVBO\u90a3\u6837\u88ab\u7ed1\u5b9a\uff0c\u4efb\u4f55\u968f\u540e\u7684\u9876\u70b9\u5c5e\u6027\u8bbe\u7f6e\u90fd\u4f1a\u50a8\u5b58\u5728\u8fd9\u4e2aVAO\u4e2d\uff0c\u4e4b\u540e\u5728\u7ed8\u5236\u7269\u4f53\u7684\u65f6\u5019\u53ea\u9700\u8981\u7ed1\u5b9a\u76f8\u5e94\u7684VAO\u5c31\u53ef\u4ee5\u3002\u5728\u4e0d\u540c\u9876\u70b9\u6570\u636e\u548c\u5c5e\u6027\u914d\u7f6e\u4e4b\u95f4\u5207\u6362\u65f6\uff0c\u53ea\u9700\u7ed1\u5b9a\u4e0d\u540c\u7684VAO\u5c31\u53ef\u4ee5\u3002 \u4e00\u4e2aVAO\u4f1a\u50a8\u5b58\u4ee5\u4e0b\u8fd9\u4e9b\u5185\u5bb9\uff1a glEnableVertexAttribArray\u548cglDisableVertexAttribArray\u7684\u8c03\u7528\uff1b \u901a\u8fc7glVertexAttribPointer\u8bbe\u7f6e\u7684\u9876\u70b9\u5c5e\u6027\u914d\u7f6e\uff1b \u901a\u8fc7glVertexAttribPointer\u8c03\u7528\u4e0e\u9876\u70b9\u5c5e\u6027\u5173\u8054\u7684VBO\uff1b \u5f53\u76ee\u6807\u662fGL_ELEMENT_ARRAY_BUFFER\u7684\u65f6\u5019\uff0cVAO\u4f1a\u50a8\u5b58glBindBuffer\u7684\u51fd\u6570\u8c03\u7528\uff1b \u8fd9\u610f\u5473\u7740\u5b83\u4e5f\u4f1a\u50a8\u5b58\u89e3\u7ed1\u8c03\u7528\uff0c\u6240\u4ee5\u786e\u4fdd\u5728\u89e3\u7ed1VAO\u4e4b\u524d\u6ca1\u6709\u89e3\u7ed1EBO\uff0c\u5426\u5219\u5b83\u5c31\u6ca1\u6709\u8fd9\u4e2aEBO\u914d\u7f6e\u4e86\u3002 \u603b\u7ed3 # VBO \u5b58\u50a8\u9876\u70b9\u6570\u636e EBO \u5b58\u50a8\u9876\u70b9\u7d22\u5f15 VAO \u5b58\u50a8\u7f13\u51b2\u533a\u548c\u9876\u70b9\u5c5e\u6027\u72b6\u6001 Back // set up vertex data (and buffer(s)) and configure vertex attributes float vertices[] = { 0.5f, 0.5f, 0.0f, // top right 0.5f, -0.5f, 0.0f, // bottom right -0.5f, -0.5f, 0.0f, // bottom left -0.5f, 0.5f, 0.0f // top left }; unsigned int indices[] = { // note that we start from 0! 0, 1, 3, // first Triangle 1, 2, 3 // second Triangle }; unsigned int VBO, VAO, EBO; glGenVertexArrays(1, &VAO); glGenBuffers(1, &VBO); glGenBuffers(1, &EBO); // bind the Vertex Array Object first, then bind and set vertex buffer(s), and then configure vertex attributes(s). glBindVertexArray(VAO); glBindBuffer(GL_ARRAY_BUFFER, VBO); glBufferData(GL_ARRAY_BUFFER, sizeof(vertices), vertices, GL_STATIC_DRAW); glBindBuffer(GL_ELEMENT_ARRAY_BUFFER, EBO); glBufferData(GL_ELEMENT_ARRAY_BUFFER, sizeof(indices), indices, GL_STATIC_DRAW); glVertexAttribPointer(0, 3, GL_FLOAT, GL_FALSE, 3 * sizeof(float), (void*)0); glEnableVertexAttribArray(0); // note that this is allowed, the call to glVertexAttribPointer registered VBO as the vertex attribute's bound vertex buffer object so afterwards we can safely unbind glBindBuffer(GL_ARRAY_BUFFER, 0); // remember: do NOT unbind the EBO while a VAO is active as the bound element buffer object IS stored in the VAO; keep the EBO bound. //glBindBuffer(GL_ELEMENT_ARRAY_BUFFER, 0); // You can unbind the VAO afterwards so other VAO calls won't accidentally modify this VAO, but this rarely happens. Modifying other // VAOs requires a call to glBindVertexArray anyways so we generally don't unbind VAOs (nor VBOs) when it's not directly necessary. glBindVertexArray(0); // ... \u7701\u7565\u90e8\u5206\u4ee3\u7801 // render loop // ----------- glBindVertexArray(VAO); // seeing as we only have a single VAO there's no need to bind it every time, but we'll do so to keep things a bit more organized //glDrawArrays(GL_TRIANGLES, 0, 6); glDrawElements(GL_TRIANGLES, 6, GL_UNSIGNED_INT, 0); // glBindVertexArray(0); // no need to unbind it every time glSwapBuffers();","title":"VAO\u3001VBO\u3001EBO"},{"location":"OpenGL/VAO_VBO_EBO/#vbo","text":"\u9876\u70b9\u7f13\u51b2\u5bf9\u8c61(Vertex Buffer Object\u3001VBO)\uff1a\u7528\u4e8e\u5b58\u50a8\u9876\u70b9\u7684\u5404\u7c7b\u5c5e\u6027\u4fe1\u606f\uff08\u5982\u9876\u70b9\u5750\u6807\u3001\u9876\u70b9\u6cd5\u5411\u91cf\u3001\u9876\u70b9\u989c\u8272\u7b49\uff09\u3002\u5728\u6e32\u67d3\u65f6\uff0c\u53ef\u4ee5\u76f4\u63a5\u4eceVBO\u4e2d\u8bfb\u53d6\u9876\u70b9\u7684\u5404\u7c7b\u5c5e\u6027\u6570\u636e\uff0c\u7531\u4e8eVBO\u5728\u663e\u5b58\u4e2d\u800c\u4e0d\u662f\u5728\u5185\u5b58\u4e2d\uff0c\u5904\u7406\u6548\u7387\u66f4\u9ad8\u3002\u6bcf\u4e2aVBO\u5728OpenGL\u4e2d\u6709\u552f\u4e00\u6807\u8bc6ID\uff0c\u901a\u8fc7\u8fd9\u4e2aID\u53ef\u4ee5\u5bf9\u7279\u5b9a\u7684VBO\u5185\u7684\u6570\u636e\u8fdb\u884c\u5b58\u53d6\u64cd\u4f5c\u3002","title":"VBO"},{"location":"OpenGL/VAO_VBO_EBO/#ebo","text":"\u7d22\u5f15\u7f13\u51b2\u5bf9\u8c61(Element Buffer Object\uff0cEBO\u6216Index Buffer Object\uff0cIBO)\uff1a\u5f53\u9700\u8981\u4f7f\u7528\u91cd\u590d\u7684\u9876\u70b9\u65f6\uff0c\u53ef\u4ee5\u901a\u8fc7EBO\u8282\u7701\u5185\u5b58\uff0c\u63d0\u9ad8\u6267\u884c\u6548\u7387\u3002EBO\u4e2d\u5b58\u50a8\u7684\u5185\u5bb9\u5c31\u662f\u9876\u70b9\u4f4d\u7f6e\u7684\u7d22\u5f15\uff0cEBO\u8ddfVBO\u7c7b\u4f3c\uff0c\u53ea\u4e0d\u8fc7EBO\u4fdd\u5b58\u7684\u662f\u9876\u70b9\u7684\u7d22\u5f15\u3002","title":"EBO"},{"location":"OpenGL/VAO_VBO_EBO/#vao","text":"\u9876\u70b9\u6570\u7ec4\u5bf9\u8c61(Vertex Array Object\u3001VAO)\uff1a\u53ef\u4ee5\u50cfVBO\u90a3\u6837\u88ab\u7ed1\u5b9a\uff0c\u4efb\u4f55\u968f\u540e\u7684\u9876\u70b9\u5c5e\u6027\u8bbe\u7f6e\u90fd\u4f1a\u50a8\u5b58\u5728\u8fd9\u4e2aVAO\u4e2d\uff0c\u4e4b\u540e\u5728\u7ed8\u5236\u7269\u4f53\u7684\u65f6\u5019\u53ea\u9700\u8981\u7ed1\u5b9a\u76f8\u5e94\u7684VAO\u5c31\u53ef\u4ee5\u3002\u5728\u4e0d\u540c\u9876\u70b9\u6570\u636e\u548c\u5c5e\u6027\u914d\u7f6e\u4e4b\u95f4\u5207\u6362\u65f6\uff0c\u53ea\u9700\u7ed1\u5b9a\u4e0d\u540c\u7684VAO\u5c31\u53ef\u4ee5\u3002 \u4e00\u4e2aVAO\u4f1a\u50a8\u5b58\u4ee5\u4e0b\u8fd9\u4e9b\u5185\u5bb9\uff1a glEnableVertexAttribArray\u548cglDisableVertexAttribArray\u7684\u8c03\u7528\uff1b \u901a\u8fc7glVertexAttribPointer\u8bbe\u7f6e\u7684\u9876\u70b9\u5c5e\u6027\u914d\u7f6e\uff1b \u901a\u8fc7glVertexAttribPointer\u8c03\u7528\u4e0e\u9876\u70b9\u5c5e\u6027\u5173\u8054\u7684VBO\uff1b \u5f53\u76ee\u6807\u662fGL_ELEMENT_ARRAY_BUFFER\u7684\u65f6\u5019\uff0cVAO\u4f1a\u50a8\u5b58glBindBuffer\u7684\u51fd\u6570\u8c03\u7528\uff1b \u8fd9\u610f\u5473\u7740\u5b83\u4e5f\u4f1a\u50a8\u5b58\u89e3\u7ed1\u8c03\u7528\uff0c\u6240\u4ee5\u786e\u4fdd\u5728\u89e3\u7ed1VAO\u4e4b\u524d\u6ca1\u6709\u89e3\u7ed1EBO\uff0c\u5426\u5219\u5b83\u5c31\u6ca1\u6709\u8fd9\u4e2aEBO\u914d\u7f6e\u4e86\u3002","title":"VAO"},{"location":"OpenGL/VAO_VBO_EBO/#_1","text":"VBO \u5b58\u50a8\u9876\u70b9\u6570\u636e EBO \u5b58\u50a8\u9876\u70b9\u7d22\u5f15 VAO \u5b58\u50a8\u7f13\u51b2\u533a\u548c\u9876\u70b9\u5c5e\u6027\u72b6\u6001 Back // set up vertex data (and buffer(s)) and configure vertex attributes float vertices[] = { 0.5f, 0.5f, 0.0f, // top right 0.5f, -0.5f, 0.0f, // bottom right -0.5f, -0.5f, 0.0f, // bottom left -0.5f, 0.5f, 0.0f // top left }; unsigned int indices[] = { // note that we start from 0! 0, 1, 3, // first Triangle 1, 2, 3 // second Triangle }; unsigned int VBO, VAO, EBO; glGenVertexArrays(1, &VAO); glGenBuffers(1, &VBO); glGenBuffers(1, &EBO); // bind the Vertex Array Object first, then bind and set vertex buffer(s), and then configure vertex attributes(s). glBindVertexArray(VAO); glBindBuffer(GL_ARRAY_BUFFER, VBO); glBufferData(GL_ARRAY_BUFFER, sizeof(vertices), vertices, GL_STATIC_DRAW); glBindBuffer(GL_ELEMENT_ARRAY_BUFFER, EBO); glBufferData(GL_ELEMENT_ARRAY_BUFFER, sizeof(indices), indices, GL_STATIC_DRAW); glVertexAttribPointer(0, 3, GL_FLOAT, GL_FALSE, 3 * sizeof(float), (void*)0); glEnableVertexAttribArray(0); // note that this is allowed, the call to glVertexAttribPointer registered VBO as the vertex attribute's bound vertex buffer object so afterwards we can safely unbind glBindBuffer(GL_ARRAY_BUFFER, 0); // remember: do NOT unbind the EBO while a VAO is active as the bound element buffer object IS stored in the VAO; keep the EBO bound. //glBindBuffer(GL_ELEMENT_ARRAY_BUFFER, 0); // You can unbind the VAO afterwards so other VAO calls won't accidentally modify this VAO, but this rarely happens. Modifying other // VAOs requires a call to glBindVertexArray anyways so we generally don't unbind VAOs (nor VBOs) when it's not directly necessary. glBindVertexArray(0); // ... \u7701\u7565\u90e8\u5206\u4ee3\u7801 // render loop // ----------- glBindVertexArray(VAO); // seeing as we only have a single VAO there's no need to bind it every time, but we'll do so to keep things a bit more organized //glDrawArrays(GL_TRIANGLES, 0, 6); glDrawElements(GL_TRIANGLES, 6, GL_UNSIGNED_INT, 0); // glBindVertexArray(0); // no need to unbind it every time glSwapBuffers();","title":"\u603b\u7ed3"},{"location":"OpenGL/%E5%85%89%E6%BA%90/","text":"\u5149\u6e90 # \u53c2\u8003 https://learnopengl-cn.github.io/02%20Lighting/05%20Light%20casters/ \u5b9a\u5411\u5149\u6e90(Directional Light) # \u5f53\u4e00\u4e2a\u5149\u6e90\u5904\u4e8e\u5f88\u8fdc\u7684\u5730\u65b9\u65f6\uff0c\u6765\u81ea\u5149\u6e90\u7684\u6bcf\u6761\u5149\u7ebf\u5c31\u4f1a\u8fd1\u4f3c\u4e8e\u4e92\u76f8\u5e73\u884c\u3002\u4e0d\u8bba\u7269\u4f53\u548c\u89c2\u5bdf\u8005\u5728\u4ec0\u4e48\u4f4d\u7f6e\uff0c\u770b\u8d77\u6765\u597d\u50cf\u6240\u6709\u7684\u5149\u90fd\u6765\u81ea\u4e8e\u540c\u4e00\u4e2a\u65b9\u5411\u3002\u5f53\u6211\u4eec\u4f7f\u7528\u4e00\u4e2a\u5047\u8bbe\u5149\u6e90\u5904\u4e8e\u65e0\u9650\u8fdc\u5904\u7684\u6a21\u578b\u65f6\uff0c\u5b83\u5c31\u88ab\u79f0\u4e3a\u5b9a\u5411\u5149\uff0c\u56e0\u4e3a\u6240\u6709\u7684\u5149\u7ebf\u90fd\u662f\u5e73\u884c\u7684\uff0c\u6240\u4ee5\u7269\u4f53\u4e0e\u5149\u6e90\u7684\u76f8\u5bf9\u4f4d\u7f6e\u5c31\u4e0d\u91cd\u8981\u4e86\u3002\u9002\u7528\u4e8e\u6a21\u62df\u592a\u9633\u5149\u3002 Back \u6211\u4eec\u53ef\u4ee5\u5b9a\u4e49\u4e00\u4e2a\u65b9\u5411\u5411\u91cf\u800c\u4e0d\u662f\u4f4d\u7f6e\u5411\u91cf\u6765\u6a21\u62df\u4e00\u4e2a\u5b9a\u5411\u5149 struct Light { // vec3 position; // \u4f7f\u7528\u5b9a\u5411\u5149\u5c31\u4e0d\u518d\u9700\u8981\u4e86 vec3 direction; vec3 ambient; vec3 diffuse; vec3 specular; }; ... void main() { vec3 lightDir = normalize(-light.direction); ... } \u6ce8\u610f \u6211\u4eec\u76ee\u524d\u4f7f\u7528\u7684\u5149\u7167\u8ba1\u7b97\u9700\u8981\u4e00\u4e2a\u4ece\u7247\u6bb5\u81f3\u5149\u6e90\u7684\u5149\u7ebf\u65b9\u5411\uff0c\u4f46\u4eba\u4eec\u66f4\u4e60\u60ef\u5b9a\u4e49\u5b9a\u5411\u5149\u4e3a\u4e00\u4e2a\u4ece\u5149\u6e90\u51fa\u53d1\u7684\u5168\u5c40\u65b9\u5411\u3002\u6240\u4ee5\u6211\u4eec\u9700\u8981\u5bf9\u5168\u5c40\u5149\u7167\u65b9\u5411\u5411\u91cf\u53d6\u53cd\u6765\u6539\u53d8\u5b83\u7684\u65b9\u5411\u3002 \u70b9\u5149\u6e90(Point Light) # \u70b9\u5149\u6e90\u662f\u5904\u4e8e\u4e16\u754c\u4e2d\u67d0\u4e00\u4e2a\u4f4d\u7f6e\u7684\u5149\u6e90\uff0c\u5b83\u4f1a\u671d\u7740\u6240\u6709\u65b9\u5411\u53d1\u5149\uff0c\u4f46\u5149\u7ebf\u4f1a\u968f\u7740\u8ddd\u79bb\u9010\u6e10\u8870\u51cf\u3002\u9002\u7528\u4e8e\u6a21\u62df\u706f\u6ce1\u3002 \u8870\u51cf # \u8870\u51cf(Attenuation)\uff1a\u968f\u7740\u5149\u7ebf\u4f20\u64ad\u8ddd\u79bb\u7684\u589e\u957f\u9010\u6e10\u524a\u51cf\u5149\u7684\u5f3a\u5ea6\u3002 \u5728\u73b0\u5b9e\u4e16\u754c\u4e2d\uff0c\u706f\u6ce1\u5728\u8fd1\u5904\u901a\u5e38\u4f1a\u975e\u5e38\u4eae\uff0c\u4f46\u968f\u7740\u8ddd\u79bb\u7684\u589e\u52a0\u5149\u6e90\u7684\u4eae\u5ea6\u4e00\u5f00\u59cb\u4f1a\u4e0b\u964d\u975e\u5e38\u5feb\uff0c\u4f46\u5728\u8fdc\u5904\u65f6\u5269\u4f59\u7684\u5149\u5f3a\u5ea6\u5c31\u4f1a\u4e0b\u964d\u7684\u975e\u5e38\u7f13\u6162\u4e86\u3002 \u8870\u51cf\u516c\u5f0f F_{att} = \\frac{1.0}{K_c + K_l * d + K_q * d^2} d\uff1a\u7247\u6bb5\u5230\u5149\u6e90\u7684\u8ddd\u79bb K_c \uff1a\u5e38\u6570\u9879\u3002\u901a\u5e38\u4e3a1.0\uff0c\u5b83\u7684\u4e3b\u8981\u4f5c\u7528\u662f\u4fdd\u8bc1\u5206\u6bcd\u6c38\u8fdc\u5927\u4e8e1\uff0c\u5426\u5219\u5728\u67d0\u4e9b\u8ddd\u79bb\u4e0a\u5b83\u53cd\u800c\u4f1a\u589e\u52a0\u5f3a\u5ea6\u3002 K_l \uff1a\u4e00\u6b21\u9879\u3002\u4e0e\u8ddd\u79bb\u503c\u76f8\u4e58\uff0c\u4fdd\u8bc1\u5149\u4ee5\u7ebf\u6027\u7684\u65b9\u5f0f\u51cf\u5c11\u5f3a\u5ea6\u3002 K_q \uff1a\u4e8c\u6b21\u9879\u3002\u4e0e\u8ddd\u79bb\u7684\u5e73\u65b9\u76f8\u4e58\uff0c\u5728\u8ddd\u79bb\u6bd4\u8f83\u5c0f\u7684\u65f6\u5019\u5f71\u54cd\u4f1a\u6bd4\u4e00\u6b21\u9879\u5c0f\u5f88\u591a\uff0c\u4f46\u5f53\u8ddd\u79bb\u503c\u6bd4\u8f83\u5927\u7684\u65f6\u5019\u5b83\u5c31\u4f1a\u6bd4\u4e00\u6b21\u9879\u66f4\u5927\u4e86\u3002 Back \u4e0b\u56fe\u53ef\u4ee5\u770b\u5230\u5149\u5728\u8fd1\u8ddd\u79bb\u7684\u65f6\u5019\u6709\u7740\u6700\u9ad8\u7684\u5f3a\u5ea6\uff0c\u4f46\u968f\u7740\u8ddd\u79bb\u589e\u957f\uff0c\u5b83\u7684\u5f3a\u5ea6\u660e\u663e\u51cf\u5f31\uff0c\u5e76\u7f13\u6162\u5730\u5728\u8ddd\u79bb\u5927\u7ea6100\u7684\u65f6\u5019\u5f3a\u5ea6\u63a5\u8fd10 struct Light { vec3 position; vec3 ambient; vec3 diffuse; vec3 specular; float constant; float linear; float quadratic; }; //...\u7701\u7565\u90e8\u5206\u4ee3\u7801 void main() { // ambient vec3 ambient = light.ambient * texture(material.diffuse, TexCoords).rgb; // diffuse vec3 norm = normalize(Normal); vec3 lightDir = normalize(light.position - FragPos); float diff = max(dot(norm, lightDir), 0.0); vec3 diffuse = light.diffuse * diff * texture(material.diffuse, TexCoords).rgb; // specular vec3 viewDir = normalize(viewPos - FragPos); vec3 reflectDir = reflect(-lightDir, norm); float spec = pow(max(dot(viewDir, reflectDir), 0.0), material.shininess); vec3 specular = light.specular * spec * texture(material.specular, TexCoords).rgb; // attenuation float distance = length(light.position - FragPos); float attenuation = 1.0 / (light.constant + light.linear * distance + light.quadratic * (distance * distance)); ambient *= attenuation; diffuse *= attenuation; specular *= attenuation; vec3 result = ambient + diffuse + specular; FragColor = vec4(result, 1.0); } \u5e38\u7528\u6570\u503c # Ogre3D\u7684Wiki \u8ddd\u79bb \u5e38\u6570\u9879 \u4e00\u6b21\u9879 \u4e8c\u6b21\u9879 7 1.0 0.7 1.8 13 1.0 0.35 0.44 20 1.0 0.22 0.20 32 1.0 0.14 0.07 50 1.0 0.09 0.032 65 1.0 0.07 0.017 100 1.0 0.045 0.0075 160 1.0 0.027 0.0028 200 1.0 0.022 0.0019 325 1.0 0.014 0.0007 600 1.0 0.007 0.0002 3250 1.0 0.0014 0.000007 \u805a\u5149\u6e90(Spot Light) # \u805a\u5149\u6e90\u662f\u4ece\u9525\u5f62\u7a7a\u95f4\u4e2d\u7684\u4e00\u4e2a\u5355\u72ec\u7684\u70b9\u5904\u53d1\u51fa\u5149\u7167\u7684\u5149\u6e90\u3002\u9002\u7528\u4e8e\u6a21\u62df\u624b\u7535\u7b52\u3002 OpenGL\u4e2d\u805a\u5149\u662f\u7528\u4e00\u4e2a\u4e16\u754c\u7a7a\u95f4\u4f4d\u7f6e\u3001\u4e00\u4e2a\u65b9\u5411\u548c\u4e00\u4e2a\u5207\u5149\u89d2(Cutoff Angle)\u6765\u8868\u793a\u7684\uff0c\u5207\u5149\u89d2\u6307\u5b9a\u4e86\u805a\u5149\u7684\u534a\u5f84\uff08\u5706\u9525\u7684\u534a\u5f84\uff09\u3002 Back LightDir \uff1a\u4ece\u7247\u6bb5\u6307\u5411\u5149\u6e90\u7684\u5411\u91cf\u3002 SpotDir \uff1a\u805a\u5149\u6240\u6307\u5411\u7684\u65b9\u5411\u3002 Phi \\phi \uff1a\u6307\u5b9a\u4e86\u805a\u5149\u534a\u5f84\u7684\u5207\u5149\u89d2\u3002\u843d\u5728\u8fd9\u4e2a\u89d2\u5ea6\u4e4b\u5916\u7684\u7269\u4f53\u90fd\u4e0d\u4f1a\u88ab\u8fd9\u4e2a\u805a\u5149\u6240\u7167\u4eae\u3002 Theta \\theta \uff1a\u5411\u91cf \\bar{LightDir} \u548c \\bar{SpotDir} \u4e4b\u95f4\u7684\u5939\u89d2\u3002\u5728\u805a\u5149\u6e90\u5185\u90e8\u7684\u8bdd \\theta \u503c\u5e94\u8be5\u6bd4 \\phi \u503c\u5c0f\u3002 \u6240\u4ee5\u6211\u4eec\u8981\u505a\u7684\u5c31\u662f\u8ba1\u7b97\u5411\u91cf \\bar{LightDir} \u548c \\bar{SpotDir} \u7684\u70b9\u79ef\uff0c\u5e76\u5c06\u5b83\u4e0e\u5207\u5149\u89d2 \\phi \u5bf9\u6bd4\u3002 \u5e73\u6ed1/\u8f6f\u5316\u8fb9\u7f18 # \u4e3a\u4e86\u521b\u5efa\u4e00\u79cd\u770b\u8d77\u6765\u8fb9\u7f18\u5e73\u6ed1\u7684\u805a\u5149\uff0c\u6211\u4eec\u9700\u8981\u6a21\u62df\u805a\u5149\u6e90\u6709\u4e00\u4e2a\u5185\u5706\u9525(Inner Cone)\u548c\u4e00\u4e2a\u5916\u5706\u9525(Outer Cone),\u8ba9\u5149\u4ece\u5185\u5706\u9525\u9010\u6e10\u51cf\u6697\uff0c\u76f4\u5230\u5916\u5706\u9525\u7684\u8fb9\u754c\u3002 \u5982\u679c\u7247\u6bb5\u5728 \u5185\u5706\u9525\u4e4b\u5185\uff0c\u5b83\u7684\u5f3a\u5ea6\u662f 1.0 \u5982\u679c\u7247\u6bb5\u5728 \u5916\u5706\u9525\u4e4b\u5916\uff0c\u5b83\u7684\u5f3a\u5ea6\u662f 0.0 \u5982\u679c\u7247\u6bb5\u5728 \u5185\u5916\u5706\u9525\u4e4b\u95f4\uff0c\u5b83\u7684\u5f3a\u5ea6\u662f 0.0 ~ 1.0 \u5f3a\u5ea6\u516c\u5f0f I = \\frac{cos\\theta - cos\\gamma}{cos\\phi - cos\\gamma} \\theta \uff1a\u5411\u91cf \\bar{LightDir} \u548c \\bar{SpotDir} \u4e4b\u95f4\u7684\u5939\u89d2 \\phi \uff1a\u805a\u5149\u534a\u5f84\u7684 \u5185\u5207\u5149\u89d2 \\gamma \uff1a\u805a\u5149\u534a\u5f84\u7684 \u5916\u5207\u5149\u89d2 I \uff1a\u5728\u5f53\u524d\u7247\u6bb5\u805a\u5149\u7684\u5f3a\u5ea6 struct Light { vec3 position; vec3 direction; float cutOff; float outerCutOff; vec3 ambient; vec3 diffuse; vec3 specular; float constant; float linear; float quadratic; }; //... \u7701\u7565\u90e8\u5206\u4ee3\u7801 void main() { // ambient vec3 ambient = light.ambient * texture(material.diffuse, TexCoords).rgb; // diffuse vec3 norm = normalize(Normal); vec3 lightDir = normalize(light.position - FragPos); float diff = max(dot(norm, lightDir), 0.0); vec3 diffuse = light.diffuse * diff * texture(material.diffuse, TexCoords).rgb; // specular vec3 viewDir = normalize(viewPos - FragPos); vec3 reflectDir = reflect(-lightDir, norm); float spec = pow(max(dot(viewDir, reflectDir), 0.0), material.shininess); vec3 specular = light.specular * spec * texture(material.specular, TexCoords).rgb; // spotlight (soft edges) float theta = dot(lightDir, normalize(-light.direction)); float epsilon = (light.cutOff - light.outerCutOff); float intensity = clamp((theta - light.outerCutOff) / epsilon, 0.0, 1.0); diffuse *= intensity; specular *= intensity; // attenuation float distance = length(light.position - FragPos); float attenuation = 1.0 / (light.constant + light.linear * distance + light.quadratic * (distance * distance)); ambient *= attenuation; diffuse *= attenuation; specular *= attenuation; vec3 result = ambient + diffuse + specular; FragColor = vec4(result, 1.0); } \u591a\u5149\u6e90 Shader # #version 330 core out vec4 FragColor; struct Material { sampler2D diffuse; sampler2D specular; float shininess; }; struct DirLight { vec3 direction; vec3 ambient; vec3 diffuse; vec3 specular; }; struct PointLight { vec3 position; float constant; float linear; float quadratic; vec3 ambient; vec3 diffuse; vec3 specular; }; struct SpotLight { vec3 position; vec3 direction; float cutOff; float outerCutOff; float constant; float linear; float quadratic; vec3 ambient; vec3 diffuse; vec3 specular; }; #define NR_POINT_LIGHTS 4 in vec3 FragPos; in vec3 Normal; in vec2 TexCoords; uniform vec3 viewPos; uniform DirLight dirLight; uniform PointLight pointLights[NR_POINT_LIGHTS]; uniform SpotLight spotLight; uniform Material material; // function prototypes vec3 CalcDirLight(DirLight light, vec3 normal, vec3 viewDir); vec3 CalcPointLight(PointLight light, vec3 normal, vec3 fragPos, vec3 viewDir); vec3 CalcSpotLight(SpotLight light, vec3 normal, vec3 fragPos, vec3 viewDir); void main() { // properties vec3 norm = normalize(Normal); vec3 viewDir = normalize(viewPos - FragPos); // == ===================================================== // Our lighting is set up in 3 phases: directional, point lights and an optional flashlight // For each phase, a calculate function is defined that calculates the corresponding color // per lamp. In the main() function we take all the calculated colors and sum them up for // this fragment's final color. // == ===================================================== // phase 1: directional lighting vec3 result = CalcDirLight(dirLight, norm, viewDir); // phase 2: point lights for(int i = 0; i < NR_POINT_LIGHTS; i++) result += CalcPointLight(pointLights[i], norm, FragPos, viewDir); // phase 3: spot light result += CalcSpotLight(spotLight, norm, FragPos, viewDir); FragColor = vec4(result, 1.0); } // calculates the color when using a directional light. vec3 CalcDirLight(DirLight light, vec3 normal, vec3 viewDir) { vec3 lightDir = normalize(-light.direction); // diffuse shading float diff = max(dot(normal, lightDir), 0.0); // specular shading vec3 reflectDir = reflect(-lightDir, normal); float spec = pow(max(dot(viewDir, reflectDir), 0.0), material.shininess); // combine results vec3 ambient = light.ambient * vec3(texture(material.diffuse, TexCoords)); vec3 diffuse = light.diffuse * diff * vec3(texture(material.diffuse, TexCoords)); vec3 specular = light.specular * spec * vec3(texture(material.specular, TexCoords)); return (ambient + diffuse + specular); } // calculates the color when using a point light. vec3 CalcPointLight(PointLight light, vec3 normal, vec3 fragPos, vec3 viewDir) { vec3 lightDir = normalize(light.position - fragPos); // diffuse shading float diff = max(dot(normal, lightDir), 0.0); // specular shading vec3 reflectDir = reflect(-lightDir, normal); float spec = pow(max(dot(viewDir, reflectDir), 0.0), material.shininess); // attenuation float distance = length(light.position - fragPos); float attenuation = 1.0 / (light.constant + light.linear * distance + light.quadratic * (distance * distance)); // combine results vec3 ambient = light.ambient * vec3(texture(material.diffuse, TexCoords)); vec3 diffuse = light.diffuse * diff * vec3(texture(material.diffuse, TexCoords)); vec3 specular = light.specular * spec * vec3(texture(material.specular, TexCoords)); ambient *= attenuation; diffuse *= attenuation; specular *= attenuation; return (ambient + diffuse + specular); } // calculates the color when using a spot light. vec3 CalcSpotLight(SpotLight light, vec3 normal, vec3 fragPos, vec3 viewDir) { vec3 lightDir = normalize(light.position - fragPos); // diffuse shading float diff = max(dot(normal, lightDir), 0.0); // specular shading vec3 reflectDir = reflect(-lightDir, normal); float spec = pow(max(dot(viewDir, reflectDir), 0.0), material.shininess); // attenuation float distance = length(light.position - fragPos); float attenuation = 1.0 / (light.constant + light.linear * distance + light.quadratic * (distance * distance)); // spotlight intensity float theta = dot(lightDir, normalize(-light.direction)); float epsilon = light.cutOff - light.outerCutOff; float intensity = clamp((theta - light.outerCutOff) / epsilon, 0.0, 1.0); // combine results vec3 ambient = light.ambient * vec3(texture(material.diffuse, TexCoords)); vec3 diffuse = light.diffuse * diff * vec3(texture(material.diffuse, TexCoords)); vec3 specular = light.specular * spec * vec3(texture(material.specular, TexCoords)); ambient *= attenuation * intensity; diffuse *= attenuation * intensity; specular *= attenuation * intensity; return (ambient + diffuse + specular); }","title":"\u5149\u6e90"},{"location":"OpenGL/%E5%85%89%E6%BA%90/#_1","text":"\u53c2\u8003 https://learnopengl-cn.github.io/02%20Lighting/05%20Light%20casters/","title":"\u5149\u6e90"},{"location":"OpenGL/%E5%85%89%E6%BA%90/#directional-light","text":"\u5f53\u4e00\u4e2a\u5149\u6e90\u5904\u4e8e\u5f88\u8fdc\u7684\u5730\u65b9\u65f6\uff0c\u6765\u81ea\u5149\u6e90\u7684\u6bcf\u6761\u5149\u7ebf\u5c31\u4f1a\u8fd1\u4f3c\u4e8e\u4e92\u76f8\u5e73\u884c\u3002\u4e0d\u8bba\u7269\u4f53\u548c\u89c2\u5bdf\u8005\u5728\u4ec0\u4e48\u4f4d\u7f6e\uff0c\u770b\u8d77\u6765\u597d\u50cf\u6240\u6709\u7684\u5149\u90fd\u6765\u81ea\u4e8e\u540c\u4e00\u4e2a\u65b9\u5411\u3002\u5f53\u6211\u4eec\u4f7f\u7528\u4e00\u4e2a\u5047\u8bbe\u5149\u6e90\u5904\u4e8e\u65e0\u9650\u8fdc\u5904\u7684\u6a21\u578b\u65f6\uff0c\u5b83\u5c31\u88ab\u79f0\u4e3a\u5b9a\u5411\u5149\uff0c\u56e0\u4e3a\u6240\u6709\u7684\u5149\u7ebf\u90fd\u662f\u5e73\u884c\u7684\uff0c\u6240\u4ee5\u7269\u4f53\u4e0e\u5149\u6e90\u7684\u76f8\u5bf9\u4f4d\u7f6e\u5c31\u4e0d\u91cd\u8981\u4e86\u3002\u9002\u7528\u4e8e\u6a21\u62df\u592a\u9633\u5149\u3002 Back \u6211\u4eec\u53ef\u4ee5\u5b9a\u4e49\u4e00\u4e2a\u65b9\u5411\u5411\u91cf\u800c\u4e0d\u662f\u4f4d\u7f6e\u5411\u91cf\u6765\u6a21\u62df\u4e00\u4e2a\u5b9a\u5411\u5149 struct Light { // vec3 position; // \u4f7f\u7528\u5b9a\u5411\u5149\u5c31\u4e0d\u518d\u9700\u8981\u4e86 vec3 direction; vec3 ambient; vec3 diffuse; vec3 specular; }; ... void main() { vec3 lightDir = normalize(-light.direction); ... } \u6ce8\u610f \u6211\u4eec\u76ee\u524d\u4f7f\u7528\u7684\u5149\u7167\u8ba1\u7b97\u9700\u8981\u4e00\u4e2a\u4ece\u7247\u6bb5\u81f3\u5149\u6e90\u7684\u5149\u7ebf\u65b9\u5411\uff0c\u4f46\u4eba\u4eec\u66f4\u4e60\u60ef\u5b9a\u4e49\u5b9a\u5411\u5149\u4e3a\u4e00\u4e2a\u4ece\u5149\u6e90\u51fa\u53d1\u7684\u5168\u5c40\u65b9\u5411\u3002\u6240\u4ee5\u6211\u4eec\u9700\u8981\u5bf9\u5168\u5c40\u5149\u7167\u65b9\u5411\u5411\u91cf\u53d6\u53cd\u6765\u6539\u53d8\u5b83\u7684\u65b9\u5411\u3002","title":"\u5b9a\u5411\u5149\u6e90(Directional Light)"},{"location":"OpenGL/%E5%85%89%E6%BA%90/#point-light","text":"\u70b9\u5149\u6e90\u662f\u5904\u4e8e\u4e16\u754c\u4e2d\u67d0\u4e00\u4e2a\u4f4d\u7f6e\u7684\u5149\u6e90\uff0c\u5b83\u4f1a\u671d\u7740\u6240\u6709\u65b9\u5411\u53d1\u5149\uff0c\u4f46\u5149\u7ebf\u4f1a\u968f\u7740\u8ddd\u79bb\u9010\u6e10\u8870\u51cf\u3002\u9002\u7528\u4e8e\u6a21\u62df\u706f\u6ce1\u3002","title":"\u70b9\u5149\u6e90(Point Light)"},{"location":"OpenGL/%E5%85%89%E6%BA%90/#_2","text":"\u8870\u51cf(Attenuation)\uff1a\u968f\u7740\u5149\u7ebf\u4f20\u64ad\u8ddd\u79bb\u7684\u589e\u957f\u9010\u6e10\u524a\u51cf\u5149\u7684\u5f3a\u5ea6\u3002 \u5728\u73b0\u5b9e\u4e16\u754c\u4e2d\uff0c\u706f\u6ce1\u5728\u8fd1\u5904\u901a\u5e38\u4f1a\u975e\u5e38\u4eae\uff0c\u4f46\u968f\u7740\u8ddd\u79bb\u7684\u589e\u52a0\u5149\u6e90\u7684\u4eae\u5ea6\u4e00\u5f00\u59cb\u4f1a\u4e0b\u964d\u975e\u5e38\u5feb\uff0c\u4f46\u5728\u8fdc\u5904\u65f6\u5269\u4f59\u7684\u5149\u5f3a\u5ea6\u5c31\u4f1a\u4e0b\u964d\u7684\u975e\u5e38\u7f13\u6162\u4e86\u3002 \u8870\u51cf\u516c\u5f0f F_{att} = \\frac{1.0}{K_c + K_l * d + K_q * d^2} d\uff1a\u7247\u6bb5\u5230\u5149\u6e90\u7684\u8ddd\u79bb K_c \uff1a\u5e38\u6570\u9879\u3002\u901a\u5e38\u4e3a1.0\uff0c\u5b83\u7684\u4e3b\u8981\u4f5c\u7528\u662f\u4fdd\u8bc1\u5206\u6bcd\u6c38\u8fdc\u5927\u4e8e1\uff0c\u5426\u5219\u5728\u67d0\u4e9b\u8ddd\u79bb\u4e0a\u5b83\u53cd\u800c\u4f1a\u589e\u52a0\u5f3a\u5ea6\u3002 K_l \uff1a\u4e00\u6b21\u9879\u3002\u4e0e\u8ddd\u79bb\u503c\u76f8\u4e58\uff0c\u4fdd\u8bc1\u5149\u4ee5\u7ebf\u6027\u7684\u65b9\u5f0f\u51cf\u5c11\u5f3a\u5ea6\u3002 K_q \uff1a\u4e8c\u6b21\u9879\u3002\u4e0e\u8ddd\u79bb\u7684\u5e73\u65b9\u76f8\u4e58\uff0c\u5728\u8ddd\u79bb\u6bd4\u8f83\u5c0f\u7684\u65f6\u5019\u5f71\u54cd\u4f1a\u6bd4\u4e00\u6b21\u9879\u5c0f\u5f88\u591a\uff0c\u4f46\u5f53\u8ddd\u79bb\u503c\u6bd4\u8f83\u5927\u7684\u65f6\u5019\u5b83\u5c31\u4f1a\u6bd4\u4e00\u6b21\u9879\u66f4\u5927\u4e86\u3002 Back \u4e0b\u56fe\u53ef\u4ee5\u770b\u5230\u5149\u5728\u8fd1\u8ddd\u79bb\u7684\u65f6\u5019\u6709\u7740\u6700\u9ad8\u7684\u5f3a\u5ea6\uff0c\u4f46\u968f\u7740\u8ddd\u79bb\u589e\u957f\uff0c\u5b83\u7684\u5f3a\u5ea6\u660e\u663e\u51cf\u5f31\uff0c\u5e76\u7f13\u6162\u5730\u5728\u8ddd\u79bb\u5927\u7ea6100\u7684\u65f6\u5019\u5f3a\u5ea6\u63a5\u8fd10 struct Light { vec3 position; vec3 ambient; vec3 diffuse; vec3 specular; float constant; float linear; float quadratic; }; //...\u7701\u7565\u90e8\u5206\u4ee3\u7801 void main() { // ambient vec3 ambient = light.ambient * texture(material.diffuse, TexCoords).rgb; // diffuse vec3 norm = normalize(Normal); vec3 lightDir = normalize(light.position - FragPos); float diff = max(dot(norm, lightDir), 0.0); vec3 diffuse = light.diffuse * diff * texture(material.diffuse, TexCoords).rgb; // specular vec3 viewDir = normalize(viewPos - FragPos); vec3 reflectDir = reflect(-lightDir, norm); float spec = pow(max(dot(viewDir, reflectDir), 0.0), material.shininess); vec3 specular = light.specular * spec * texture(material.specular, TexCoords).rgb; // attenuation float distance = length(light.position - FragPos); float attenuation = 1.0 / (light.constant + light.linear * distance + light.quadratic * (distance * distance)); ambient *= attenuation; diffuse *= attenuation; specular *= attenuation; vec3 result = ambient + diffuse + specular; FragColor = vec4(result, 1.0); }","title":"\u8870\u51cf"},{"location":"OpenGL/%E5%85%89%E6%BA%90/#_3","text":"Ogre3D\u7684Wiki \u8ddd\u79bb \u5e38\u6570\u9879 \u4e00\u6b21\u9879 \u4e8c\u6b21\u9879 7 1.0 0.7 1.8 13 1.0 0.35 0.44 20 1.0 0.22 0.20 32 1.0 0.14 0.07 50 1.0 0.09 0.032 65 1.0 0.07 0.017 100 1.0 0.045 0.0075 160 1.0 0.027 0.0028 200 1.0 0.022 0.0019 325 1.0 0.014 0.0007 600 1.0 0.007 0.0002 3250 1.0 0.0014 0.000007","title":"\u5e38\u7528\u6570\u503c"},{"location":"OpenGL/%E5%85%89%E6%BA%90/#spot-light","text":"\u805a\u5149\u6e90\u662f\u4ece\u9525\u5f62\u7a7a\u95f4\u4e2d\u7684\u4e00\u4e2a\u5355\u72ec\u7684\u70b9\u5904\u53d1\u51fa\u5149\u7167\u7684\u5149\u6e90\u3002\u9002\u7528\u4e8e\u6a21\u62df\u624b\u7535\u7b52\u3002 OpenGL\u4e2d\u805a\u5149\u662f\u7528\u4e00\u4e2a\u4e16\u754c\u7a7a\u95f4\u4f4d\u7f6e\u3001\u4e00\u4e2a\u65b9\u5411\u548c\u4e00\u4e2a\u5207\u5149\u89d2(Cutoff Angle)\u6765\u8868\u793a\u7684\uff0c\u5207\u5149\u89d2\u6307\u5b9a\u4e86\u805a\u5149\u7684\u534a\u5f84\uff08\u5706\u9525\u7684\u534a\u5f84\uff09\u3002 Back LightDir \uff1a\u4ece\u7247\u6bb5\u6307\u5411\u5149\u6e90\u7684\u5411\u91cf\u3002 SpotDir \uff1a\u805a\u5149\u6240\u6307\u5411\u7684\u65b9\u5411\u3002 Phi \\phi \uff1a\u6307\u5b9a\u4e86\u805a\u5149\u534a\u5f84\u7684\u5207\u5149\u89d2\u3002\u843d\u5728\u8fd9\u4e2a\u89d2\u5ea6\u4e4b\u5916\u7684\u7269\u4f53\u90fd\u4e0d\u4f1a\u88ab\u8fd9\u4e2a\u805a\u5149\u6240\u7167\u4eae\u3002 Theta \\theta \uff1a\u5411\u91cf \\bar{LightDir} \u548c \\bar{SpotDir} \u4e4b\u95f4\u7684\u5939\u89d2\u3002\u5728\u805a\u5149\u6e90\u5185\u90e8\u7684\u8bdd \\theta \u503c\u5e94\u8be5\u6bd4 \\phi \u503c\u5c0f\u3002 \u6240\u4ee5\u6211\u4eec\u8981\u505a\u7684\u5c31\u662f\u8ba1\u7b97\u5411\u91cf \\bar{LightDir} \u548c \\bar{SpotDir} \u7684\u70b9\u79ef\uff0c\u5e76\u5c06\u5b83\u4e0e\u5207\u5149\u89d2 \\phi \u5bf9\u6bd4\u3002","title":"\u805a\u5149\u6e90(Spot Light)"},{"location":"OpenGL/%E5%85%89%E6%BA%90/#_4","text":"\u4e3a\u4e86\u521b\u5efa\u4e00\u79cd\u770b\u8d77\u6765\u8fb9\u7f18\u5e73\u6ed1\u7684\u805a\u5149\uff0c\u6211\u4eec\u9700\u8981\u6a21\u62df\u805a\u5149\u6e90\u6709\u4e00\u4e2a\u5185\u5706\u9525(Inner Cone)\u548c\u4e00\u4e2a\u5916\u5706\u9525(Outer Cone),\u8ba9\u5149\u4ece\u5185\u5706\u9525\u9010\u6e10\u51cf\u6697\uff0c\u76f4\u5230\u5916\u5706\u9525\u7684\u8fb9\u754c\u3002 \u5982\u679c\u7247\u6bb5\u5728 \u5185\u5706\u9525\u4e4b\u5185\uff0c\u5b83\u7684\u5f3a\u5ea6\u662f 1.0 \u5982\u679c\u7247\u6bb5\u5728 \u5916\u5706\u9525\u4e4b\u5916\uff0c\u5b83\u7684\u5f3a\u5ea6\u662f 0.0 \u5982\u679c\u7247\u6bb5\u5728 \u5185\u5916\u5706\u9525\u4e4b\u95f4\uff0c\u5b83\u7684\u5f3a\u5ea6\u662f 0.0 ~ 1.0 \u5f3a\u5ea6\u516c\u5f0f I = \\frac{cos\\theta - cos\\gamma}{cos\\phi - cos\\gamma} \\theta \uff1a\u5411\u91cf \\bar{LightDir} \u548c \\bar{SpotDir} \u4e4b\u95f4\u7684\u5939\u89d2 \\phi \uff1a\u805a\u5149\u534a\u5f84\u7684 \u5185\u5207\u5149\u89d2 \\gamma \uff1a\u805a\u5149\u534a\u5f84\u7684 \u5916\u5207\u5149\u89d2 I \uff1a\u5728\u5f53\u524d\u7247\u6bb5\u805a\u5149\u7684\u5f3a\u5ea6 struct Light { vec3 position; vec3 direction; float cutOff; float outerCutOff; vec3 ambient; vec3 diffuse; vec3 specular; float constant; float linear; float quadratic; }; //... \u7701\u7565\u90e8\u5206\u4ee3\u7801 void main() { // ambient vec3 ambient = light.ambient * texture(material.diffuse, TexCoords).rgb; // diffuse vec3 norm = normalize(Normal); vec3 lightDir = normalize(light.position - FragPos); float diff = max(dot(norm, lightDir), 0.0); vec3 diffuse = light.diffuse * diff * texture(material.diffuse, TexCoords).rgb; // specular vec3 viewDir = normalize(viewPos - FragPos); vec3 reflectDir = reflect(-lightDir, norm); float spec = pow(max(dot(viewDir, reflectDir), 0.0), material.shininess); vec3 specular = light.specular * spec * texture(material.specular, TexCoords).rgb; // spotlight (soft edges) float theta = dot(lightDir, normalize(-light.direction)); float epsilon = (light.cutOff - light.outerCutOff); float intensity = clamp((theta - light.outerCutOff) / epsilon, 0.0, 1.0); diffuse *= intensity; specular *= intensity; // attenuation float distance = length(light.position - FragPos); float attenuation = 1.0 / (light.constant + light.linear * distance + light.quadratic * (distance * distance)); ambient *= attenuation; diffuse *= attenuation; specular *= attenuation; vec3 result = ambient + diffuse + specular; FragColor = vec4(result, 1.0); }","title":"\u5e73\u6ed1/\u8f6f\u5316\u8fb9\u7f18"},{"location":"OpenGL/%E5%85%89%E6%BA%90/#shader","text":"#version 330 core out vec4 FragColor; struct Material { sampler2D diffuse; sampler2D specular; float shininess; }; struct DirLight { vec3 direction; vec3 ambient; vec3 diffuse; vec3 specular; }; struct PointLight { vec3 position; float constant; float linear; float quadratic; vec3 ambient; vec3 diffuse; vec3 specular; }; struct SpotLight { vec3 position; vec3 direction; float cutOff; float outerCutOff; float constant; float linear; float quadratic; vec3 ambient; vec3 diffuse; vec3 specular; }; #define NR_POINT_LIGHTS 4 in vec3 FragPos; in vec3 Normal; in vec2 TexCoords; uniform vec3 viewPos; uniform DirLight dirLight; uniform PointLight pointLights[NR_POINT_LIGHTS]; uniform SpotLight spotLight; uniform Material material; // function prototypes vec3 CalcDirLight(DirLight light, vec3 normal, vec3 viewDir); vec3 CalcPointLight(PointLight light, vec3 normal, vec3 fragPos, vec3 viewDir); vec3 CalcSpotLight(SpotLight light, vec3 normal, vec3 fragPos, vec3 viewDir); void main() { // properties vec3 norm = normalize(Normal); vec3 viewDir = normalize(viewPos - FragPos); // == ===================================================== // Our lighting is set up in 3 phases: directional, point lights and an optional flashlight // For each phase, a calculate function is defined that calculates the corresponding color // per lamp. In the main() function we take all the calculated colors and sum them up for // this fragment's final color. // == ===================================================== // phase 1: directional lighting vec3 result = CalcDirLight(dirLight, norm, viewDir); // phase 2: point lights for(int i = 0; i < NR_POINT_LIGHTS; i++) result += CalcPointLight(pointLights[i], norm, FragPos, viewDir); // phase 3: spot light result += CalcSpotLight(spotLight, norm, FragPos, viewDir); FragColor = vec4(result, 1.0); } // calculates the color when using a directional light. vec3 CalcDirLight(DirLight light, vec3 normal, vec3 viewDir) { vec3 lightDir = normalize(-light.direction); // diffuse shading float diff = max(dot(normal, lightDir), 0.0); // specular shading vec3 reflectDir = reflect(-lightDir, normal); float spec = pow(max(dot(viewDir, reflectDir), 0.0), material.shininess); // combine results vec3 ambient = light.ambient * vec3(texture(material.diffuse, TexCoords)); vec3 diffuse = light.diffuse * diff * vec3(texture(material.diffuse, TexCoords)); vec3 specular = light.specular * spec * vec3(texture(material.specular, TexCoords)); return (ambient + diffuse + specular); } // calculates the color when using a point light. vec3 CalcPointLight(PointLight light, vec3 normal, vec3 fragPos, vec3 viewDir) { vec3 lightDir = normalize(light.position - fragPos); // diffuse shading float diff = max(dot(normal, lightDir), 0.0); // specular shading vec3 reflectDir = reflect(-lightDir, normal); float spec = pow(max(dot(viewDir, reflectDir), 0.0), material.shininess); // attenuation float distance = length(light.position - fragPos); float attenuation = 1.0 / (light.constant + light.linear * distance + light.quadratic * (distance * distance)); // combine results vec3 ambient = light.ambient * vec3(texture(material.diffuse, TexCoords)); vec3 diffuse = light.diffuse * diff * vec3(texture(material.diffuse, TexCoords)); vec3 specular = light.specular * spec * vec3(texture(material.specular, TexCoords)); ambient *= attenuation; diffuse *= attenuation; specular *= attenuation; return (ambient + diffuse + specular); } // calculates the color when using a spot light. vec3 CalcSpotLight(SpotLight light, vec3 normal, vec3 fragPos, vec3 viewDir) { vec3 lightDir = normalize(light.position - fragPos); // diffuse shading float diff = max(dot(normal, lightDir), 0.0); // specular shading vec3 reflectDir = reflect(-lightDir, normal); float spec = pow(max(dot(viewDir, reflectDir), 0.0), material.shininess); // attenuation float distance = length(light.position - fragPos); float attenuation = 1.0 / (light.constant + light.linear * distance + light.quadratic * (distance * distance)); // spotlight intensity float theta = dot(lightDir, normalize(-light.direction)); float epsilon = light.cutOff - light.outerCutOff; float intensity = clamp((theta - light.outerCutOff) / epsilon, 0.0, 1.0); // combine results vec3 ambient = light.ambient * vec3(texture(material.diffuse, TexCoords)); vec3 diffuse = light.diffuse * diff * vec3(texture(material.diffuse, TexCoords)); vec3 specular = light.specular * spec * vec3(texture(material.specular, TexCoords)); ambient *= attenuation * intensity; diffuse *= attenuation * intensity; specular *= attenuation * intensity; return (ambient + diffuse + specular); }","title":"\u591a\u5149\u6e90 Shader"},{"location":"OpenGL/%E5%85%89%E7%85%A7/","text":"\u5149\u7167 # \u53c2\u8003 https://learnopengl-cn.github.io/02%20Lighting/02%20Basic%20Lighting/ \u73b0\u5b9e\u4e16\u754c\u7684\u5149\u7167\u662f\u6781\u5176\u590d\u6742\u7684\uff0c\u800c\u4e14\u4f1a\u53d7\u5230\u8bf8\u591a\u56e0\u7d20\u7684\u5f71\u54cd\uff0c\u8fd9\u662f\u6211\u4eec\u6709\u9650\u7684\u8ba1\u7b97\u80fd\u529b\u6240\u65e0\u6cd5\u6a21\u62df\u7684\u3002\u56e0\u6b64OpenGL\u7684\u5149\u7167\u4f7f\u7528\u7684\u662f\u7b80\u5316\u7684\u6a21\u578b\uff0c\u5bf9\u73b0\u5b9e\u7684\u60c5\u51b5\u8fdb\u884c\u8fd1\u4f3c\uff0c\u8fd9\u6837\u5904\u7406\u8d77\u6765\u4f1a\u66f4\u5bb9\u6613\u4e00\u4e9b\uff0c\u800c\u4e14\u770b\u8d77\u6765\u4e5f\u5dee\u4e0d\u591a\u4e00\u6837\u3002 \u8fd9\u4e9b\u5149\u7167\u6a21\u578b\u90fd\u662f\u57fa\u4e8e\u6211\u4eec\u5bf9\u5149\u7684\u7269\u7406\u7279\u6027\u7684\u7406\u89e3\u3002\u5176\u4e2d\u4e00\u4e2a\u6a21\u578b\u88ab\u79f0\u4e3a\u51af\u6c0f\u5149\u7167\u6a21\u578b(Phong Lighting Model)\u3002 \u51af\u6c0f\u5149\u7167\u6a21\u578b\u7684\u4e3b\u8981\u7ed3\u6784\u75313\u4e2a\u5206\u91cf\u7ec4\u6210\uff1a\u73af\u5883(Ambient)\u3001\u6f2b\u53cd\u5c04(Diffuse)\u548c\u955c\u9762(Specular)\u5149\u7167 \u73af\u5883\u5149\u7167(Ambient Lighting)\uff1a\u5373\u4f7f\u5728\u9ed1\u6697\u7684\u60c5\u51b5\u4e0b\uff0c\u4e16\u754c\u4e0a\u901a\u5e38\u4e5f\u4ecd\u7136\u6709\u4e00\u4e9b\u5149\u4eae\uff08\u6708\u4eae\u3001\u8fdc\u5904\u7684\u5149\uff09\uff0c\u6240\u4ee5\u7269\u4f53\u51e0\u4e4e\u6c38\u8fdc\u4e0d\u4f1a\u662f\u5b8c\u5168\u9ed1\u6697\u7684\u3002\u4e3a\u4e86\u6a21\u62df\u8fd9\u4e2a\uff0c\u6211\u4eec\u4f1a\u4f7f\u7528\u4e00\u4e2a\u73af\u5883\u5149\u7167\u5e38\u91cf\uff0c\u5b83\u6c38\u8fdc\u4f1a\u7ed9\u7269\u4f53\u4e00\u4e9b\u989c\u8272\u3002 \u6f2b\u53cd\u5c04\u5149\u7167(Diffuse Lighting)\uff1a\u6a21\u62df\u5149\u6e90\u5bf9\u7269\u4f53\u7684\u65b9\u5411\u6027\u5f71\u54cd(Directional Impact)\u3002\u5b83\u662f\u51af\u6c0f\u5149\u7167\u6a21\u578b\u4e2d\u89c6\u89c9\u4e0a\u6700\u663e\u8457\u7684\u5206\u91cf\u3002\u7269\u4f53\u7684\u67d0\u4e00\u90e8\u5206\u8d8a\u662f\u6b63\u5bf9\u7740\u5149\u6e90\uff0c\u5b83\u5c31\u4f1a\u8d8a\u4eae\u3002 \u955c\u9762\u5149\u7167(Specular Lighting)\uff1a\u6a21\u62df\u6709\u5149\u6cfd\u7269\u4f53\u4e0a\u9762\u51fa\u73b0\u7684\u4eae\u70b9\u3002\u955c\u9762\u5149\u7167\u7684\u989c\u8272\u76f8\u6bd4\u4e8e\u7269\u4f53\u7684\u989c\u8272\u4f1a\u66f4\u503e\u5411\u4e8e\u5149\u7684\u989c\u8272\u3002 \u73af\u5883\u5149\u7167(Ambient Lighting) # void main() { float ambientStrength = 0.1; //\u73af\u5883\u56e0\u5b50 vec3 ambient = ambientStrength * lightColor; vec3 result = ambient * objectColor; FragColor = vec4(result, 1.0); } \u6f2b\u53cd\u5c04\u5149\u7167(Diffuse Lighting) # \u6f2b\u53cd\u5c04\u5149\u7167\u4f7f\u7269\u4f53\u4e0a\u4e0e\u5149\u7ebf\u65b9\u5411\u8d8a\u63a5\u8fd1\u7684\u7247\u6bb5(\u5149\u7ebf\u548c\u7247\u6bb5\u7684\u89d2\u5ea6\u8d8a\u5c0f)\u8d8a\u80fd\u4ece\u5149\u6e90\u5904\u83b7\u5f97\u66f4\u591a\u7684\u4eae\u5ea6\uff0c\u5982\u679c\u5149\u7ebf\u5782\u76f4\u4e8e\u7269\u4f53\u8868\u9762\uff0c\u8fd9\u675f\u5149\u5bf9\u7269\u4f53\u7684\u5f71\u54cd\u4f1a\u6700\u5927\u5316\uff08\u5373\u8fbe\u5230\u6700\u4eae\uff09\u3002\u4e3a\u4e86\u80fd\u591f\u66f4\u597d\u7684\u7406\u89e3\u6f2b\u53cd\u5c04\u5149\u7167\uff0c\u8bf7\u770b\u4e0b\u56fe\uff1a Back \u6cd5\u5411\u91cf(Normal Vector) # \u4e3a\u4e86\u6d4b\u91cf\u5149\u7ebf\u548c\u7247\u6bb5\u7684\u89d2\u5ea6\uff0c\u6211\u4eec\u4f7f\u7528\u6cd5\u5411\u91cf(Normal Vector)\uff0c\u5b83\u662f\u4e00\u4e2a\u5782\u76f4\u4e8e\u9876\u70b9\u8868\u9762\u7684\uff08\u5355\u4f4d\uff09\u5411\u91cf\uff08\u4e0a\u56fe\u4e2d\u4ee5\u9ec4\u8272\u7bad\u5934\u8868\u793a\uff09\uff0c\u8fd9\u4e24\u4e2a\u5411\u91cf\u4e4b\u95f4\u7684\u89d2\u5ea6\u5f88\u5bb9\u6613\u5c31\u80fd\u591f\u901a\u8fc7\u70b9\u4e58\u8ba1\u7b97\u51fa\u6765\u3002\u53ef\u4ee5\u4f7f\u7528\u6cd5\u7ebf\u8d34\u56fe\u6765\u5b58\u50a8\u9876\u70b9\u7684\u6cd5\u7ebf\u3002 \u5411\u91cf\u5939\u89d2 \\bar{L} : \u5149\u7167\u5411\u91cf \\bar{N} : \u6cd5\u7ebf\u5411\u91cf || \\bar{L} ||: \u5149\u7167\u5411\u91cf\u7684\u6a21 || \\bar{N} ||: \u6cd5\u7ebf\u5411\u91cf\u7684\u6a21 \\cos \\theta = \\frac{\\bar{L} \\cdot \\bar{N}}{||\\bar{L}|| \\cdot ||\\bar{N}||} \u6ce8\uff1a\u53ef\u4ee5\u5c06 \\bar{L} \u548c \\bar{N} \u8f6c\u6362\u4e3a\u5355\u4f4d\u5411\u91cf\uff0c\u8fd9\u6837 || \\bar{L} ||\u548c|| \\bar{N} || \u5747\u4e3a1 //\u4e24\u4e2a\u5411\u91cf\u4e4b\u95f4\u7684\u89d2\u5ea6\u5927\u4e8e90\u5ea6\u65f6\uff0c\u70b9\u4e58\u7ed3\u679c\u4e3a\u8d1f\u6570\uff0c\u5bfc\u81f4\u6f2b\u53cd\u5c04\u5206\u91cf\u4e3a\u8d1f\u6570\u3002\u8d1f\u6570\u989c\u8272\u7684\u5149\u7167\u6ca1\u6709\u610f\u4e49\u3002 float diff = max(dot(norm, lightDir), 0.0); vec3 diffuse = diff * lightColor; vec3 result = (ambient + diffuse) * objectColor; FragColor = vec4(result, 1.0); \u6cd5\u7ebf\u77e9\u9635(Normal Matrix) # \u5f53\u5e94\u7528\u4e00\u4e2a\u4e0d\u7b49\u6bd4\u7f29\u653e\u65f6\uff0c\u6cd5\u5411\u91cf\u5c31\u4e0d\u4f1a\u518d\u5782\u76f4\u4e8e\u5bf9\u5e94\u7684\u8868\u9762\uff0c\u8fd9\u6837\u5149\u7167\u5c31\u4f1a\u88ab\u7834\u574f\u3002\u4fee\u590d\u8fd9\u4e2a\u884c\u4e3a\u7684\u8bc0\u7a8d\u662f\u4f7f\u7528\u4e00\u4e2a\u4e3a\u6cd5\u5411\u91cf\u4e13\u95e8\u5b9a\u5236\u7684\u6a21\u578b\u77e9\u9635\u3002\u8fd9\u4e2a\u77e9\u9635\u79f0\u4e4b\u4e3a \u6cd5\u7ebf\u77e9\u9635(Normal Matrix) \u3002\u5b83\u4f7f\u7528\u4e86\u4e00\u4e9b\u7ebf\u6027\u4ee3\u6570\u7684\u64cd\u4f5c\u6765\u79fb\u9664\u5bf9\u6cd5\u5411\u91cf\u9519\u8bef\u7f29\u653e\u7684\u5f71\u54cd\u3002 \u6cd5\u7ebf\u77e9\u9635\u88ab\u5b9a\u4e49\u4e3a\u300c\u6a21\u578b\u77e9\u9635\u7684\u9006\u77e9\u9635\u7684\u8f6c\u7f6e\u77e9\u9635\u300d Back \u6ce8\u610f \u5373\u4f7f\u662f\u5bf9\u4e8e\u7740\u8272\u5668\u6765\u8bf4\uff0c\u9006\u77e9\u9635\u4e5f\u662f\u4e00\u4e2a\u5f00\u9500\u6bd4\u8f83\u5927\u7684\u8fd0\u7b97\uff0c\u56e0\u6b64\uff0c\u5e94\u8be5\u907f\u514d\u5728\u7740\u8272\u5668\u4e2d\u8fdb\u884c\u9006\u77e9\u9635\u8fd0\u7b97\uff0c\u5728\u7ed8\u5236\u4e4b\u524d\u6700\u597d\u7528CPU\u8ba1\u7b97\u51fa\u6cd5\u7ebf\u77e9\u9635\uff0c\u7136\u540e\u901a\u8fc7uniform\u628a\u503c\u4f20\u9012\u7ed9\u7740\u8272\u5668\u3002 \u955c\u9762\u5149\u7167(Specular Lighting) # \u548c\u6f2b\u53cd\u5c04\u5149\u7167\u4e00\u6837\uff0c\u955c\u9762\u5149\u7167\u4e5f\u662f\u5149\u7684\u65b9\u5411\u5411\u91cf\u548c\u7269\u4f53\u7684\u6cd5\u5411\u91cf\u6765\u51b3\u5b9a\u7684\u3002\u955c\u9762\u5149\u7167\u662f\u57fa\u4e8e\u5149\u7684\u53cd\u5c04\u7279\u6027\uff08\u53cd\u5c04\u89d2\u7b49\u4e8e\u5165\u5c04\u89d2\uff09\u3002 \u4f46\u662f\u5b83\u4e5f\u4f9d\u8d56\u4e8e\u89c2\u5bdf\u65b9\u5411\uff0c\u53cd\u5c04\u5411\u91cf\u548c\u89c6\u7ebf\u65b9\u5411\u7684\u5939\u89d2\u8d8a\u5c0f\uff0c\u955c\u9762\u5149\u7684\u5f71\u54cd\u5c31\u4f1a\u8d8a\u5927\uff08\u5f62\u6210\u9ad8\u5149\uff09\u3002 Back float specularStrength = 0.5; vec3 viewDir = normalize(viewPos - FragPos); vec3 reflectDir = reflect(-lightDir, norm); //32\u6b21\u5e42\u3002\u8fd9\u4e2a32\u662f\u9ad8\u5149\u7684\u53cd\u5149\u5ea6(Shininess)\u3002 //\u4e00\u4e2a\u7269\u4f53\u7684\u53cd\u5149\u5ea6\u8d8a\u9ad8\uff0c\u53cd\u5c04\u5149\u7684\u80fd\u529b\u8d8a\u5f3a\uff0c\u6563\u5c04\u5f97\u8d8a\u5c11\uff0c\u9ad8\u5149\u70b9\u5c31\u4f1a\u8d8a\u5c0f\u3002 float spec = pow(max(dot(viewDir, reflectDir), 0.0), 32); vec3 specular = specularStrength * spec * lightColor; vec3 result = (ambient + diffuse + specular) * objectColor; FragColor = vec4(result, 1.0); \u4e0d\u540c \u53cd\u5149\u5ea6 \u7684\u89c6\u89c9\u6548\u679c\u5f71\u54cd Demo # //fragment shader #version 330 core out vec4 FragColor; in vec3 Normal; in vec3 FragPos; uniform vec3 lightPos; uniform vec3 viewPos; uniform vec3 lightColor; uniform vec3 objectColor; void main() { // ambient float ambientStrength = 0.1; vec3 ambient = ambientStrength * lightColor; // diffuse vec3 norm = normalize(Normal); vec3 lightDir = normalize(lightPos - FragPos); float diff = max(dot(norm, lightDir), 0.0); vec3 diffuse = diff * lightColor; // specular float specularStrength = 0.5; vec3 viewDir = normalize(viewPos - FragPos); vec3 reflectDir = reflect(-lightDir, norm); float spec = pow(max(dot(viewDir, reflectDir), 0.0), 32); vec3 specular = specularStrength * spec * lightColor; vec3 result = (ambient + diffuse + specular) * objectColor; FragColor = vec4(result, 1.0); } \u9ad8\u7ea7\u5149\u7167 # \u51af\u6c0f\u5149\u7167\u4e0d\u4ec5\u5bf9\u771f\u5b9e\u5149\u7167\u6709\u5f88\u597d\u7684\u8fd1\u4f3c\uff0c\u800c\u4e14\u6027\u80fd\u4e5f\u5f88\u9ad8\u3002\u4f46\u662f\u5b83\u7684\u955c\u9762\u53cd\u5c04\u4f1a\u5728\u4e00\u4e9b\u60c5\u51b5\u4e0b\u51fa\u73b0\u95ee\u9898\uff0c\u5f53\u89c2\u5bdf\u5411\u91cf\u548c\u53cd\u5c04\u5411\u91cf\u95f4\u7684\u5939\u89d2\u5927\u4e8e90\u5ea6\u65f6\u3002\u70b9\u4e58\u7684\u7ed3\u679c\u4e3a\u8d1f\u6570\uff0c\u955c\u9762\u5149\u5206\u91cf\u4f1a\u53d8\u4e3a0.0\u3002\u5b9e\u9645\u4e0a\u5728\u8003\u8651\u955c\u9762\u9ad8\u5149\u65f6\uff0c\u6211\u4eec\u6d4b\u91cf\u7684\u89d2\u5ea6\u5e76\u4e0d\u662f\u5149\u6e90\u4e0e\u6cd5\u7ebf\u7684\u5939\u89d2\uff0c\u800c\u662f\u89c6\u7ebf\u4e0e\u53cd\u5c04\u5149\u7ebf\u5411\u91cf\u7684\u5939\u89d2\u3002 Back Blinn-Phong\u7740\u8272\u6a21\u578b # Blinn-Phong\u6a21\u578b\u4e0e\u51af\u6c0f\u6a21\u578b\u975e\u5e38\u76f8\u4f3c\uff0c\u4f46\u662f\u5b83\u5bf9\u955c\u9762\u5149\u6a21\u578b\u7684\u5904\u7406\u4e0a\u6709\u4e00\u4e9b\u4e0d\u540c\uff0cBlinn-Phong\u6a21\u578b\u4e0d\u518d\u4f9d\u8d56\u4e8e\u53cd\u5c04\u5411\u91cf\uff0c\u800c\u662f\u91c7\u7528\u4e86\u6240\u8c13\u7684\u534a\u7a0b\u5411\u91cf(Halfway Vector)\uff0c\u5373\u5149\u7ebf\u4e0e\u89c6\u7ebf\u5939\u89d2\u4e00\u534a\u65b9\u5411\u4e0a\u7684\u4e00\u4e2a\u5355\u4f4d\u5411\u91cf\uff0c\u8fd9\u6837\u4e0d\u7ba1\u4ec0\u4e48\u60c5\u51b5\uff0c\u534a\u7a0b\u5411\u91cf\u4e0e\u8868\u9762\u6cd5\u7ebf\u4e4b\u95f4\u7684\u5939\u89d2\u90fd\u4e0d\u4f1a\u8d85\u8fc790\u5ea6\uff08\u9664\u975e\u5149\u6e90\u5728\u8868\u9762\u4ee5\u4e0b\uff09\u3002\u5f53\u534a\u7a0b\u5411\u91cf\u4e0e\u6cd5\u7ebf\u5411\u91cf\u8d8a\u63a5\u8fd1\u65f6\uff0c\u955c\u9762\u5149\u5206\u91cf\u5c31\u8d8a\u5927\u3002\u5b83\u4ea7\u751f\u7684\u6548\u679c\u4f1a\u4e0e\u51af\u6c0f\u5149\u7167\u6709\u4e9b\u8bb8\u4e0d\u540c\uff0c\u4f46\u662f\u5927\u90e8\u5206\u60c5\u51b5\u4e0b\u770b\u8d77\u6765\u4f1a\u66f4\u81ea\u7136\u4e00\u70b9\uff0c\u7279\u522b\u662f\u4f4e\u9ad8\u5149\u7684\u533a\u57df\u3002Blinn-Phong\u7740\u8272\u6a21\u578b\u6b63\u662f\u65e9\u671f\u56fa\u5b9a\u6e32\u67d3\u7ba1\u7ebf\u65f6\u4ee3\u65f6OpenGL\u6240\u91c7\u7528\u7684\u5149\u7167\u6a21\u578b\u3002 Back \u516c\u5f0f \\bar{H} = \\frac{\\bar{L} + \\bar{V}}{||\\bar{L} + \\bar{V}||} \u5bf9\u5e94\u7684GLSL\u4ee3\u7801 vec3 lightDir = normalize(lightPos - FragPos); vec3 viewDir = normalize(viewPos - FragPos); vec3 halfwayDir = normalize(lightDir + viewDir); float spec = pow(max(dot(normal, halfwayDir), 0.0), shininess); vec3 specular = lightColor * spec; \u5149\u7167\u5bf9\u6bd4 \u51af\u6c0f\u6a21\u578b \u4e0e Blinn-Phong\u6a21\u578b \u6709\u4e00\u4e9b\u7ec6\u5fae\u7684\u5dee\u522b \u534a\u7a0b\u5411\u91cf\u4e0e\u8868\u9762\u6cd5\u7ebf\u7684\u5939\u89d2\u901a\u5e38\u4f1a\u5c0f\u4e8e\u89c2\u5bdf\u4e0e\u53cd\u5c04\u5411\u91cf\u7684\u5939\u89d2\u3002\u6240\u4ee5\uff0c\u5982\u679c\u8981\u83b7\u5f97\u548c\u51af\u6c0f\u7740\u8272\u7c7b\u4f3c\u7684\u6548\u679c\uff0c\u5c31\u5fc5\u987b\u5728\u4f7f\u7528Blinn-Phong\u6a21\u578b\u65f6\u5c06\u955c\u9762\u53cd\u5149\u5ea6\u8bbe\u7f6e\u66f4\u9ad8\u4e00\u70b9\u3002\u901a\u5e38\u4f1a\u9009\u62e9\u51af\u6c0f\u7740\u8272\u65f6\u53cd\u5149\u5ea6\u5206\u91cf\u76842\u52304\u500d\u3002","title":"\u5149\u7167"},{"location":"OpenGL/%E5%85%89%E7%85%A7/#_1","text":"\u53c2\u8003 https://learnopengl-cn.github.io/02%20Lighting/02%20Basic%20Lighting/ \u73b0\u5b9e\u4e16\u754c\u7684\u5149\u7167\u662f\u6781\u5176\u590d\u6742\u7684\uff0c\u800c\u4e14\u4f1a\u53d7\u5230\u8bf8\u591a\u56e0\u7d20\u7684\u5f71\u54cd\uff0c\u8fd9\u662f\u6211\u4eec\u6709\u9650\u7684\u8ba1\u7b97\u80fd\u529b\u6240\u65e0\u6cd5\u6a21\u62df\u7684\u3002\u56e0\u6b64OpenGL\u7684\u5149\u7167\u4f7f\u7528\u7684\u662f\u7b80\u5316\u7684\u6a21\u578b\uff0c\u5bf9\u73b0\u5b9e\u7684\u60c5\u51b5\u8fdb\u884c\u8fd1\u4f3c\uff0c\u8fd9\u6837\u5904\u7406\u8d77\u6765\u4f1a\u66f4\u5bb9\u6613\u4e00\u4e9b\uff0c\u800c\u4e14\u770b\u8d77\u6765\u4e5f\u5dee\u4e0d\u591a\u4e00\u6837\u3002 \u8fd9\u4e9b\u5149\u7167\u6a21\u578b\u90fd\u662f\u57fa\u4e8e\u6211\u4eec\u5bf9\u5149\u7684\u7269\u7406\u7279\u6027\u7684\u7406\u89e3\u3002\u5176\u4e2d\u4e00\u4e2a\u6a21\u578b\u88ab\u79f0\u4e3a\u51af\u6c0f\u5149\u7167\u6a21\u578b(Phong Lighting Model)\u3002 \u51af\u6c0f\u5149\u7167\u6a21\u578b\u7684\u4e3b\u8981\u7ed3\u6784\u75313\u4e2a\u5206\u91cf\u7ec4\u6210\uff1a\u73af\u5883(Ambient)\u3001\u6f2b\u53cd\u5c04(Diffuse)\u548c\u955c\u9762(Specular)\u5149\u7167 \u73af\u5883\u5149\u7167(Ambient Lighting)\uff1a\u5373\u4f7f\u5728\u9ed1\u6697\u7684\u60c5\u51b5\u4e0b\uff0c\u4e16\u754c\u4e0a\u901a\u5e38\u4e5f\u4ecd\u7136\u6709\u4e00\u4e9b\u5149\u4eae\uff08\u6708\u4eae\u3001\u8fdc\u5904\u7684\u5149\uff09\uff0c\u6240\u4ee5\u7269\u4f53\u51e0\u4e4e\u6c38\u8fdc\u4e0d\u4f1a\u662f\u5b8c\u5168\u9ed1\u6697\u7684\u3002\u4e3a\u4e86\u6a21\u62df\u8fd9\u4e2a\uff0c\u6211\u4eec\u4f1a\u4f7f\u7528\u4e00\u4e2a\u73af\u5883\u5149\u7167\u5e38\u91cf\uff0c\u5b83\u6c38\u8fdc\u4f1a\u7ed9\u7269\u4f53\u4e00\u4e9b\u989c\u8272\u3002 \u6f2b\u53cd\u5c04\u5149\u7167(Diffuse Lighting)\uff1a\u6a21\u62df\u5149\u6e90\u5bf9\u7269\u4f53\u7684\u65b9\u5411\u6027\u5f71\u54cd(Directional Impact)\u3002\u5b83\u662f\u51af\u6c0f\u5149\u7167\u6a21\u578b\u4e2d\u89c6\u89c9\u4e0a\u6700\u663e\u8457\u7684\u5206\u91cf\u3002\u7269\u4f53\u7684\u67d0\u4e00\u90e8\u5206\u8d8a\u662f\u6b63\u5bf9\u7740\u5149\u6e90\uff0c\u5b83\u5c31\u4f1a\u8d8a\u4eae\u3002 \u955c\u9762\u5149\u7167(Specular Lighting)\uff1a\u6a21\u62df\u6709\u5149\u6cfd\u7269\u4f53\u4e0a\u9762\u51fa\u73b0\u7684\u4eae\u70b9\u3002\u955c\u9762\u5149\u7167\u7684\u989c\u8272\u76f8\u6bd4\u4e8e\u7269\u4f53\u7684\u989c\u8272\u4f1a\u66f4\u503e\u5411\u4e8e\u5149\u7684\u989c\u8272\u3002","title":"\u5149\u7167"},{"location":"OpenGL/%E5%85%89%E7%85%A7/#ambient-lighting","text":"void main() { float ambientStrength = 0.1; //\u73af\u5883\u56e0\u5b50 vec3 ambient = ambientStrength * lightColor; vec3 result = ambient * objectColor; FragColor = vec4(result, 1.0); }","title":"\u73af\u5883\u5149\u7167(Ambient Lighting)"},{"location":"OpenGL/%E5%85%89%E7%85%A7/#diffuse-lighting","text":"\u6f2b\u53cd\u5c04\u5149\u7167\u4f7f\u7269\u4f53\u4e0a\u4e0e\u5149\u7ebf\u65b9\u5411\u8d8a\u63a5\u8fd1\u7684\u7247\u6bb5(\u5149\u7ebf\u548c\u7247\u6bb5\u7684\u89d2\u5ea6\u8d8a\u5c0f)\u8d8a\u80fd\u4ece\u5149\u6e90\u5904\u83b7\u5f97\u66f4\u591a\u7684\u4eae\u5ea6\uff0c\u5982\u679c\u5149\u7ebf\u5782\u76f4\u4e8e\u7269\u4f53\u8868\u9762\uff0c\u8fd9\u675f\u5149\u5bf9\u7269\u4f53\u7684\u5f71\u54cd\u4f1a\u6700\u5927\u5316\uff08\u5373\u8fbe\u5230\u6700\u4eae\uff09\u3002\u4e3a\u4e86\u80fd\u591f\u66f4\u597d\u7684\u7406\u89e3\u6f2b\u53cd\u5c04\u5149\u7167\uff0c\u8bf7\u770b\u4e0b\u56fe\uff1a Back","title":"\u6f2b\u53cd\u5c04\u5149\u7167(Diffuse Lighting)"},{"location":"OpenGL/%E5%85%89%E7%85%A7/#normal-vector","text":"\u4e3a\u4e86\u6d4b\u91cf\u5149\u7ebf\u548c\u7247\u6bb5\u7684\u89d2\u5ea6\uff0c\u6211\u4eec\u4f7f\u7528\u6cd5\u5411\u91cf(Normal Vector)\uff0c\u5b83\u662f\u4e00\u4e2a\u5782\u76f4\u4e8e\u9876\u70b9\u8868\u9762\u7684\uff08\u5355\u4f4d\uff09\u5411\u91cf\uff08\u4e0a\u56fe\u4e2d\u4ee5\u9ec4\u8272\u7bad\u5934\u8868\u793a\uff09\uff0c\u8fd9\u4e24\u4e2a\u5411\u91cf\u4e4b\u95f4\u7684\u89d2\u5ea6\u5f88\u5bb9\u6613\u5c31\u80fd\u591f\u901a\u8fc7\u70b9\u4e58\u8ba1\u7b97\u51fa\u6765\u3002\u53ef\u4ee5\u4f7f\u7528\u6cd5\u7ebf\u8d34\u56fe\u6765\u5b58\u50a8\u9876\u70b9\u7684\u6cd5\u7ebf\u3002 \u5411\u91cf\u5939\u89d2 \\bar{L} : \u5149\u7167\u5411\u91cf \\bar{N} : \u6cd5\u7ebf\u5411\u91cf || \\bar{L} ||: \u5149\u7167\u5411\u91cf\u7684\u6a21 || \\bar{N} ||: \u6cd5\u7ebf\u5411\u91cf\u7684\u6a21 \\cos \\theta = \\frac{\\bar{L} \\cdot \\bar{N}}{||\\bar{L}|| \\cdot ||\\bar{N}||} \u6ce8\uff1a\u53ef\u4ee5\u5c06 \\bar{L} \u548c \\bar{N} \u8f6c\u6362\u4e3a\u5355\u4f4d\u5411\u91cf\uff0c\u8fd9\u6837 || \\bar{L} ||\u548c|| \\bar{N} || \u5747\u4e3a1 //\u4e24\u4e2a\u5411\u91cf\u4e4b\u95f4\u7684\u89d2\u5ea6\u5927\u4e8e90\u5ea6\u65f6\uff0c\u70b9\u4e58\u7ed3\u679c\u4e3a\u8d1f\u6570\uff0c\u5bfc\u81f4\u6f2b\u53cd\u5c04\u5206\u91cf\u4e3a\u8d1f\u6570\u3002\u8d1f\u6570\u989c\u8272\u7684\u5149\u7167\u6ca1\u6709\u610f\u4e49\u3002 float diff = max(dot(norm, lightDir), 0.0); vec3 diffuse = diff * lightColor; vec3 result = (ambient + diffuse) * objectColor; FragColor = vec4(result, 1.0);","title":"\u6cd5\u5411\u91cf(Normal Vector)"},{"location":"OpenGL/%E5%85%89%E7%85%A7/#normal-matrix","text":"\u5f53\u5e94\u7528\u4e00\u4e2a\u4e0d\u7b49\u6bd4\u7f29\u653e\u65f6\uff0c\u6cd5\u5411\u91cf\u5c31\u4e0d\u4f1a\u518d\u5782\u76f4\u4e8e\u5bf9\u5e94\u7684\u8868\u9762\uff0c\u8fd9\u6837\u5149\u7167\u5c31\u4f1a\u88ab\u7834\u574f\u3002\u4fee\u590d\u8fd9\u4e2a\u884c\u4e3a\u7684\u8bc0\u7a8d\u662f\u4f7f\u7528\u4e00\u4e2a\u4e3a\u6cd5\u5411\u91cf\u4e13\u95e8\u5b9a\u5236\u7684\u6a21\u578b\u77e9\u9635\u3002\u8fd9\u4e2a\u77e9\u9635\u79f0\u4e4b\u4e3a \u6cd5\u7ebf\u77e9\u9635(Normal Matrix) \u3002\u5b83\u4f7f\u7528\u4e86\u4e00\u4e9b\u7ebf\u6027\u4ee3\u6570\u7684\u64cd\u4f5c\u6765\u79fb\u9664\u5bf9\u6cd5\u5411\u91cf\u9519\u8bef\u7f29\u653e\u7684\u5f71\u54cd\u3002 \u6cd5\u7ebf\u77e9\u9635\u88ab\u5b9a\u4e49\u4e3a\u300c\u6a21\u578b\u77e9\u9635\u7684\u9006\u77e9\u9635\u7684\u8f6c\u7f6e\u77e9\u9635\u300d Back \u6ce8\u610f \u5373\u4f7f\u662f\u5bf9\u4e8e\u7740\u8272\u5668\u6765\u8bf4\uff0c\u9006\u77e9\u9635\u4e5f\u662f\u4e00\u4e2a\u5f00\u9500\u6bd4\u8f83\u5927\u7684\u8fd0\u7b97\uff0c\u56e0\u6b64\uff0c\u5e94\u8be5\u907f\u514d\u5728\u7740\u8272\u5668\u4e2d\u8fdb\u884c\u9006\u77e9\u9635\u8fd0\u7b97\uff0c\u5728\u7ed8\u5236\u4e4b\u524d\u6700\u597d\u7528CPU\u8ba1\u7b97\u51fa\u6cd5\u7ebf\u77e9\u9635\uff0c\u7136\u540e\u901a\u8fc7uniform\u628a\u503c\u4f20\u9012\u7ed9\u7740\u8272\u5668\u3002","title":"\u6cd5\u7ebf\u77e9\u9635(Normal Matrix)"},{"location":"OpenGL/%E5%85%89%E7%85%A7/#specular-lighting","text":"\u548c\u6f2b\u53cd\u5c04\u5149\u7167\u4e00\u6837\uff0c\u955c\u9762\u5149\u7167\u4e5f\u662f\u5149\u7684\u65b9\u5411\u5411\u91cf\u548c\u7269\u4f53\u7684\u6cd5\u5411\u91cf\u6765\u51b3\u5b9a\u7684\u3002\u955c\u9762\u5149\u7167\u662f\u57fa\u4e8e\u5149\u7684\u53cd\u5c04\u7279\u6027\uff08\u53cd\u5c04\u89d2\u7b49\u4e8e\u5165\u5c04\u89d2\uff09\u3002 \u4f46\u662f\u5b83\u4e5f\u4f9d\u8d56\u4e8e\u89c2\u5bdf\u65b9\u5411\uff0c\u53cd\u5c04\u5411\u91cf\u548c\u89c6\u7ebf\u65b9\u5411\u7684\u5939\u89d2\u8d8a\u5c0f\uff0c\u955c\u9762\u5149\u7684\u5f71\u54cd\u5c31\u4f1a\u8d8a\u5927\uff08\u5f62\u6210\u9ad8\u5149\uff09\u3002 Back float specularStrength = 0.5; vec3 viewDir = normalize(viewPos - FragPos); vec3 reflectDir = reflect(-lightDir, norm); //32\u6b21\u5e42\u3002\u8fd9\u4e2a32\u662f\u9ad8\u5149\u7684\u53cd\u5149\u5ea6(Shininess)\u3002 //\u4e00\u4e2a\u7269\u4f53\u7684\u53cd\u5149\u5ea6\u8d8a\u9ad8\uff0c\u53cd\u5c04\u5149\u7684\u80fd\u529b\u8d8a\u5f3a\uff0c\u6563\u5c04\u5f97\u8d8a\u5c11\uff0c\u9ad8\u5149\u70b9\u5c31\u4f1a\u8d8a\u5c0f\u3002 float spec = pow(max(dot(viewDir, reflectDir), 0.0), 32); vec3 specular = specularStrength * spec * lightColor; vec3 result = (ambient + diffuse + specular) * objectColor; FragColor = vec4(result, 1.0); \u4e0d\u540c \u53cd\u5149\u5ea6 \u7684\u89c6\u89c9\u6548\u679c\u5f71\u54cd","title":"\u955c\u9762\u5149\u7167(Specular Lighting)"},{"location":"OpenGL/%E5%85%89%E7%85%A7/#demo","text":"//fragment shader #version 330 core out vec4 FragColor; in vec3 Normal; in vec3 FragPos; uniform vec3 lightPos; uniform vec3 viewPos; uniform vec3 lightColor; uniform vec3 objectColor; void main() { // ambient float ambientStrength = 0.1; vec3 ambient = ambientStrength * lightColor; // diffuse vec3 norm = normalize(Normal); vec3 lightDir = normalize(lightPos - FragPos); float diff = max(dot(norm, lightDir), 0.0); vec3 diffuse = diff * lightColor; // specular float specularStrength = 0.5; vec3 viewDir = normalize(viewPos - FragPos); vec3 reflectDir = reflect(-lightDir, norm); float spec = pow(max(dot(viewDir, reflectDir), 0.0), 32); vec3 specular = specularStrength * spec * lightColor; vec3 result = (ambient + diffuse + specular) * objectColor; FragColor = vec4(result, 1.0); }","title":"Demo"},{"location":"OpenGL/%E5%85%89%E7%85%A7/#_2","text":"\u51af\u6c0f\u5149\u7167\u4e0d\u4ec5\u5bf9\u771f\u5b9e\u5149\u7167\u6709\u5f88\u597d\u7684\u8fd1\u4f3c\uff0c\u800c\u4e14\u6027\u80fd\u4e5f\u5f88\u9ad8\u3002\u4f46\u662f\u5b83\u7684\u955c\u9762\u53cd\u5c04\u4f1a\u5728\u4e00\u4e9b\u60c5\u51b5\u4e0b\u51fa\u73b0\u95ee\u9898\uff0c\u5f53\u89c2\u5bdf\u5411\u91cf\u548c\u53cd\u5c04\u5411\u91cf\u95f4\u7684\u5939\u89d2\u5927\u4e8e90\u5ea6\u65f6\u3002\u70b9\u4e58\u7684\u7ed3\u679c\u4e3a\u8d1f\u6570\uff0c\u955c\u9762\u5149\u5206\u91cf\u4f1a\u53d8\u4e3a0.0\u3002\u5b9e\u9645\u4e0a\u5728\u8003\u8651\u955c\u9762\u9ad8\u5149\u65f6\uff0c\u6211\u4eec\u6d4b\u91cf\u7684\u89d2\u5ea6\u5e76\u4e0d\u662f\u5149\u6e90\u4e0e\u6cd5\u7ebf\u7684\u5939\u89d2\uff0c\u800c\u662f\u89c6\u7ebf\u4e0e\u53cd\u5c04\u5149\u7ebf\u5411\u91cf\u7684\u5939\u89d2\u3002 Back","title":"\u9ad8\u7ea7\u5149\u7167"},{"location":"OpenGL/%E5%85%89%E7%85%A7/#blinn-phong","text":"Blinn-Phong\u6a21\u578b\u4e0e\u51af\u6c0f\u6a21\u578b\u975e\u5e38\u76f8\u4f3c\uff0c\u4f46\u662f\u5b83\u5bf9\u955c\u9762\u5149\u6a21\u578b\u7684\u5904\u7406\u4e0a\u6709\u4e00\u4e9b\u4e0d\u540c\uff0cBlinn-Phong\u6a21\u578b\u4e0d\u518d\u4f9d\u8d56\u4e8e\u53cd\u5c04\u5411\u91cf\uff0c\u800c\u662f\u91c7\u7528\u4e86\u6240\u8c13\u7684\u534a\u7a0b\u5411\u91cf(Halfway Vector)\uff0c\u5373\u5149\u7ebf\u4e0e\u89c6\u7ebf\u5939\u89d2\u4e00\u534a\u65b9\u5411\u4e0a\u7684\u4e00\u4e2a\u5355\u4f4d\u5411\u91cf\uff0c\u8fd9\u6837\u4e0d\u7ba1\u4ec0\u4e48\u60c5\u51b5\uff0c\u534a\u7a0b\u5411\u91cf\u4e0e\u8868\u9762\u6cd5\u7ebf\u4e4b\u95f4\u7684\u5939\u89d2\u90fd\u4e0d\u4f1a\u8d85\u8fc790\u5ea6\uff08\u9664\u975e\u5149\u6e90\u5728\u8868\u9762\u4ee5\u4e0b\uff09\u3002\u5f53\u534a\u7a0b\u5411\u91cf\u4e0e\u6cd5\u7ebf\u5411\u91cf\u8d8a\u63a5\u8fd1\u65f6\uff0c\u955c\u9762\u5149\u5206\u91cf\u5c31\u8d8a\u5927\u3002\u5b83\u4ea7\u751f\u7684\u6548\u679c\u4f1a\u4e0e\u51af\u6c0f\u5149\u7167\u6709\u4e9b\u8bb8\u4e0d\u540c\uff0c\u4f46\u662f\u5927\u90e8\u5206\u60c5\u51b5\u4e0b\u770b\u8d77\u6765\u4f1a\u66f4\u81ea\u7136\u4e00\u70b9\uff0c\u7279\u522b\u662f\u4f4e\u9ad8\u5149\u7684\u533a\u57df\u3002Blinn-Phong\u7740\u8272\u6a21\u578b\u6b63\u662f\u65e9\u671f\u56fa\u5b9a\u6e32\u67d3\u7ba1\u7ebf\u65f6\u4ee3\u65f6OpenGL\u6240\u91c7\u7528\u7684\u5149\u7167\u6a21\u578b\u3002 Back \u516c\u5f0f \\bar{H} = \\frac{\\bar{L} + \\bar{V}}{||\\bar{L} + \\bar{V}||} \u5bf9\u5e94\u7684GLSL\u4ee3\u7801 vec3 lightDir = normalize(lightPos - FragPos); vec3 viewDir = normalize(viewPos - FragPos); vec3 halfwayDir = normalize(lightDir + viewDir); float spec = pow(max(dot(normal, halfwayDir), 0.0), shininess); vec3 specular = lightColor * spec; \u5149\u7167\u5bf9\u6bd4 \u51af\u6c0f\u6a21\u578b \u4e0e Blinn-Phong\u6a21\u578b \u6709\u4e00\u4e9b\u7ec6\u5fae\u7684\u5dee\u522b \u534a\u7a0b\u5411\u91cf\u4e0e\u8868\u9762\u6cd5\u7ebf\u7684\u5939\u89d2\u901a\u5e38\u4f1a\u5c0f\u4e8e\u89c2\u5bdf\u4e0e\u53cd\u5c04\u5411\u91cf\u7684\u5939\u89d2\u3002\u6240\u4ee5\uff0c\u5982\u679c\u8981\u83b7\u5f97\u548c\u51af\u6c0f\u7740\u8272\u7c7b\u4f3c\u7684\u6548\u679c\uff0c\u5c31\u5fc5\u987b\u5728\u4f7f\u7528Blinn-Phong\u6a21\u578b\u65f6\u5c06\u955c\u9762\u53cd\u5149\u5ea6\u8bbe\u7f6e\u66f4\u9ad8\u4e00\u70b9\u3002\u901a\u5e38\u4f1a\u9009\u62e9\u51af\u6c0f\u7740\u8272\u65f6\u53cd\u5149\u5ea6\u5206\u91cf\u76842\u52304\u500d\u3002","title":"Blinn-Phong\u7740\u8272\u6a21\u578b"},{"location":"OpenGL/%E5%87%A0%E4%BD%95%E7%9D%80%E8%89%B2%E5%99%A8/","text":"\u51e0\u4f55\u7740\u8272\u5668 # \u51e0\u4f55\u7740\u8272\u5668(Geometry Shader)\u662f\u53ef\u9009\u7684 \u51e0\u4f55\u7740\u8272\u5668\u7684\u8f93\u5165\u662f\u4e00\u4e2a\u56fe\u5143\uff08\u5982\u70b9\u6216\u4e09\u89d2\u5f62\uff09\u7684\u4e00\u7ec4\u9876\u70b9\u3002 \u51e0\u4f55\u7740\u8272\u5668\u53ef\u4ee5\u5bf9\u9876\u70b9\u968f\u610f\u53d8\u6362 \u5b83\u80fd\u591f\u5c06\uff08\u8fd9\u4e00\u7ec4\uff09\u9876\u70b9\u53d8\u6362\u4e3a\u5b8c\u5168\u4e0d\u540c\u7684\u56fe\u5143\uff0c\u5e76\u4e14\u8fd8\u80fd\u751f\u6210\u6bd4\u539f\u6765\u66f4\u591a\u7684\u9876\u70b9\u3002 \u5982\uff1a #version 330 core layout (points) in; layout (line_strip, max_vertices = 2) out; void main() { gl_Position = gl_in[0].gl_Position + vec4(-0.1, 0.0, 0.0, 0.0); EmitVertex(); gl_Position = gl_in[0].gl_Position + vec4( 0.1, 0.0, 0.0, 0.0); EmitVertex(); EndPrimitive(); } \u6ce8 \u6bcf\u6b21\u8c03\u7528 EmitVertex() \u65f6\uff0cgl_Position \u4e2d\u7684\u5411\u91cf\u5c31\u4f1a\u88ab\u6dfb\u52a0\u5230\u56fe\u5143\u4e2d \u5f53 \u8c03\u7528 EndPrimitive() \u65f6\uff0c\u6240\u6709\u53d1\u5c04\u51fa\u7684(Emitted)\u9876\u70b9\u90fd\u4f1a\u5408\u6210\u4e3a\u6307\u5b9a\u7684\u8f93\u51fa\u6e32\u67d3\u56fe\u5143 \u5728 N\u4e2a EmitVertex() \u8c03\u7528\u4e4b\u540e\uff0c\u91cd\u590d\u8c03\u7528 EndPrimitive() \u80fd\u591f\u751f\u6210\u591a\u4e2a\u56fe\u5143 \u5728\u51e0\u4f55\u7740\u8272\u5668\u7684\u9876\u90e8\uff1a \u9700\u8981\u58f0\u660e\u4ece\u9876\u70b9\u7740\u8272\u5668\u8f93\u5165\u7684\u56fe\u5143\u7c7b\u578b \u5728 in \u5173\u952e\u5b57\u524d\u58f0\u660e\u4e00\u4e2a\u5e03\u5c40\u4fee\u9970\u7b26(Layout Qualifier) \u62ec\u53f7\u5185\u7684\u6570\u5b57\u8868\u793a\u7684\u662f\u4e00\u4e2a\u56fe\u5143\u6240\u5305\u542b\u7684\u6700\u5c0f\u9876\u70b9\u6570\u3002 \u8fd8\u9700\u8981\u6307\u5b9a\u51e0\u4f55\u7740\u8272\u5668\u8f93\u51fa\u7684\u56fe\u5143\u7c7b\u578b \u5728 out \u5173\u952e\u5b57\u524d\u9762\u52a0\u4e00\u4e2a\u5e03\u5c40\u4fee\u9970\u7b26(Layout Qualifier) \u62ec\u53f7\u5185\u7684\u6570\u5b57\u8868\u793a\u7684\u662f\u5b83\u6700\u5927\u80fd\u591f\u8f93\u51fa\u7684\u9876\u70b9\u6570\u91cf\uff08\u5982\u679c\u8d85\u8fc7\u4e86\u8fd9\u4e2a\u503c\uff0cOpenGL\u5c06\u4e0d\u4f1a\u7ed8\u5236\u591a\u51fa\u7684\u9876\u70b9\uff09 \u5e03\u5c40\u4fee\u9970\u7b26 points \uff1aGL_POINTS lines \uff1aGL_LINES \u6216 GL_LINE_STRIP lines_adjacency \uff1aGL_LINES_ADJACENCY \u6216 GL_LINE_STRIP_ADJACENCY triangles \uff1aGL_TRIANGLES\u3001GL_TRIANGLE_STRIP \u6216 GL_TRIANGLE_FAN triangles_adjacency \uff1aGL_TRIANGLES_ADJACENC Y \u6216GL_TRIANGLE_STRIP_ADJACENC","title":"\u51e0\u4f55\u7740\u8272\u5668"},{"location":"OpenGL/%E5%87%A0%E4%BD%95%E7%9D%80%E8%89%B2%E5%99%A8/#_1","text":"\u51e0\u4f55\u7740\u8272\u5668(Geometry Shader)\u662f\u53ef\u9009\u7684 \u51e0\u4f55\u7740\u8272\u5668\u7684\u8f93\u5165\u662f\u4e00\u4e2a\u56fe\u5143\uff08\u5982\u70b9\u6216\u4e09\u89d2\u5f62\uff09\u7684\u4e00\u7ec4\u9876\u70b9\u3002 \u51e0\u4f55\u7740\u8272\u5668\u53ef\u4ee5\u5bf9\u9876\u70b9\u968f\u610f\u53d8\u6362 \u5b83\u80fd\u591f\u5c06\uff08\u8fd9\u4e00\u7ec4\uff09\u9876\u70b9\u53d8\u6362\u4e3a\u5b8c\u5168\u4e0d\u540c\u7684\u56fe\u5143\uff0c\u5e76\u4e14\u8fd8\u80fd\u751f\u6210\u6bd4\u539f\u6765\u66f4\u591a\u7684\u9876\u70b9\u3002 \u5982\uff1a #version 330 core layout (points) in; layout (line_strip, max_vertices = 2) out; void main() { gl_Position = gl_in[0].gl_Position + vec4(-0.1, 0.0, 0.0, 0.0); EmitVertex(); gl_Position = gl_in[0].gl_Position + vec4( 0.1, 0.0, 0.0, 0.0); EmitVertex(); EndPrimitive(); } \u6ce8 \u6bcf\u6b21\u8c03\u7528 EmitVertex() \u65f6\uff0cgl_Position \u4e2d\u7684\u5411\u91cf\u5c31\u4f1a\u88ab\u6dfb\u52a0\u5230\u56fe\u5143\u4e2d \u5f53 \u8c03\u7528 EndPrimitive() \u65f6\uff0c\u6240\u6709\u53d1\u5c04\u51fa\u7684(Emitted)\u9876\u70b9\u90fd\u4f1a\u5408\u6210\u4e3a\u6307\u5b9a\u7684\u8f93\u51fa\u6e32\u67d3\u56fe\u5143 \u5728 N\u4e2a EmitVertex() \u8c03\u7528\u4e4b\u540e\uff0c\u91cd\u590d\u8c03\u7528 EndPrimitive() \u80fd\u591f\u751f\u6210\u591a\u4e2a\u56fe\u5143 \u5728\u51e0\u4f55\u7740\u8272\u5668\u7684\u9876\u90e8\uff1a \u9700\u8981\u58f0\u660e\u4ece\u9876\u70b9\u7740\u8272\u5668\u8f93\u5165\u7684\u56fe\u5143\u7c7b\u578b \u5728 in \u5173\u952e\u5b57\u524d\u58f0\u660e\u4e00\u4e2a\u5e03\u5c40\u4fee\u9970\u7b26(Layout Qualifier) \u62ec\u53f7\u5185\u7684\u6570\u5b57\u8868\u793a\u7684\u662f\u4e00\u4e2a\u56fe\u5143\u6240\u5305\u542b\u7684\u6700\u5c0f\u9876\u70b9\u6570\u3002 \u8fd8\u9700\u8981\u6307\u5b9a\u51e0\u4f55\u7740\u8272\u5668\u8f93\u51fa\u7684\u56fe\u5143\u7c7b\u578b \u5728 out \u5173\u952e\u5b57\u524d\u9762\u52a0\u4e00\u4e2a\u5e03\u5c40\u4fee\u9970\u7b26(Layout Qualifier) \u62ec\u53f7\u5185\u7684\u6570\u5b57\u8868\u793a\u7684\u662f\u5b83\u6700\u5927\u80fd\u591f\u8f93\u51fa\u7684\u9876\u70b9\u6570\u91cf\uff08\u5982\u679c\u8d85\u8fc7\u4e86\u8fd9\u4e2a\u503c\uff0cOpenGL\u5c06\u4e0d\u4f1a\u7ed8\u5236\u591a\u51fa\u7684\u9876\u70b9\uff09 \u5e03\u5c40\u4fee\u9970\u7b26 points \uff1aGL_POINTS lines \uff1aGL_LINES \u6216 GL_LINE_STRIP lines_adjacency \uff1aGL_LINES_ADJACENCY \u6216 GL_LINE_STRIP_ADJACENCY triangles \uff1aGL_TRIANGLES\u3001GL_TRIANGLE_STRIP \u6216 GL_TRIANGLE_FAN triangles_adjacency \uff1aGL_TRIANGLES_ADJACENC Y \u6216GL_TRIANGLE_STRIP_ADJACENC","title":"\u51e0\u4f55\u7740\u8272\u5668"},{"location":"OpenGL/%E6%9D%90%E8%B4%A8/","text":"\u6750\u8d28 # \u53c2\u8003 https://learnopengl-cn.github.io/02%20Lighting/03%20Materials/ \u6839\u636e \u4e0a\u8282\u5149\u7167 \u7684\u5185\u5bb9\uff0c\u53ef\u4ee5\u7528\u8fd9\u4e09\u4e2a\u5206\u91cf\u6765\u5b9a\u4e49\u4e00\u4e2a\u6750\u8d28\u989c\u8272(Material Color)\uff1a - \u73af\u5883\u5149\u7167(Ambient Lighting) - \u6f2b\u53cd\u5c04\u5149\u7167(Diffuse Lighting) - \u955c\u9762\u5149\u7167(Specular Lighting) \u901a\u8fc7\u4e3a\u6bcf\u4e2a\u5206\u91cf\u6307\u5b9a\u4e00\u4e2a\u989c\u8272\uff0c\u6211\u4eec\u5c31\u80fd\u591f\u7cbe\u786e\u63a7\u5236\u7269\u4f53\u7684\u989c\u8272\u4e86\u3002 \u73b0\u5728\uff0c\u6211\u4eec\u518d\u6dfb\u52a0\u53cd\u5149\u5ea6(Shininess)\u8fd9\u4e2a\u5206\u91cf\u5230\u4e0a\u8ff0\u7684\u4e09\u4e2a\u989c\u8272\u4e2d\uff0c\u8fd9\u6837\u5c31\u6709\u4e86\u6211\u4eec\u9700\u8981\u7684\u6240\u6709\u7684\u6750\u8d28\u5c5e\u6027\u4e86\uff1a #version 330 core struct Material { vec3 ambient; vec3 diffuse; vec3 specular; float shininess; }; uniform Material material; \u5e38\u7528\u6750\u8d28\u5c5e\u6027 # Name Ambient Diffuse Specular Shininess emerald(\u7956\u6bcd\u7eff) (0.0215, 0.1745, 0.0215) (0.07568, 0.61424, 0.07568) (0.633, 0.727811, 0.633) 0.6 jade(\u7fe1\u7fe0\u7eff) (0.135, 0.2225, 0.1575) (0.54, 0.89, 0.63) (0.316228, 0.316228, 0.316228) 0.1 obsidian(\u9ed1\u66dc\u77f3) (0.05375, 0.05, 0.06625) (0.18275, 0.17, 0.22525) (0.332741, 0.328634, 0.346435) 0.3 pearl(\u73cd\u73e0\u767d) (0.25, 0.20725, 0.20725) (1, 0.829, 0.829) (0.296648, 0.296648, 0.296648) 0.088 ruby(\u7ea2\u5b9d\u77f3) (0.1745, 0.01175, 0.01175) (0.61424, 0.04136, 0.04136) (0.727811, 0.626959, 0.626959) 0.6 turquoise(\u9752\u7eff\u8272) (0.1, 0.18725, 0.1745) (0.396, 0.74151, 0.69102) (0.297254, 0.30829, 0.306678) 0.1 brass(\u9ec4\u94dc) (0.329412, 0.223529, 0.027451) (0.780392, 0.568627, 0.113725) (0.992157, 0.941176, 0.807843) 0.21794872 bronze(\u9752\u94dc) (0.2125, 0.1275, 0.054) (0.714, 0.4284, 0.18144) (0.393548, 0.271906, 0.166721) 0.2 chrome(\u94ec\u5408\u91d1) (0.25, 0.25, 0.25) (0.4, 0.4, 0.4) (0.774597, 0.774597, 0.774597) 0.6 copper(\u7d2b\u94dc\u8272) (0.19125, 0.0735, 0.0225) (0.7038, 0.27048, 0.0828) (0.256777, 0.137622, 0.086014) 0.1 gold(\u91d1\u8272) (0.24725, 0.1995, 0.0745) (0.75164, 0.60648, 0.22648) (0.628281, 0.555802, 0.366065) 0.4 silver(\u94f6\u8272) (0.19225, 0.19225, 0.19225) (0.50754, 0.50754, 0.50754) (0.508273, 0.508273, 0.508273) 0.4 black plastic(\u9ed1\u5851\u6599) (0.0, 0.0, 0.0) (0.01, 0.01, 0.01) (0.50, 0.50, 0.50) 0.25 cyan plastic(\u9752\u5851\u6599) (0.0, 0.1, 0.06) (0.0, 0.50980392, 0.50980392) (0.50196078, 0.50196078, 0.50196078) 0.25 green plastic(\u7eff\u5851\u6599) (0.0, 0.0, 0.0) (0.1, 0.35, 0.1) (0.45, 0.55, 0.45) 0.25 red plastic(\u7ea2\u5851\u6599) (0.0, 0.0, 0.0) (0.5, 0.0, 0.0) (0.7, 0.6, 0.6) 0.25 white plastic(\u767d\u5851\u6599) (0.0, 0.0, 0.0) (0.55, 0.55, 0.55) (0.70, 0.70, 0.70) 0.25 yellow plastic(\u9ec4\u5851\u6599) (0.0, 0.0, 0.0) (0.5, 0.5, 0.0) (0.60, 0.60, 0.50) 0.25 black rubber(\u9ed1\u6a61\u80f6) (0.02, 0.02, 0.02) (0.01, 0.01, 0.01) (0.4, 0.4, 0.4) 0.078125 cyan rubber(\u9752\u6a61\u80f6) (0.0, 0.05, 0.05) (0.4, 0.5, 0.5) (0.04, 0.7, 0.7) 0.078125 green rubber(\u7eff\u6a61\u80f6) (0.0, 0.05, 0.0) (0.4, 0.5, 0.4) (0.04, 0.7, 0.04) 0.078125 red rubber(\u7ea2\u6a61\u80f6) (0.05, 0.0, 0.0) (0.5, 0.4, 0.4) (0.7, 0.04, 0.04) 0.078125 white rubber(\u767d\u6a61\u80f6) (0.05, 0.05, 0.05) (0.5, 0.5, 0.5) (0.7, 0.7, 0.7) 0.078125 yellow rubber(\u9ec4\u6a61\u80f6) (0.05, 0.05, 0.0) (0.5, 0.5, 0.4) (0.7, 0.7, 0.04) 0.078125 \u8bbe\u7f6e\u6750\u8d28 # void main() { // \u73af\u5883\u5149 vec3 ambient = lightColor * material.ambient; // \u6f2b\u53cd\u5c04 vec3 norm = normalize(Normal); vec3 lightDir = normalize(lightPos - FragPos); float diff = max(dot(norm, lightDir), 0.0); vec3 diffuse = lightColor * (diff * material.diffuse); // \u955c\u9762\u5149 vec3 viewDir = normalize(viewPos - FragPos); vec3 reflectDir = reflect(-lightDir, norm); float spec = pow(max(dot(viewDir, reflectDir), 0.0), material.shininess); vec3 specular = lightColor * (spec * material.specular); vec3 result = ambient + diffuse + specular; FragColor = vec4(result, 1.0); } lightingShader.setVec3(\"material.ambient\", 1.0f, 0.5f, 0.31f); lightingShader.setVec3(\"material.diffuse\", 1.0f, 0.5f, 0.31f); lightingShader.setVec3(\"material.specular\", 0.5f, 0.5f, 0.5f); lightingShader.setFloat(\"material.shininess\", 32.0f); \u5149\u7684\u5c5e\u6027 # \u5149\u6e90\u5bf9\u73af\u5883\u5149\u3001\u6f2b\u53cd\u5c04\u548c\u955c\u9762\u5149\u5206\u91cf\u5e94\u8be5\u5177\u6709\u7740\u4e0d\u540c\u7684\u5f3a\u5ea6\uff0c\u5426\u5219\u5c31\u4f1a\u50cf\u4e0a\u56fe\u4e00\u6837 \u7269\u4f53\u8fc7\u4e8e\u660e\u4eae\u3002 \u53ef\u4ee5\u521b\u5efa\u4e00\u4e9b\u5149\u7167\u5c5e\u6027\u6765\u5f71\u54cd\u6bcf\u4e2a\u5355\u72ec\u7684\u5149\u7167\u5206\u91cf struct Light { vec3 position; vec3 ambient; vec3 diffuse; vec3 specular; }; uniform Light light; vec3 ambient = light.ambient * material.ambient; vec3 diffuse = light.diffuse * (diff * material.diffuse); vec3 specular = light.specular * (spec * material.specular); lightingShader.setVec3(\"light.ambient\", 0.2f, 0.2f, 0.2f); lightingShader.setVec3(\"light.diffuse\", 0.5f, 0.5f, 0.5f); // \u5c06\u5149\u7167\u8c03\u6697\u4e86\u4e00\u4e9b\u4ee5\u642d\u914d\u573a\u666f lightingShader.setVec3(\"light.specular\", 1.0f, 1.0f, 1.0f); \u6750\u8d28\u8d34\u56fe # \u6211\u4eec\u8fd8\u53ef\u4ee5\u901a\u8fc7\u6750\u8d28\u8d34\u56fe\u66f4\u7cbe\u786e\u7684\u63a7\u5236\u5bf9\u7269\u4f53\u7684\u6bcf\u4e2a\u7247\u6bb5\u8bbe\u7f6e\u53cd\u5c04\u989c\u8272\u3002 \u56e0\u4e3a\u73af\u5883\u5149\u989c\u8272\u5728\u51e0\u4e4e\u6240\u6709\u60c5\u51b5\u4e0b\u90fd\u7b49\u4e8e\u6f2b\u53cd\u5c04\u989c\u8272\uff0c\u6240\u4ee5\u4e0d\u9700\u8981\u5c06\u5b83\u4eec\u5206\u5f00\u50a8\u5b58 struct Material { sampler2D diffuse; sampler2D specular; float shininess; }; vec3 ambient = light.ambient * vec3(texture(material.diffuse, TexCoords)); vec3 diffuse = light.diffuse * diff * vec3(texture(material.diffuse, TexCoords)); vec3 specular = light.specular * spec * vec3(texture(material.specular, TexCoords)); FragColor = vec4(ambient + diffuse + specular, 1.0);","title":"\u6750\u8d28"},{"location":"OpenGL/%E6%9D%90%E8%B4%A8/#_1","text":"\u53c2\u8003 https://learnopengl-cn.github.io/02%20Lighting/03%20Materials/ \u6839\u636e \u4e0a\u8282\u5149\u7167 \u7684\u5185\u5bb9\uff0c\u53ef\u4ee5\u7528\u8fd9\u4e09\u4e2a\u5206\u91cf\u6765\u5b9a\u4e49\u4e00\u4e2a\u6750\u8d28\u989c\u8272(Material Color)\uff1a - \u73af\u5883\u5149\u7167(Ambient Lighting) - \u6f2b\u53cd\u5c04\u5149\u7167(Diffuse Lighting) - \u955c\u9762\u5149\u7167(Specular Lighting) \u901a\u8fc7\u4e3a\u6bcf\u4e2a\u5206\u91cf\u6307\u5b9a\u4e00\u4e2a\u989c\u8272\uff0c\u6211\u4eec\u5c31\u80fd\u591f\u7cbe\u786e\u63a7\u5236\u7269\u4f53\u7684\u989c\u8272\u4e86\u3002 \u73b0\u5728\uff0c\u6211\u4eec\u518d\u6dfb\u52a0\u53cd\u5149\u5ea6(Shininess)\u8fd9\u4e2a\u5206\u91cf\u5230\u4e0a\u8ff0\u7684\u4e09\u4e2a\u989c\u8272\u4e2d\uff0c\u8fd9\u6837\u5c31\u6709\u4e86\u6211\u4eec\u9700\u8981\u7684\u6240\u6709\u7684\u6750\u8d28\u5c5e\u6027\u4e86\uff1a #version 330 core struct Material { vec3 ambient; vec3 diffuse; vec3 specular; float shininess; }; uniform Material material;","title":"\u6750\u8d28"},{"location":"OpenGL/%E6%9D%90%E8%B4%A8/#_2","text":"Name Ambient Diffuse Specular Shininess emerald(\u7956\u6bcd\u7eff) (0.0215, 0.1745, 0.0215) (0.07568, 0.61424, 0.07568) (0.633, 0.727811, 0.633) 0.6 jade(\u7fe1\u7fe0\u7eff) (0.135, 0.2225, 0.1575) (0.54, 0.89, 0.63) (0.316228, 0.316228, 0.316228) 0.1 obsidian(\u9ed1\u66dc\u77f3) (0.05375, 0.05, 0.06625) (0.18275, 0.17, 0.22525) (0.332741, 0.328634, 0.346435) 0.3 pearl(\u73cd\u73e0\u767d) (0.25, 0.20725, 0.20725) (1, 0.829, 0.829) (0.296648, 0.296648, 0.296648) 0.088 ruby(\u7ea2\u5b9d\u77f3) (0.1745, 0.01175, 0.01175) (0.61424, 0.04136, 0.04136) (0.727811, 0.626959, 0.626959) 0.6 turquoise(\u9752\u7eff\u8272) (0.1, 0.18725, 0.1745) (0.396, 0.74151, 0.69102) (0.297254, 0.30829, 0.306678) 0.1 brass(\u9ec4\u94dc) (0.329412, 0.223529, 0.027451) (0.780392, 0.568627, 0.113725) (0.992157, 0.941176, 0.807843) 0.21794872 bronze(\u9752\u94dc) (0.2125, 0.1275, 0.054) (0.714, 0.4284, 0.18144) (0.393548, 0.271906, 0.166721) 0.2 chrome(\u94ec\u5408\u91d1) (0.25, 0.25, 0.25) (0.4, 0.4, 0.4) (0.774597, 0.774597, 0.774597) 0.6 copper(\u7d2b\u94dc\u8272) (0.19125, 0.0735, 0.0225) (0.7038, 0.27048, 0.0828) (0.256777, 0.137622, 0.086014) 0.1 gold(\u91d1\u8272) (0.24725, 0.1995, 0.0745) (0.75164, 0.60648, 0.22648) (0.628281, 0.555802, 0.366065) 0.4 silver(\u94f6\u8272) (0.19225, 0.19225, 0.19225) (0.50754, 0.50754, 0.50754) (0.508273, 0.508273, 0.508273) 0.4 black plastic(\u9ed1\u5851\u6599) (0.0, 0.0, 0.0) (0.01, 0.01, 0.01) (0.50, 0.50, 0.50) 0.25 cyan plastic(\u9752\u5851\u6599) (0.0, 0.1, 0.06) (0.0, 0.50980392, 0.50980392) (0.50196078, 0.50196078, 0.50196078) 0.25 green plastic(\u7eff\u5851\u6599) (0.0, 0.0, 0.0) (0.1, 0.35, 0.1) (0.45, 0.55, 0.45) 0.25 red plastic(\u7ea2\u5851\u6599) (0.0, 0.0, 0.0) (0.5, 0.0, 0.0) (0.7, 0.6, 0.6) 0.25 white plastic(\u767d\u5851\u6599) (0.0, 0.0, 0.0) (0.55, 0.55, 0.55) (0.70, 0.70, 0.70) 0.25 yellow plastic(\u9ec4\u5851\u6599) (0.0, 0.0, 0.0) (0.5, 0.5, 0.0) (0.60, 0.60, 0.50) 0.25 black rubber(\u9ed1\u6a61\u80f6) (0.02, 0.02, 0.02) (0.01, 0.01, 0.01) (0.4, 0.4, 0.4) 0.078125 cyan rubber(\u9752\u6a61\u80f6) (0.0, 0.05, 0.05) (0.4, 0.5, 0.5) (0.04, 0.7, 0.7) 0.078125 green rubber(\u7eff\u6a61\u80f6) (0.0, 0.05, 0.0) (0.4, 0.5, 0.4) (0.04, 0.7, 0.04) 0.078125 red rubber(\u7ea2\u6a61\u80f6) (0.05, 0.0, 0.0) (0.5, 0.4, 0.4) (0.7, 0.04, 0.04) 0.078125 white rubber(\u767d\u6a61\u80f6) (0.05, 0.05, 0.05) (0.5, 0.5, 0.5) (0.7, 0.7, 0.7) 0.078125 yellow rubber(\u9ec4\u6a61\u80f6) (0.05, 0.05, 0.0) (0.5, 0.5, 0.4) (0.7, 0.7, 0.04) 0.078125","title":"\u5e38\u7528\u6750\u8d28\u5c5e\u6027"},{"location":"OpenGL/%E6%9D%90%E8%B4%A8/#_3","text":"void main() { // \u73af\u5883\u5149 vec3 ambient = lightColor * material.ambient; // \u6f2b\u53cd\u5c04 vec3 norm = normalize(Normal); vec3 lightDir = normalize(lightPos - FragPos); float diff = max(dot(norm, lightDir), 0.0); vec3 diffuse = lightColor * (diff * material.diffuse); // \u955c\u9762\u5149 vec3 viewDir = normalize(viewPos - FragPos); vec3 reflectDir = reflect(-lightDir, norm); float spec = pow(max(dot(viewDir, reflectDir), 0.0), material.shininess); vec3 specular = lightColor * (spec * material.specular); vec3 result = ambient + diffuse + specular; FragColor = vec4(result, 1.0); } lightingShader.setVec3(\"material.ambient\", 1.0f, 0.5f, 0.31f); lightingShader.setVec3(\"material.diffuse\", 1.0f, 0.5f, 0.31f); lightingShader.setVec3(\"material.specular\", 0.5f, 0.5f, 0.5f); lightingShader.setFloat(\"material.shininess\", 32.0f);","title":"\u8bbe\u7f6e\u6750\u8d28"},{"location":"OpenGL/%E6%9D%90%E8%B4%A8/#_4","text":"\u5149\u6e90\u5bf9\u73af\u5883\u5149\u3001\u6f2b\u53cd\u5c04\u548c\u955c\u9762\u5149\u5206\u91cf\u5e94\u8be5\u5177\u6709\u7740\u4e0d\u540c\u7684\u5f3a\u5ea6\uff0c\u5426\u5219\u5c31\u4f1a\u50cf\u4e0a\u56fe\u4e00\u6837 \u7269\u4f53\u8fc7\u4e8e\u660e\u4eae\u3002 \u53ef\u4ee5\u521b\u5efa\u4e00\u4e9b\u5149\u7167\u5c5e\u6027\u6765\u5f71\u54cd\u6bcf\u4e2a\u5355\u72ec\u7684\u5149\u7167\u5206\u91cf struct Light { vec3 position; vec3 ambient; vec3 diffuse; vec3 specular; }; uniform Light light; vec3 ambient = light.ambient * material.ambient; vec3 diffuse = light.diffuse * (diff * material.diffuse); vec3 specular = light.specular * (spec * material.specular); lightingShader.setVec3(\"light.ambient\", 0.2f, 0.2f, 0.2f); lightingShader.setVec3(\"light.diffuse\", 0.5f, 0.5f, 0.5f); // \u5c06\u5149\u7167\u8c03\u6697\u4e86\u4e00\u4e9b\u4ee5\u642d\u914d\u573a\u666f lightingShader.setVec3(\"light.specular\", 1.0f, 1.0f, 1.0f);","title":"\u5149\u7684\u5c5e\u6027"},{"location":"OpenGL/%E6%9D%90%E8%B4%A8/#_5","text":"\u6211\u4eec\u8fd8\u53ef\u4ee5\u901a\u8fc7\u6750\u8d28\u8d34\u56fe\u66f4\u7cbe\u786e\u7684\u63a7\u5236\u5bf9\u7269\u4f53\u7684\u6bcf\u4e2a\u7247\u6bb5\u8bbe\u7f6e\u53cd\u5c04\u989c\u8272\u3002 \u56e0\u4e3a\u73af\u5883\u5149\u989c\u8272\u5728\u51e0\u4e4e\u6240\u6709\u60c5\u51b5\u4e0b\u90fd\u7b49\u4e8e\u6f2b\u53cd\u5c04\u989c\u8272\uff0c\u6240\u4ee5\u4e0d\u9700\u8981\u5c06\u5b83\u4eec\u5206\u5f00\u50a8\u5b58 struct Material { sampler2D diffuse; sampler2D specular; float shininess; }; vec3 ambient = light.ambient * vec3(texture(material.diffuse, TexCoords)); vec3 diffuse = light.diffuse * diff * vec3(texture(material.diffuse, TexCoords)); vec3 specular = light.specular * spec * vec3(texture(material.specular, TexCoords)); FragColor = vec4(ambient + diffuse + specular, 1.0);","title":"\u6750\u8d28\u8d34\u56fe"},{"location":"OpenGL/%E6%B3%95%E7%BA%BF%E8%B4%B4%E5%9B%BE/","text":"\u6cd5\u7ebf\u8d34\u56fe # \u5f53\u5149\u7167\u5c04\u5230\u7269\u4f53\u8868\u9762\u65f6\uff0c\u6211\u4eec\u662f\u901a\u8fc7\u8868\u9762\u7684\u6cd5\u7ebf\u5411\u91cf\u6765\u8ba1\u7b97\u5149\u7167\u7684\u3002\u73b0\u5b9e\u4e2d\u7684\u7269\u4f53\u8868\u9762\u5e76\u975e\u662f\u5e73\u5766\u7684\uff0c\u800c\u662f\u8868\u73b0\u51fa\u65e0\u6570\uff08\u51f9\u51f8\u4e0d\u5e73\u7684\uff09\u7ec6\u8282\u3002\u5982\u4f55\u8868\u73b0\u51fa\u8fd9\u4e9b\u7ec6\u8282\u5462\uff1f\u8ba9\u6bcf\u4e2a Fragment \u4f7f\u7528\u81ea\u5df1\u7684\u6cd5\u7ebf\uff0c\u5c31\u53ef\u4ee5\u8ba9\u5149\u7167\u76f8\u4fe1\u4e00\u4e2a\u8868\u9762\u662f\u7531\u5f88\u591a\u5fae\u5c0f\u7684\uff08\u5782\u76f4\u4e8e\u6cd5\u7ebf\u5411\u91cf\u7684\uff09\u5e73\u9762\u6240\u7ec4\u6210\u7684\uff0c\u7269\u4f53\u8868\u9762\u7684\u7ec6\u8282\u5c06\u4f1a\u5f97\u5230\u6781\u5927\u63d0\u5347\u3002\u8fd9\u79cd\u6bcf\u4e2afragment\u4f7f\u7528\u5404\u81ea\u7684\u6cd5\u7ebf\uff0c\u66ff\u4ee3\u4e00\u4e2a\u9762\u4e0a\u6240\u6709fragment\u4f7f\u7528\u540c\u4e00\u4e2a\u6cd5\u7ebf\u7684\u6280\u672f\u53eb\u505a\u6cd5\u7ebf\u8d34\u56fe\uff08normal mapping\uff09\u6216\u51f9\u51f8\u8d34\u56fe\uff08bump mapping\uff09\u3002 Back \u4e3a\u4f7f\u6cd5\u7ebf\u8d34\u56fe\u5de5\u4f5c\uff0c\u9700\u8981\u4e3a\u6bcf\u4e2afragment\u63d0\u4f9b\u4e00\u4e2a\u6cd5\u7ebf\u3002\u50cfdiffuse\u8d34\u56fe\u548cspecular\u8d34\u56fe\u4e00\u6837\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u4e00\u4e2a2D\u7eb9\u7406\u6765\u50a8\u5b58\u6cd5\u7ebf\u6570\u636e\u30022D\u7eb9\u7406\u4e0d\u4ec5\u53ef\u4ee5\u50a8\u5b58\u989c\u8272\u548c\u5149\u7167\u6570\u636e\uff0c\u8fd8\u53ef\u4ee5\u50a8\u5b58\u6cd5\u7ebf\u5411\u91cf\u3002\u8fd9\u6837\u5c31\u53ef\u4ee5\u4ece2D\u7eb9\u7406\u4e2d\u91c7\u6837\u5f97\u5230\u7279\u5b9a\u7eb9\u7406\u7684\u6cd5\u7ebf\u5411\u91cf\u3002 \u6cd5\u7ebf\u8d34\u56fe \u5c06\u6cd5\u7ebf\u5411\u91cf\u7684x\u3001y\u3001z\u5143\u7d20\u50a8\u5b58\u5230\u7eb9\u7406\u4e2d\uff0c\u4ee3\u66ff\u989c\u8272\u7684r\u3001g\u3001b\u5143\u7d20\u3002 \u6cd5\u7ebf\u5411\u91cf\u7684\u8303\u56f4\u5728-1\u52301\u4e4b\u95f4\uff0c\u5148\u8981\u5c06\u5176\u6620\u5c04\u52300\u52301\u7684\u8303\u56f4\uff1a vec3 rgb_normal = normal * 0.5 + 0.5; // \u4ece [-1,1] \u8f6c\u6362\u81f3 [0,1] \u5c06\u6cd5\u7ebf\u5411\u91cf\u53d8\u6362\u4e3aRGB\u989c\u8272\u5143\u7d20\uff0c\u5c31\u80fd\u628a\u6839\u636e\u8868\u9762\u7684\u5f62\u72b6\u7684fragment\u7684\u6cd5\u7ebf\u4fdd\u5b58\u57282D\u7eb9\u7406\u4e2d\u3002\u5982\uff1a \u6ce8\u610f \u6cd5\u7ebf\u8d34\u56fe\u662f\u4e00\u79cd\u504f\u84dd\u8272\u8c03\u7684\u7eb9\u7406\u3002\u8fd9\u662f\u56e0\u4e3a\u6240\u6709\u6cd5\u7ebf\u7684\u6307\u5411\u90fd\u504f\u5411z\u8f74\uff080, 0, 1\uff09\u8fd9\u662f\u4e00\u79cd\u504f\u84dd\u7684\u989c\u8272\u3002\u6cd5\u7ebf\u5411\u91cf\u4ecez\u8f74\u65b9\u5411\u4e5f\u5411\u5176\u4ed6\u65b9\u5411\u8f7b\u5fae\u504f\u79fb\uff0c\u989c\u8272\u4e5f\u5c31\u53d1\u751f\u4e86\u8f7b\u5fae\u53d8\u5316\uff0c\u8fd9\u6837\u770b\u8d77\u6765\u4fbf\u6709\u4e86\u4e00\u79cd\u6df1\u5ea6\u3002\u4f8b\u5982\uff0c\u4e0a\u56fe\u4e2d\u53ef\u4ee5\u770b\u5230\u5728\u6bcf\u4e2a\u7816\u5757\u7684\u9876\u90e8\uff0c\u989c\u8272\u503e\u5411\u4e8e\u504f\u7eff\uff0c\u8fd9\u662f\u56e0\u4e3a\u7816\u5757\u7684\u9876\u90e8\u7684\u6cd5\u7ebf\u504f\u5411\u4e8e\u6307\u5411\u6b63y\u8f74\u65b9\u5411\uff080, 1, 0\uff09\uff0c\u8fd9\u6837\u5b83\u5c31\u662f\u7eff\u8272\u7684\u4e86\u3002 uniform sampler2D normalMap; void main() { // \u4ece\u6cd5\u7ebf\u8d34\u56fe\u8303\u56f4[0,1]\u83b7\u53d6\u6cd5\u7ebf normal = texture(normalMap, fs_in.TexCoords).rgb; // \u5c06\u6cd5\u7ebf\u5411\u91cf\u8f6c\u6362\u4e3a\u8303\u56f4[-1,1] normal = normalize(normal * 2.0 - 1.0); [...] // \u50cf\u5f80\u5e38\u90a3\u6837\u5904\u7406\u5149\u7167 } \u5207\u7ebf\u7a7a\u95f4\uff08tangent space\uff09 # \u6cd5\u7ebf\u8d34\u56fe\u4e2d\u7684\u6240\u6709\u6cd5\u7ebf\u5411\u91cf\u90fd\u662f\u6307\u5411\u6b63z\u65b9\u5411\u7684\u3002\u5f53\u7269\u4f53\u8868\u9762\u7684\u6cd5\u7ebf\u6307\u5411\u6b63y\u65b9\u5411\u65f6\u600e\u4e48\u529e\u5462\uff1f \u5207\u7ebf\u7a7a\u95f4 \u5728\u4e00\u4e2a\u4e0d\u540c\u7684\u5750\u6807\u7a7a\u95f4\u4e2d\u8fdb\u884c\u5149\u7167\uff0c\u8fd9\u4e2a\u5750\u6807\u7a7a\u95f4\u91cc\uff0c\u6cd5\u7ebf\u8d34\u56fe\u5411\u91cf\u603b\u662f\u6307\u5411\u8fd9\u4e2a\u5750\u6807\u7a7a\u95f4\u7684\u6b63z\u65b9\u5411\uff1b\u6240\u6709\u7684\u5149\u7167\u5411\u91cf\u90fd\u76f8\u5bf9\u4e0e\u8fd9\u4e2a\u6b63z\u65b9\u5411\u8fdb\u884c\u53d8\u6362\u3002\u8fd9\u6837\u5c31\u80fd\u4f7f\u7528\u540c\u6837\u7684\u6cd5\u7ebf\u8d34\u56fe\uff0c\u4e0d\u7ba1\u671d\u5411\u95ee\u9898\u3002\u8fd9\u4e2a\u5750\u6807\u7a7a\u95f4\u53eb\u505a\u5207\u7ebf\u7a7a\u95f4\uff08tangent space\uff09\u3002 \u6cd5\u7ebf\u8d34\u56fe \u6cd5\u7ebf\u8d34\u56fe\u4e2d\u7684\u6cd5\u7ebf\u5411\u91cf\u5b9a\u4e49\u5728\u5207\u7ebf\u7a7a\u95f4\u4e2d\uff0c\u5728\u5207\u7ebf\u7a7a\u95f4\u4e2d\uff0c\u6cd5\u7ebf\u6c38\u8fdc\u6307\u7740\u6b63z\u65b9\u5411\u3002\u5b83\u5c31\u50cf\u6cd5\u7ebf\u8d34\u56fe\u5411\u91cf\u7684\u672c\u5730\u7a7a\u95f4\u3002\u4f7f\u7528\u4e00\u4e2a\u7279\u5b9a\u7684\u77e9\u9635\u6211\u4eec\u5c31\u80fd\u5c06\u5207\u7ebf\u7a7a\u95f4\u4e2d\u7684\u6cd5\u7ebf\u5411\u91cf\u8f6c\u6210\u4e16\u754c\u6216\u89c6\u56fe\u7a7a\u95f4\u4e0b\uff0c\u4f7f\u5b83\u4eec\u8f6c\u5411\u5230\u6700\u7ec8\u7684\u8d34\u56fe\u8868\u9762\u7684\u65b9\u5411\u3002 TBN\u77e9\u9635 TBN\u77e9\u9635\u8fd9\u4e09\u4e2a\u5b57\u6bcd\u5206\u522b\u4ee3\u8868 \u5207\u7ebf(Tagent)\u3001\u526f\u5207\u7ebf(Bitangent)\u548c\u6cd5\u7ebf(Normal) \u5411\u91cf\u3002\u8981\u5efa\u6784\u8fd9\u6837\u4e00\u4e2a\u628a\u5207\u7ebf\u7a7a\u95f4\u8f6c\u53d8\u4e3a\u4e0d\u540c\u7a7a\u95f4\u7684\u53d8\u5f02\u77e9\u9635\uff0c\u9700\u8981\u4e09\u4e2a\u76f8\u4e92\u5782\u76f4\u7684\u5411\u91cf\uff0c\u5b83\u4eec\u6cbf\u4e00\u4e2a\u8868\u9762\u7684\u6cd5\u7ebf\u8d34\u56fe\u5bf9\u9f50\u4e8e\uff1a\u4e0a\u3001\u53f3\u3001\u524d TBN\u77e9\u9635\u7684\u8ba1\u7b97\u53c2\u8003","title":"\u6cd5\u7ebf\u8d34\u56fe"},{"location":"OpenGL/%E6%B3%95%E7%BA%BF%E8%B4%B4%E5%9B%BE/#_1","text":"\u5f53\u5149\u7167\u5c04\u5230\u7269\u4f53\u8868\u9762\u65f6\uff0c\u6211\u4eec\u662f\u901a\u8fc7\u8868\u9762\u7684\u6cd5\u7ebf\u5411\u91cf\u6765\u8ba1\u7b97\u5149\u7167\u7684\u3002\u73b0\u5b9e\u4e2d\u7684\u7269\u4f53\u8868\u9762\u5e76\u975e\u662f\u5e73\u5766\u7684\uff0c\u800c\u662f\u8868\u73b0\u51fa\u65e0\u6570\uff08\u51f9\u51f8\u4e0d\u5e73\u7684\uff09\u7ec6\u8282\u3002\u5982\u4f55\u8868\u73b0\u51fa\u8fd9\u4e9b\u7ec6\u8282\u5462\uff1f\u8ba9\u6bcf\u4e2a Fragment \u4f7f\u7528\u81ea\u5df1\u7684\u6cd5\u7ebf\uff0c\u5c31\u53ef\u4ee5\u8ba9\u5149\u7167\u76f8\u4fe1\u4e00\u4e2a\u8868\u9762\u662f\u7531\u5f88\u591a\u5fae\u5c0f\u7684\uff08\u5782\u76f4\u4e8e\u6cd5\u7ebf\u5411\u91cf\u7684\uff09\u5e73\u9762\u6240\u7ec4\u6210\u7684\uff0c\u7269\u4f53\u8868\u9762\u7684\u7ec6\u8282\u5c06\u4f1a\u5f97\u5230\u6781\u5927\u63d0\u5347\u3002\u8fd9\u79cd\u6bcf\u4e2afragment\u4f7f\u7528\u5404\u81ea\u7684\u6cd5\u7ebf\uff0c\u66ff\u4ee3\u4e00\u4e2a\u9762\u4e0a\u6240\u6709fragment\u4f7f\u7528\u540c\u4e00\u4e2a\u6cd5\u7ebf\u7684\u6280\u672f\u53eb\u505a\u6cd5\u7ebf\u8d34\u56fe\uff08normal mapping\uff09\u6216\u51f9\u51f8\u8d34\u56fe\uff08bump mapping\uff09\u3002 Back \u4e3a\u4f7f\u6cd5\u7ebf\u8d34\u56fe\u5de5\u4f5c\uff0c\u9700\u8981\u4e3a\u6bcf\u4e2afragment\u63d0\u4f9b\u4e00\u4e2a\u6cd5\u7ebf\u3002\u50cfdiffuse\u8d34\u56fe\u548cspecular\u8d34\u56fe\u4e00\u6837\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u4e00\u4e2a2D\u7eb9\u7406\u6765\u50a8\u5b58\u6cd5\u7ebf\u6570\u636e\u30022D\u7eb9\u7406\u4e0d\u4ec5\u53ef\u4ee5\u50a8\u5b58\u989c\u8272\u548c\u5149\u7167\u6570\u636e\uff0c\u8fd8\u53ef\u4ee5\u50a8\u5b58\u6cd5\u7ebf\u5411\u91cf\u3002\u8fd9\u6837\u5c31\u53ef\u4ee5\u4ece2D\u7eb9\u7406\u4e2d\u91c7\u6837\u5f97\u5230\u7279\u5b9a\u7eb9\u7406\u7684\u6cd5\u7ebf\u5411\u91cf\u3002 \u6cd5\u7ebf\u8d34\u56fe \u5c06\u6cd5\u7ebf\u5411\u91cf\u7684x\u3001y\u3001z\u5143\u7d20\u50a8\u5b58\u5230\u7eb9\u7406\u4e2d\uff0c\u4ee3\u66ff\u989c\u8272\u7684r\u3001g\u3001b\u5143\u7d20\u3002 \u6cd5\u7ebf\u5411\u91cf\u7684\u8303\u56f4\u5728-1\u52301\u4e4b\u95f4\uff0c\u5148\u8981\u5c06\u5176\u6620\u5c04\u52300\u52301\u7684\u8303\u56f4\uff1a vec3 rgb_normal = normal * 0.5 + 0.5; // \u4ece [-1,1] \u8f6c\u6362\u81f3 [0,1] \u5c06\u6cd5\u7ebf\u5411\u91cf\u53d8\u6362\u4e3aRGB\u989c\u8272\u5143\u7d20\uff0c\u5c31\u80fd\u628a\u6839\u636e\u8868\u9762\u7684\u5f62\u72b6\u7684fragment\u7684\u6cd5\u7ebf\u4fdd\u5b58\u57282D\u7eb9\u7406\u4e2d\u3002\u5982\uff1a \u6ce8\u610f \u6cd5\u7ebf\u8d34\u56fe\u662f\u4e00\u79cd\u504f\u84dd\u8272\u8c03\u7684\u7eb9\u7406\u3002\u8fd9\u662f\u56e0\u4e3a\u6240\u6709\u6cd5\u7ebf\u7684\u6307\u5411\u90fd\u504f\u5411z\u8f74\uff080, 0, 1\uff09\u8fd9\u662f\u4e00\u79cd\u504f\u84dd\u7684\u989c\u8272\u3002\u6cd5\u7ebf\u5411\u91cf\u4ecez\u8f74\u65b9\u5411\u4e5f\u5411\u5176\u4ed6\u65b9\u5411\u8f7b\u5fae\u504f\u79fb\uff0c\u989c\u8272\u4e5f\u5c31\u53d1\u751f\u4e86\u8f7b\u5fae\u53d8\u5316\uff0c\u8fd9\u6837\u770b\u8d77\u6765\u4fbf\u6709\u4e86\u4e00\u79cd\u6df1\u5ea6\u3002\u4f8b\u5982\uff0c\u4e0a\u56fe\u4e2d\u53ef\u4ee5\u770b\u5230\u5728\u6bcf\u4e2a\u7816\u5757\u7684\u9876\u90e8\uff0c\u989c\u8272\u503e\u5411\u4e8e\u504f\u7eff\uff0c\u8fd9\u662f\u56e0\u4e3a\u7816\u5757\u7684\u9876\u90e8\u7684\u6cd5\u7ebf\u504f\u5411\u4e8e\u6307\u5411\u6b63y\u8f74\u65b9\u5411\uff080, 1, 0\uff09\uff0c\u8fd9\u6837\u5b83\u5c31\u662f\u7eff\u8272\u7684\u4e86\u3002 uniform sampler2D normalMap; void main() { // \u4ece\u6cd5\u7ebf\u8d34\u56fe\u8303\u56f4[0,1]\u83b7\u53d6\u6cd5\u7ebf normal = texture(normalMap, fs_in.TexCoords).rgb; // \u5c06\u6cd5\u7ebf\u5411\u91cf\u8f6c\u6362\u4e3a\u8303\u56f4[-1,1] normal = normalize(normal * 2.0 - 1.0); [...] // \u50cf\u5f80\u5e38\u90a3\u6837\u5904\u7406\u5149\u7167 }","title":"\u6cd5\u7ebf\u8d34\u56fe"},{"location":"OpenGL/%E6%B3%95%E7%BA%BF%E8%B4%B4%E5%9B%BE/#tangent-space","text":"\u6cd5\u7ebf\u8d34\u56fe\u4e2d\u7684\u6240\u6709\u6cd5\u7ebf\u5411\u91cf\u90fd\u662f\u6307\u5411\u6b63z\u65b9\u5411\u7684\u3002\u5f53\u7269\u4f53\u8868\u9762\u7684\u6cd5\u7ebf\u6307\u5411\u6b63y\u65b9\u5411\u65f6\u600e\u4e48\u529e\u5462\uff1f \u5207\u7ebf\u7a7a\u95f4 \u5728\u4e00\u4e2a\u4e0d\u540c\u7684\u5750\u6807\u7a7a\u95f4\u4e2d\u8fdb\u884c\u5149\u7167\uff0c\u8fd9\u4e2a\u5750\u6807\u7a7a\u95f4\u91cc\uff0c\u6cd5\u7ebf\u8d34\u56fe\u5411\u91cf\u603b\u662f\u6307\u5411\u8fd9\u4e2a\u5750\u6807\u7a7a\u95f4\u7684\u6b63z\u65b9\u5411\uff1b\u6240\u6709\u7684\u5149\u7167\u5411\u91cf\u90fd\u76f8\u5bf9\u4e0e\u8fd9\u4e2a\u6b63z\u65b9\u5411\u8fdb\u884c\u53d8\u6362\u3002\u8fd9\u6837\u5c31\u80fd\u4f7f\u7528\u540c\u6837\u7684\u6cd5\u7ebf\u8d34\u56fe\uff0c\u4e0d\u7ba1\u671d\u5411\u95ee\u9898\u3002\u8fd9\u4e2a\u5750\u6807\u7a7a\u95f4\u53eb\u505a\u5207\u7ebf\u7a7a\u95f4\uff08tangent space\uff09\u3002 \u6cd5\u7ebf\u8d34\u56fe \u6cd5\u7ebf\u8d34\u56fe\u4e2d\u7684\u6cd5\u7ebf\u5411\u91cf\u5b9a\u4e49\u5728\u5207\u7ebf\u7a7a\u95f4\u4e2d\uff0c\u5728\u5207\u7ebf\u7a7a\u95f4\u4e2d\uff0c\u6cd5\u7ebf\u6c38\u8fdc\u6307\u7740\u6b63z\u65b9\u5411\u3002\u5b83\u5c31\u50cf\u6cd5\u7ebf\u8d34\u56fe\u5411\u91cf\u7684\u672c\u5730\u7a7a\u95f4\u3002\u4f7f\u7528\u4e00\u4e2a\u7279\u5b9a\u7684\u77e9\u9635\u6211\u4eec\u5c31\u80fd\u5c06\u5207\u7ebf\u7a7a\u95f4\u4e2d\u7684\u6cd5\u7ebf\u5411\u91cf\u8f6c\u6210\u4e16\u754c\u6216\u89c6\u56fe\u7a7a\u95f4\u4e0b\uff0c\u4f7f\u5b83\u4eec\u8f6c\u5411\u5230\u6700\u7ec8\u7684\u8d34\u56fe\u8868\u9762\u7684\u65b9\u5411\u3002 TBN\u77e9\u9635 TBN\u77e9\u9635\u8fd9\u4e09\u4e2a\u5b57\u6bcd\u5206\u522b\u4ee3\u8868 \u5207\u7ebf(Tagent)\u3001\u526f\u5207\u7ebf(Bitangent)\u548c\u6cd5\u7ebf(Normal) \u5411\u91cf\u3002\u8981\u5efa\u6784\u8fd9\u6837\u4e00\u4e2a\u628a\u5207\u7ebf\u7a7a\u95f4\u8f6c\u53d8\u4e3a\u4e0d\u540c\u7a7a\u95f4\u7684\u53d8\u5f02\u77e9\u9635\uff0c\u9700\u8981\u4e09\u4e2a\u76f8\u4e92\u5782\u76f4\u7684\u5411\u91cf\uff0c\u5b83\u4eec\u6cbf\u4e00\u4e2a\u8868\u9762\u7684\u6cd5\u7ebf\u8d34\u56fe\u5bf9\u9f50\u4e8e\uff1a\u4e0a\u3001\u53f3\u3001\u524d TBN\u77e9\u9635\u7684\u8ba1\u7b97\u53c2\u8003","title":"\u5207\u7ebf\u7a7a\u95f4\uff08tangent space\uff09"},{"location":"OpenGL/%E9%AB%98%E7%BA%A7GLSL/","text":"\u9ad8\u7ea7GLSL # GLSL\u7684\u5185\u5efa\u53d8\u91cf # GLSL \u5b9a\u4e49\u4e86\u4e00\u4e9b\u4ee5 gl_ \u4e3a\u524d\u7f00\u7684\u53d8\u91cf\uff0c\u4ee5\u4fbf \u8bfb\u53d6/\u5199\u5165 \u6570\u636e\u3002 Built-in_Variable (GLSL) \u63a5\u53e3\u5757 # \u5f53\u4ece\u9876\u70b9\u7740\u8272\u5668\u5411\u7247\u6bb5\u7740\u8272\u5668\u53d1\u9001\u6570\u636e\u65f6\uff0c\u53ef\u4ee5\u5728\u7740\u8272\u5668\u4e2d\u58f0\u660e\u5bf9\u5e94\u7684\u8f93\u5165/\u8f93\u51fa\u53d8\u91cf\uff0c\u8fd8\u53ef\u4ee5\u901a\u8fc7 \u63a5\u53e3\u5757(Interface Block) \u5c06\u53d8\u91cf\u7ec4\u5408\u8d77\u6765\u3002 \u63a5\u53e3\u5757\u7684\u58f0\u660e\u548c struct \u7684\u58f0\u660e\u6709\u70b9\u76f8\u50cf\uff0c\u4e0d\u540c\u7684\u662f\uff0c\u4f7f\u7528 in/out \u5173\u952e\u5b57\u6765\u5b9a\u4e49\u5b83\u662f\u4e00\u4e2a \u8f93\u5165/\u8f93\u51fa\u5757(Block)\u3002 \u6ce8\u610f \u5757\u540d(Block Name) \u9700\u4fdd\u6301\u4e00\u81f4\uff08VS_OUT\uff09\uff0c\u4f46\u5b9e\u4f8b\u540d(Instance Name)\u53ef\u4ee5\u662f\u968f\u610f\u7684\u3002 \u53ea\u8981\u4e24\u4e2a\u63a5\u53e3\u5757\u7684\u540d\u5b57\u4e00\u6837\uff0c\u5b83\u4eec\u5bf9\u5e94\u7684\u8f93\u5165\u548c\u8f93\u51fa\u5c06\u4f1a\u5339\u914d\u8d77\u6765\u3002 //Vertext.shader #version 330 core layout (location = 0) in vec3 aPos; layout (location = 1) in vec2 aTexCoords; uniform mat4 model; uniform mat4 view; uniform mat4 projection; out VS_OUT { vec2 TexCoords; } vs_out; void main() { gl_Position = projection * view * model * vec4(aPos, 1.0); vs_out.TexCoords = aTexCoords; } //Fragment.shader #version 330 core out vec4 FragColor; in VS_OUT { vec2 TexCoords; } fs_in; uniform sampler2D texture; void main() { FragColor = texture(texture, fs_in.TexCoords); } Uniform\u7f13\u51b2\u5bf9\u8c61 # Uniform\u7f13\u51b2\u5bf9\u8c61\u662f\u4e00\u79cd\u7ed9Shader\u4f20\u9012\u53c2\u6570\u7684\u91cd\u8981\u65b9\u5f0f\uff0c\u5141\u8bb8\u5c06\u6570\u636e\u53d1\u9001\u5230 Shader \u7684\u4efb\u610f\u9636\u6bb5\uff0c\u5373\u6bcf\u4e2a\u58f0\u660e\u4e86\u8be5 Uniform\u53d8\u91cf \u7684\u7740\u8272\u5668\u90fd\u80fd\u591f\u8bbf\u95ee\u8be5\u7f13\u51b2\u5bf9\u8c61\u3002","title":"\u9ad8\u7ea7GLSL"},{"location":"OpenGL/%E9%AB%98%E7%BA%A7GLSL/#glsl","text":"","title":"\u9ad8\u7ea7GLSL"},{"location":"OpenGL/%E9%AB%98%E7%BA%A7GLSL/#glsl_1","text":"GLSL \u5b9a\u4e49\u4e86\u4e00\u4e9b\u4ee5 gl_ \u4e3a\u524d\u7f00\u7684\u53d8\u91cf\uff0c\u4ee5\u4fbf \u8bfb\u53d6/\u5199\u5165 \u6570\u636e\u3002 Built-in_Variable (GLSL)","title":"GLSL\u7684\u5185\u5efa\u53d8\u91cf"},{"location":"OpenGL/%E9%AB%98%E7%BA%A7GLSL/#_1","text":"\u5f53\u4ece\u9876\u70b9\u7740\u8272\u5668\u5411\u7247\u6bb5\u7740\u8272\u5668\u53d1\u9001\u6570\u636e\u65f6\uff0c\u53ef\u4ee5\u5728\u7740\u8272\u5668\u4e2d\u58f0\u660e\u5bf9\u5e94\u7684\u8f93\u5165/\u8f93\u51fa\u53d8\u91cf\uff0c\u8fd8\u53ef\u4ee5\u901a\u8fc7 \u63a5\u53e3\u5757(Interface Block) \u5c06\u53d8\u91cf\u7ec4\u5408\u8d77\u6765\u3002 \u63a5\u53e3\u5757\u7684\u58f0\u660e\u548c struct \u7684\u58f0\u660e\u6709\u70b9\u76f8\u50cf\uff0c\u4e0d\u540c\u7684\u662f\uff0c\u4f7f\u7528 in/out \u5173\u952e\u5b57\u6765\u5b9a\u4e49\u5b83\u662f\u4e00\u4e2a \u8f93\u5165/\u8f93\u51fa\u5757(Block)\u3002 \u6ce8\u610f \u5757\u540d(Block Name) \u9700\u4fdd\u6301\u4e00\u81f4\uff08VS_OUT\uff09\uff0c\u4f46\u5b9e\u4f8b\u540d(Instance Name)\u53ef\u4ee5\u662f\u968f\u610f\u7684\u3002 \u53ea\u8981\u4e24\u4e2a\u63a5\u53e3\u5757\u7684\u540d\u5b57\u4e00\u6837\uff0c\u5b83\u4eec\u5bf9\u5e94\u7684\u8f93\u5165\u548c\u8f93\u51fa\u5c06\u4f1a\u5339\u914d\u8d77\u6765\u3002 //Vertext.shader #version 330 core layout (location = 0) in vec3 aPos; layout (location = 1) in vec2 aTexCoords; uniform mat4 model; uniform mat4 view; uniform mat4 projection; out VS_OUT { vec2 TexCoords; } vs_out; void main() { gl_Position = projection * view * model * vec4(aPos, 1.0); vs_out.TexCoords = aTexCoords; } //Fragment.shader #version 330 core out vec4 FragColor; in VS_OUT { vec2 TexCoords; } fs_in; uniform sampler2D texture; void main() { FragColor = texture(texture, fs_in.TexCoords); }","title":"\u63a5\u53e3\u5757"},{"location":"OpenGL/%E9%AB%98%E7%BA%A7GLSL/#uniform","text":"Uniform\u7f13\u51b2\u5bf9\u8c61\u662f\u4e00\u79cd\u7ed9Shader\u4f20\u9012\u53c2\u6570\u7684\u91cd\u8981\u65b9\u5f0f\uff0c\u5141\u8bb8\u5c06\u6570\u636e\u53d1\u9001\u5230 Shader \u7684\u4efb\u610f\u9636\u6bb5\uff0c\u5373\u6bcf\u4e2a\u58f0\u660e\u4e86\u8be5 Uniform\u53d8\u91cf \u7684\u7740\u8272\u5668\u90fd\u80fd\u591f\u8bbf\u95ee\u8be5\u7f13\u51b2\u5bf9\u8c61\u3002","title":"Uniform\u7f13\u51b2\u5bf9\u8c61"},{"location":"Read/%E7%A6%BB%E7%BB%8F%E5%8F%9B%E9%81%93/","text":"\u79bb\u7ecf\u53db\u9053 # \u7b2c\u4e00\u7ae0\uff1a \u6210\u529f\u4eba\u58eb\u4f1a\u5728\u7ec4\u5408\u4e2d\u5e73\u8861\u5404\u9879\u98ce\u9669 \u5f53\u5728\u4e00\u4e2a\u9886\u57df\u94e4\u800c\u8d70\u9669\u65f6\uff0c\u4f1a\u5728\u5176\u4ed6\u9886\u57df\u8c28\u614e\u884c\u4e8b\u6765\u964d\u4f4e\u6574\u4f53\u98ce\u9669\u6c34\u5e73 \u7b2c\u4e8c\u7ae0\uff1a \u8fc7\u5206\u81ea\u4fe1\u5728\u521b\u65b0\u9886\u57df\u53ef\u80fd\u662f\u4e00\u79cd\u7279\u522b\u96be\u4ee5\u514b\u670d\u7684\u8ba4\u77e5\u504f\u5dee \u6ca1\u6709\u4eba\u4f1a\u8ba4\u4e3a\u81ea\u5df1\u7684\u60f3\u6cd5\u4e0d\u591f\u597d \u521b\u610f\u5929\u624d\u5728\u4ed6\u4eec\u6240\u5728\u9886\u57df\u7684\u4f5c\u54c1\u5e76\u4e0d\u6bd4\u540c\u884c\u7684\u4f5c\u54c1\u8d28\u91cf\u66f4\u597d\uff0c\u4ed6\u4eec\u53ea\u662f\u6709\u5927\u91cf\u7684\u60f3\u6cd5\u800c\u5df2 \u4e00\u4e2a\u4eba\u80fd\u60f3\u51fa\u6709\u5f71\u54cd\u529b\u7684\u6210\u529f\u521b\u610f\u7684\u6982\u7387\u540c\u4ed6\u60f3\u51fa\u7684\u521b\u610f\u603b\u6570\u6210\u6b63\u6bd4 \u60f3\u8981\u5f97\u5230\u4e00\u4e2a\u597d\u6807\u9898\uff0c\u4f60\u5f97\u81f3\u5c11\u5148\u60f3\u51fa25\u4e2a \u7ecf\u9a8c\u662f\u4e00\u628a\u53cc\u5203\u5251 \u5982\u679c\u60f3\u8fdb\u884c\u521b\u65b0\u6027\u7684\u8054\u60f3\uff0c\u5c31\u8981\u6709\u4e0e\u4ed6\u4eba\u4e0d\u4e00\u6837\u7684\u7ecf\u5386 \u8fc7\u53bb\u8d8a\u6210\u529f\u7684\u4eba\uff0c\u5728\u65b0\u73af\u5883\u4e2d\u8868\u73b0\u8d8a\u5dee\u3002\u4ed6\u4eec\u8fc7\u4e8e\u81ea\u4fe1\uff0c\u800c\u4e14\u4e0d\u592a\u53ef\u80fd\u542c\u53d6\u522b\u4eba\u7684\u6279\u8bc4\u610f\u89c1 \u7b2c\u4e09\u7ae0\uff1a \u5f53\u4eba\u5728\u7f3a\u4e4f\u5c0a\u91cd\u5374\u8bd5\u56fe\u5bf9\u4ed6\u4eba\u65bd\u52a0\u5f71\u54cd\u65f6\uff0c\u522b\u4eba\u4f1a\u8ba4\u4e3a\u6b64\u4eba\u96be\u4ee5\u76f8\u5904\u3001\u5f3a\u786c\u3001\u81ea\u79c1\u81ea\u5229\u3002\u5728\u884c\u4f7f\u6743\u529b\u4e4b\u524d\uff0c\u5e94\u8be5\u5148\u8d62\u5f97\u5730\u4f4d \u6743\u5229\uff1a\u6d89\u53ca\u5bf9\u4ed6\u4eba\u65bd\u52a0\u63a7\u5236\u548c\u6743\u5a01 \u5730\u4f4d\uff1a\u53d7\u5230\u4ed6\u4eba\u7684\u5c0a\u91cd\u548c\u94a6\u4f69 \u7b2c\u56db\u7ae0\uff1a \u7b49\u5f85\u65f6\u673a\u5c24\u4e3a\u91cd\u8981 \u5148\u53d1\u5236\u4eba\u53ea\u662f\u4e00\u79cd\u624b\u6bb5\uff0c\u800c\u4e0d\u662f\u6700\u7ec8\u76ee\u7684 \u7b2c\u4e94\u7ae0\uff1a \u8054\u76df\u662f\u5f3a\u5927\u6709\u529b\u7684\uff0c\u4f46\u5b83\u540c\u65f6\u53c8\u6709\u5185\u5728\u7684\u4e0d\u7a33\u5b9a\u6027 \u76ee\u6807\u4e00\u81f4\u662f\u5efa\u7acb\u8054\u76df\u7684\u524d\u63d0\uff0c\u800c\u7b56\u7565\u4e00\u81f4\u662f\u8054\u76df\u6301\u4e45\u7684\u6807\u51c6 \u7b2c\u516d\u7ae0\uff1a \u79f0\u8d5e\u4eba\u683c\uff0c\u800c\u4e0d\u662f\u5177\u4f53\u7684\u884c\u4e3a \u5f53\u4eba\u683c\u53d7\u5230\u79f0\u8d5e\u65f6\uff0c\u4eba\u4eec\u4f1a\u5185\u5316\u4ed6\uff0c\u4f7f\u5176\u4f5c\u4e3a\u81ea\u8eab\u7684\u4e00\u90e8\u5206\uff0c\u800c\u4e0d\u662f\u8ba4\u4e3a\u81ea\u5df1\u53ea\u662f\u53c2\u4e0e\u4e86\u4e00\u4e2a\u5b64\u7acb\u7684\u9053\u5fb7\u884c\u4e3a\u4e8b\u4ef6 \u4eba\u683c\u8d5e\u626c\u4f1a\u7559\u4e0b\u6700\u6301\u4e45\u7684\u5370\u8bb0 \u7b2c\u4e03\u7ae0\uff1a \u56e2\u4f53\u8ff7\u601d\uff1a\u56e2\u4f53\u5728\u51b3\u7b56\u8fc7\u7a0b\u4e2d\uff0c\u7531\u4e8e\u6210\u5458\u503e\u5411\u8ba9\u81ea\u5df1\u7684\u89c2\u70b9\u4e0e\u56e2\u4f53\u4e00\u81f4\uff0c\u56e0\u800c\u4ee4\u6574\u4e2a\u56e2\u4f53\u7f3a\u4e4f\u4e0d\u540c\u7684\u601d\u8003\u89d2\u5ea6\uff0c\u4e0d\u80fd\u8fdb\u884c\u5ba2\u89c2\u5206\u6790\u3002 \u5982\u4f55\u907f\u514d\u56e2\u4f53\u8ff7\u601d \u5bfb\u627e\u5f02\u89c1\u8005\uff0c\u8fdb\u884c\u5f7b\u5e95\u7684\u8ba8\u8bba \u5373\u4fbf\u5f02\u89c1\u662f\u9519\u8bef\u7684\uff0c\u4ed6\u4eec\u4e5f\u662f\u6709\u7528\u7684 \u7b2c\u516b\u7ae0\uff1a \u9632\u5fa1\u6027\u60b2\u89c2\u4e3b\u4e49\u662f\u5728\u7279\u5b9a\u60c5\u51b5\u4e0b\u7528\u6765\u7ba1\u63a7\u7126\u8651\u3001\u6050\u60e7\u548c\u62c5\u5fe7\u7684\u4e00\u79cd\u6218\u7565\u3002\u8003\u8651\u6bcf\u4e00\u4e2a\u7ec6\u8282\u786e\u4fdd\u4e0d\u4f1a\u5931\u8d25\uff0c\u5c06\u7126\u8651\u8f6c\u5316\u4e3a\u52a8\u529b \u9762\u5bf9\u6050\u60e7\u65f6\uff0c\u4e0d\u5e94\u8be5\u6fc0\u6d3b\u505c\u6b62\u7cfb\u7edf\uff08\u51b7\u9759\uff09\uff0c\u800c\u5e94\u8be5\u6fc0\u6d3b\u524d\u8fdb\u7cfb\u7edf\uff08\u5174\u594b\uff09\uff0c\u6210\u529f\u7387\u4f1a\u5927\u5927\u63d0\u9ad8 \u6d88\u9664\u4ed6\u4eba\u7684\u6050\u60e7\u7684\u6700\u597d\u529e\u6cd5\u662f\u901a\u8fc7\u67d0\u4e9b\u4fe1\u53f7\u544a\u8bc9\u4ed6\u4eec\uff0c\u4ed6\u4eec\u5e76\u4e0d\u5b64\u5355 \u540c\u4e00\u4e8b\u4ef6\u540c\u4e00\u884c\u4e3a \u63cf\u8ff0\u8fd9\u6837\u505a\u5e26\u6765\u7684\u597d\u5904\u548c\u4e0d\u8fd9\u6837\u505a\u5e26\u6765\u7684\u574f\u5904\uff0c\u4eba\u4eec\u7684\u9009\u62e9\u53ef\u80fd\u4f1a\u622a\u7136\u76f8\u53cd","title":"\u79bb\u7ecf\u53db\u9053"},{"location":"Read/%E7%A6%BB%E7%BB%8F%E5%8F%9B%E9%81%93/#_1","text":"\u7b2c\u4e00\u7ae0\uff1a \u6210\u529f\u4eba\u58eb\u4f1a\u5728\u7ec4\u5408\u4e2d\u5e73\u8861\u5404\u9879\u98ce\u9669 \u5f53\u5728\u4e00\u4e2a\u9886\u57df\u94e4\u800c\u8d70\u9669\u65f6\uff0c\u4f1a\u5728\u5176\u4ed6\u9886\u57df\u8c28\u614e\u884c\u4e8b\u6765\u964d\u4f4e\u6574\u4f53\u98ce\u9669\u6c34\u5e73 \u7b2c\u4e8c\u7ae0\uff1a \u8fc7\u5206\u81ea\u4fe1\u5728\u521b\u65b0\u9886\u57df\u53ef\u80fd\u662f\u4e00\u79cd\u7279\u522b\u96be\u4ee5\u514b\u670d\u7684\u8ba4\u77e5\u504f\u5dee \u6ca1\u6709\u4eba\u4f1a\u8ba4\u4e3a\u81ea\u5df1\u7684\u60f3\u6cd5\u4e0d\u591f\u597d \u521b\u610f\u5929\u624d\u5728\u4ed6\u4eec\u6240\u5728\u9886\u57df\u7684\u4f5c\u54c1\u5e76\u4e0d\u6bd4\u540c\u884c\u7684\u4f5c\u54c1\u8d28\u91cf\u66f4\u597d\uff0c\u4ed6\u4eec\u53ea\u662f\u6709\u5927\u91cf\u7684\u60f3\u6cd5\u800c\u5df2 \u4e00\u4e2a\u4eba\u80fd\u60f3\u51fa\u6709\u5f71\u54cd\u529b\u7684\u6210\u529f\u521b\u610f\u7684\u6982\u7387\u540c\u4ed6\u60f3\u51fa\u7684\u521b\u610f\u603b\u6570\u6210\u6b63\u6bd4 \u60f3\u8981\u5f97\u5230\u4e00\u4e2a\u597d\u6807\u9898\uff0c\u4f60\u5f97\u81f3\u5c11\u5148\u60f3\u51fa25\u4e2a \u7ecf\u9a8c\u662f\u4e00\u628a\u53cc\u5203\u5251 \u5982\u679c\u60f3\u8fdb\u884c\u521b\u65b0\u6027\u7684\u8054\u60f3\uff0c\u5c31\u8981\u6709\u4e0e\u4ed6\u4eba\u4e0d\u4e00\u6837\u7684\u7ecf\u5386 \u8fc7\u53bb\u8d8a\u6210\u529f\u7684\u4eba\uff0c\u5728\u65b0\u73af\u5883\u4e2d\u8868\u73b0\u8d8a\u5dee\u3002\u4ed6\u4eec\u8fc7\u4e8e\u81ea\u4fe1\uff0c\u800c\u4e14\u4e0d\u592a\u53ef\u80fd\u542c\u53d6\u522b\u4eba\u7684\u6279\u8bc4\u610f\u89c1 \u7b2c\u4e09\u7ae0\uff1a \u5f53\u4eba\u5728\u7f3a\u4e4f\u5c0a\u91cd\u5374\u8bd5\u56fe\u5bf9\u4ed6\u4eba\u65bd\u52a0\u5f71\u54cd\u65f6\uff0c\u522b\u4eba\u4f1a\u8ba4\u4e3a\u6b64\u4eba\u96be\u4ee5\u76f8\u5904\u3001\u5f3a\u786c\u3001\u81ea\u79c1\u81ea\u5229\u3002\u5728\u884c\u4f7f\u6743\u529b\u4e4b\u524d\uff0c\u5e94\u8be5\u5148\u8d62\u5f97\u5730\u4f4d \u6743\u5229\uff1a\u6d89\u53ca\u5bf9\u4ed6\u4eba\u65bd\u52a0\u63a7\u5236\u548c\u6743\u5a01 \u5730\u4f4d\uff1a\u53d7\u5230\u4ed6\u4eba\u7684\u5c0a\u91cd\u548c\u94a6\u4f69 \u7b2c\u56db\u7ae0\uff1a \u7b49\u5f85\u65f6\u673a\u5c24\u4e3a\u91cd\u8981 \u5148\u53d1\u5236\u4eba\u53ea\u662f\u4e00\u79cd\u624b\u6bb5\uff0c\u800c\u4e0d\u662f\u6700\u7ec8\u76ee\u7684 \u7b2c\u4e94\u7ae0\uff1a \u8054\u76df\u662f\u5f3a\u5927\u6709\u529b\u7684\uff0c\u4f46\u5b83\u540c\u65f6\u53c8\u6709\u5185\u5728\u7684\u4e0d\u7a33\u5b9a\u6027 \u76ee\u6807\u4e00\u81f4\u662f\u5efa\u7acb\u8054\u76df\u7684\u524d\u63d0\uff0c\u800c\u7b56\u7565\u4e00\u81f4\u662f\u8054\u76df\u6301\u4e45\u7684\u6807\u51c6 \u7b2c\u516d\u7ae0\uff1a \u79f0\u8d5e\u4eba\u683c\uff0c\u800c\u4e0d\u662f\u5177\u4f53\u7684\u884c\u4e3a \u5f53\u4eba\u683c\u53d7\u5230\u79f0\u8d5e\u65f6\uff0c\u4eba\u4eec\u4f1a\u5185\u5316\u4ed6\uff0c\u4f7f\u5176\u4f5c\u4e3a\u81ea\u8eab\u7684\u4e00\u90e8\u5206\uff0c\u800c\u4e0d\u662f\u8ba4\u4e3a\u81ea\u5df1\u53ea\u662f\u53c2\u4e0e\u4e86\u4e00\u4e2a\u5b64\u7acb\u7684\u9053\u5fb7\u884c\u4e3a\u4e8b\u4ef6 \u4eba\u683c\u8d5e\u626c\u4f1a\u7559\u4e0b\u6700\u6301\u4e45\u7684\u5370\u8bb0 \u7b2c\u4e03\u7ae0\uff1a \u56e2\u4f53\u8ff7\u601d\uff1a\u56e2\u4f53\u5728\u51b3\u7b56\u8fc7\u7a0b\u4e2d\uff0c\u7531\u4e8e\u6210\u5458\u503e\u5411\u8ba9\u81ea\u5df1\u7684\u89c2\u70b9\u4e0e\u56e2\u4f53\u4e00\u81f4\uff0c\u56e0\u800c\u4ee4\u6574\u4e2a\u56e2\u4f53\u7f3a\u4e4f\u4e0d\u540c\u7684\u601d\u8003\u89d2\u5ea6\uff0c\u4e0d\u80fd\u8fdb\u884c\u5ba2\u89c2\u5206\u6790\u3002 \u5982\u4f55\u907f\u514d\u56e2\u4f53\u8ff7\u601d \u5bfb\u627e\u5f02\u89c1\u8005\uff0c\u8fdb\u884c\u5f7b\u5e95\u7684\u8ba8\u8bba \u5373\u4fbf\u5f02\u89c1\u662f\u9519\u8bef\u7684\uff0c\u4ed6\u4eec\u4e5f\u662f\u6709\u7528\u7684 \u7b2c\u516b\u7ae0\uff1a \u9632\u5fa1\u6027\u60b2\u89c2\u4e3b\u4e49\u662f\u5728\u7279\u5b9a\u60c5\u51b5\u4e0b\u7528\u6765\u7ba1\u63a7\u7126\u8651\u3001\u6050\u60e7\u548c\u62c5\u5fe7\u7684\u4e00\u79cd\u6218\u7565\u3002\u8003\u8651\u6bcf\u4e00\u4e2a\u7ec6\u8282\u786e\u4fdd\u4e0d\u4f1a\u5931\u8d25\uff0c\u5c06\u7126\u8651\u8f6c\u5316\u4e3a\u52a8\u529b \u9762\u5bf9\u6050\u60e7\u65f6\uff0c\u4e0d\u5e94\u8be5\u6fc0\u6d3b\u505c\u6b62\u7cfb\u7edf\uff08\u51b7\u9759\uff09\uff0c\u800c\u5e94\u8be5\u6fc0\u6d3b\u524d\u8fdb\u7cfb\u7edf\uff08\u5174\u594b\uff09\uff0c\u6210\u529f\u7387\u4f1a\u5927\u5927\u63d0\u9ad8 \u6d88\u9664\u4ed6\u4eba\u7684\u6050\u60e7\u7684\u6700\u597d\u529e\u6cd5\u662f\u901a\u8fc7\u67d0\u4e9b\u4fe1\u53f7\u544a\u8bc9\u4ed6\u4eec\uff0c\u4ed6\u4eec\u5e76\u4e0d\u5b64\u5355 \u540c\u4e00\u4e8b\u4ef6\u540c\u4e00\u884c\u4e3a \u63cf\u8ff0\u8fd9\u6837\u505a\u5e26\u6765\u7684\u597d\u5904\u548c\u4e0d\u8fd9\u6837\u505a\u5e26\u6765\u7684\u574f\u5904\uff0c\u4eba\u4eec\u7684\u9009\u62e9\u53ef\u80fd\u4f1a\u622a\u7136\u76f8\u53cd","title":"\u79bb\u7ecf\u53db\u9053"},{"location":"UE4/Gameplay%E6%9E%B6%E6%9E%84/","text":"Server-Client\u67b6\u6784 # \u67b6\u6784 # ServerOnly Server&Clients Server&OwningClient OwningClientOnly AGameMode AGameState & APlayerState & APawn APlayerController AHUD & UMG AGameMode # namespace MatchState { const FName EnteringMap = FName(TEXT(\"EnteringMap\")); const FName WaitingToStart = FName(TEXT(\"WaitingToStart\")); const FName InProgress = FName(TEXT(\"InProgress\")); const FName WaitingPostMatch = FName(TEXT(\"WaitingPostMatch\")); const FName LeavingMap = FName(TEXT(\"LeavingMap\")); const FName Aborted = FName(TEXT(\"Aborted\")); } RPC # Server\u3001Client\u3001NetMulticast \u58f0\u660e RPC \u51fd\u6570\u65f6\uff0c\u4f1a\u58f0\u660e\u4e00\u4e2a\u540d\u4e3a \u51fd\u6570\u540d_Implementation \u7684\u9644\u52a0\u51fd\u6570\uff0c\u800c\u8fd9\u4e2a\u9644\u52a0\u51fd\u6570\u624d\u662f\u6211\u4eec\u9700\u8981\u5b9e\u73b0\u7684 \u8fdc\u7a0b\u51fd\u6570 Reliable\u3001Unreliable \u7531\u4e8e\u5e26\u5bbd\u6216\u7f51\u7edc\u9519\u8bef\u4f1a\u5bfc\u81f4 RPC \u5931\u8d25\uff0c\u5f53\u58f0\u660e\u4e3a Reliable \u65f6\uff0c\u4f1a\u786e\u4fdd RPC \u6210\u529f WithValidation \u58f0\u660e RPC \u51fd\u6570\u65f6\uff0c\u4f1a\u58f0\u660e\u4e00\u4e2a\u540d\u4e3a \u51fd\u6570\u540d_Validate \u7684\u9644\u52a0\u51fd\u6570\uff0c\u6b64\u51fd\u6570\u4f7f\u7528\u76f8\u540c\u7684\u53c2\u6570\uff0c\u4f46\u662f\u4f1a\u8fd4\u56de bool\u503c \uff0c\u53ea\u6709\u8fd4\u56de true \u65f6\u624d\u4f1a\u6210\u529f\u8c03\u7528 RPC","title":"Server-Client\u67b6\u6784"},{"location":"UE4/Gameplay%E6%9E%B6%E6%9E%84/#server-client","text":"","title":"Server-Client\u67b6\u6784"},{"location":"UE4/Gameplay%E6%9E%B6%E6%9E%84/#_1","text":"ServerOnly Server&Clients Server&OwningClient OwningClientOnly AGameMode AGameState & APlayerState & APawn APlayerController AHUD & UMG","title":"\u67b6\u6784"},{"location":"UE4/Gameplay%E6%9E%B6%E6%9E%84/#agamemode","text":"namespace MatchState { const FName EnteringMap = FName(TEXT(\"EnteringMap\")); const FName WaitingToStart = FName(TEXT(\"WaitingToStart\")); const FName InProgress = FName(TEXT(\"InProgress\")); const FName WaitingPostMatch = FName(TEXT(\"WaitingPostMatch\")); const FName LeavingMap = FName(TEXT(\"LeavingMap\")); const FName Aborted = FName(TEXT(\"Aborted\")); }","title":"AGameMode"},{"location":"UE4/Gameplay%E6%9E%B6%E6%9E%84/#rpc","text":"Server\u3001Client\u3001NetMulticast \u58f0\u660e RPC \u51fd\u6570\u65f6\uff0c\u4f1a\u58f0\u660e\u4e00\u4e2a\u540d\u4e3a \u51fd\u6570\u540d_Implementation \u7684\u9644\u52a0\u51fd\u6570\uff0c\u800c\u8fd9\u4e2a\u9644\u52a0\u51fd\u6570\u624d\u662f\u6211\u4eec\u9700\u8981\u5b9e\u73b0\u7684 \u8fdc\u7a0b\u51fd\u6570 Reliable\u3001Unreliable \u7531\u4e8e\u5e26\u5bbd\u6216\u7f51\u7edc\u9519\u8bef\u4f1a\u5bfc\u81f4 RPC \u5931\u8d25\uff0c\u5f53\u58f0\u660e\u4e3a Reliable \u65f6\uff0c\u4f1a\u786e\u4fdd RPC \u6210\u529f WithValidation \u58f0\u660e RPC \u51fd\u6570\u65f6\uff0c\u4f1a\u58f0\u660e\u4e00\u4e2a\u540d\u4e3a \u51fd\u6570\u540d_Validate \u7684\u9644\u52a0\u51fd\u6570\uff0c\u6b64\u51fd\u6570\u4f7f\u7528\u76f8\u540c\u7684\u53c2\u6570\uff0c\u4f46\u662f\u4f1a\u8fd4\u56de bool\u503c \uff0c\u53ea\u6709\u8fd4\u56de true \u65f6\u624d\u4f1a\u6210\u529f\u8c03\u7528 RPC","title":"RPC"},{"location":"UE4/NewObject%E5%92%8CCreateDefaultSubobject/","text":"NewObject\u548cCreateDefaultSubobject # \u5728 UE4 \u4e2d\uff0c\u521b\u5efa UObject \u5bf9\u8c61\u6709 2 \u79cd\u65b9\u5f0f NewObject \u5728\u975e\u6784\u9020\u51fd\u6570\u4e2d\u4f7f\u7528 CreateDefaultSubobject \u5728\u6784\u9020\u51fd\u6570\u4e2d\u4f7f\u7528 NewObject # NewObject \u6784\u9020\u5b8c\u53c2\u6570 FStaticConstructObjectParameters \u540e\uff0c\u76f4\u63a5\u8c03\u7528\u7684 StaticConstructObject_Internal(Params) /** * Convenience template for constructing a gameplay object * * @param Outer the outer for the new object. If not specified, object will be created in the transient package. * @param Class the class of object to construct * @param Name the name for the new object. If not specified, the object will be given a transient name via MakeUniqueObjectName * @param Flags the object flags to apply to the new object * @param Template the object to use for initializing the new object. If not specified, the class's default object will be used * @param bCopyTransientsFromClassDefaults if true, copy transient from the class defaults instead of the pass in archetype ptr (often these are the same) * @param InInstanceGraph contains the mappings of instanced objects and components to their templates * @param ExternalPackage Assign an external Package to the created object if non-null * * @return a pointer of type T to a new object of the specified class */ template< class T > FUNCTION_NON_NULL_RETURN_START T* NewObject(UObject* Outer, const UClass* Class, FName Name = NAME_None, EObjectFlags Flags = RF_NoFlags, UObject* Template = nullptr, bool bCopyTransientsFromClassDefaults = false, FObjectInstancingGraph* InInstanceGraph = nullptr, UPackage* ExternalPackage = nullptr) FUNCTION_NON_NULL_RETURN_END { if (Name == NAME_None) { FObjectInitializer::AssertIfInConstructor(Outer, TEXT(\"NewObject with empty name can't be used to create default subobjects (inside of UObject derived class constructor) as it produces inconsistent object names. Use ObjectInitializer.CreateDefaultSubobject<> instead.\")); } #if DO_CHECK // Class was specified explicitly, so needs to be validated CheckIsClassChildOf_Internal(T::StaticClass(), Class); #endif FStaticConstructObjectParameters Params(Class); Params.Outer = Outer; Params.Name = Name; Params.SetFlags = Flags; Params.Template = Template; Params.bCopyTransientsFromClassDefaults = bCopyTransientsFromClassDefaults; Params.InstanceGraph = InInstanceGraph; Params.ExternalPackage = ExternalPackage; return static_cast<T*>(StaticConstructObject_Internal(Params)); } CreateDefaultSubobject # CreateDefaultSubobject \u6700\u7ec8\u4e5f\u662f\u8c03\u7528 StaticConstructObject_Internal \u6765\u521b\u5efa\u5bf9\u8c61\uff0c\u4f46\u5728\u8fd9\u4e4b\u524d\u4f1a\u7ecf\u8fc7 FObjectInitializer::CreateDefaultSubobject \u7684\u5904\u7406 /** * Create an optional component or subobject. Optional subobjects will not get created * if a derived class specified DoNotCreateDefaultSubobject with the subobject's name. * @param TReturnType Class of return type, all overrides must be of this type * @param SubobjectName Name of the new component * @param bTransient True if the component is being assigned to a transient property. This does not make the component itself transient, but does stop it from inheriting parent defaults */ template<class TReturnType> TReturnType* CreateOptionalDefaultSubobject(FName SubobjectName, bool bTransient = false) { UClass* ReturnType = TReturnType::StaticClass(); return static_cast<TReturnType*>(CreateDefaultSubobject(SubobjectName, ReturnType, ReturnType, /*bIsRequired =*/ false, bTransient)); } /** * Create an optional component or subobject. Optional subobjects will not get created * if a derived class specified DoNotCreateDefaultSubobject with the subobject's name. * @param TReturnType Class of return type, all overrides must be of this type * @param TClassToConstructByDefault Class of object to actually construct, must be a subclass of TReturnType * @param SubobjectName Name of the new component * @param bTransient True if the component is being assigned to a transient property. This does not make the component itself transient, but does stop it from inheriting parent defaults */ template<class TReturnType, class TClassToConstructByDefault> TReturnType* CreateOptionalDefaultSubobject(FName SubobjectName, bool bTransient = false) { return static_cast<TReturnType*>(CreateDefaultSubobject(SubobjectName, TReturnType::StaticClass(), TClassToConstructByDefault::StaticClass(), /*bIsRequired =*/ false, bTransient)); } /** Utility function for templates below */ UObject* CreateDefaultSubobject(FName SubobjectFName, UClass* ReturnType, UClass* ClassToCreateByDefault, bool bIsRequired, bool bIsTransient); UObject* UObject::CreateDefaultSubobject(FName SubobjectFName, UClass* ReturnType, UClass* ClassToCreateByDefault, bool bIsRequired, bool bIsTransient) { FObjectInitializer* CurrentInitializer = FUObjectThreadContext::Get().TopInitializer(); UE_CLOG(!CurrentInitializer, LogObj, Fatal, TEXT(\"No object initializer found during construction.\")); UE_CLOG(CurrentInitializer->Obj != this, LogObj, Fatal, TEXT(\"Using incorrect object initializer.\")); return CurrentInitializer->CreateDefaultSubobject(this, SubobjectFName, ReturnType, ClassToCreateByDefault, bIsRequired, bIsTransient); } FObjectInitializer::CreateDefaultSubobject # \u4e3b\u8981\u76ee\u7684\u5c31\u662f \u4f7f\u7528 ComponentOverrides \u4e2d\u7684\u6307\u5b9a UClass \u66ff\u4ee3 ClassToCreateByDefault \u6765\u521b\u5efa\u5bf9\u8c61 \u4f1a\u68c0\u67e5\u662f\u5426\u5728\u6784\u9020\u51fd\u6570\u4e2d\u8c03\u7528 \u901a\u8fc7 ObjectInitializer->SetDefaultSubobjectClass \u6765\u6307\u5b9a UClass \u66ff\u4ee3 ClassToCreateByDefault \u901a\u8fc7 ObjectInitializer->DoNotCreateDefaultSubobject \u6307\u5b9a\u4e3a nullptr \u4e14 !bIsRequired \uff0c\u5219\u4e0d\u521b\u5efa UObject* FObjectInitializer::CreateDefaultSubobject(UObject* Outer, FName SubobjectFName, UClass* ReturnType, UClass* ClassToCreateByDefault, bool bIsRequired, bool bIsTransient) const { UE_CLOG(!FUObjectThreadContext::Get().IsInConstructor, LogClass, Fatal, TEXT(\"Subobjects cannot be created outside of UObject constructors. UObject constructing subobjects cannot be created using new or placement new operator.\")); if (SubobjectFName == NAME_None) { UE_LOG(LogClass, Fatal, TEXT(\"Illegal default subobject name: %s\"), *SubobjectFName.ToString()); } UObject* Result = NULL; UClass* OverrideClass = ComponentOverrides.Get(SubobjectFName, ReturnType, ClassToCreateByDefault, *this); if (!OverrideClass && bIsRequired) { OverrideClass = ClassToCreateByDefault; UE_LOG(LogClass, Warning, TEXT(\"Ignored DoNotCreateDefaultSubobject for %s as it's marked as required. Creating %s.\"), *SubobjectFName.ToString(), *OverrideClass->GetName()); } if (OverrideClass) { check(OverrideClass->IsChildOf(ReturnType)); if (OverrideClass->HasAnyClassFlags(CLASS_Abstract)) { // Attempts to create an abstract class will return null. If it is not optional or the owning class is not also abstract report a warning. if (!bIsRequired && !Outer->GetClass()->HasAnyClassFlags(CLASS_Abstract)) { UE_LOG(LogClass, Warning, TEXT(\"Required default subobject %s not created as requested class %s is abstract. Returning null.\"), *SubobjectFName.ToString(), *OverrideClass->GetName()); } } else { UObject* Template = OverrideClass->GetDefaultObject(); // force the CDO to be created if it hasn't already EObjectFlags SubobjectFlags = Outer->GetMaskedFlags(RF_PropagateToSubObjects) | RF_DefaultSubObject; bool bOwnerArchetypeIsNotNative; UClass* OuterArchetypeClass; // It is not safe to mark this component as properly transient, that results in it being nulled incorrectly OuterArchetypeClass = Outer->GetArchetype()->GetClass(); bOwnerArchetypeIsNotNative = !OuterArchetypeClass->HasAnyClassFlags(CLASS_Native | CLASS_Intrinsic); const bool bOwnerTemplateIsNotCDO = ObjectArchetype != nullptr && ObjectArchetype != Outer->GetClass()->GetDefaultObject(false) && !Outer->HasAnyFlags(RF_ClassDefaultObject); #if !UE_BUILD_SHIPPING // Guard against constructing the same subobject multiple times. // We only need to check the name as ConstructObject would fail anyway if an object of the same name but different class already existed. if (ConstructedSubobjects.Find(SubobjectFName) != INDEX_NONE) { UE_LOG(LogClass, Fatal, TEXT(\"Default subobject %s %s already exists for %s.\"), *OverrideClass->GetName(), *SubobjectFName.ToString(), *Outer->GetFullName()); } else { ConstructedSubobjects.Add(SubobjectFName); } #endif FStaticConstructObjectParameters Params(OverrideClass); Params.Outer = Outer; Params.Name = SubobjectFName; Params.SetFlags = SubobjectFlags; Result = StaticConstructObject_Internal(Params); if (!bIsTransient && (bOwnerArchetypeIsNotNative || bOwnerTemplateIsNotCDO)) { UObject* MaybeTemplate = nullptr; if (bOwnerTemplateIsNotCDO) { // Try to get the subobject template from the specified object template MaybeTemplate = ObjectArchetype->GetDefaultSubobjectByName(SubobjectFName); } if (!MaybeTemplate) { // The archetype of the outer is not native, so we need to copy properties to the subobjects after the C++ constructor chain for the outer has run (because those sets properties on the subobjects) MaybeTemplate = OuterArchetypeClass->GetDefaultSubobjectByName(SubobjectFName); } if (MaybeTemplate && MaybeTemplate->IsA(ReturnType) && Template != MaybeTemplate) { ComponentInits.Add(Result, MaybeTemplate); } } if (Outer->HasAnyFlags(RF_ClassDefaultObject) && Outer->GetClass()->GetSuperClass()) { #if WITH_EDITOR // Default subobjects on the CDO should be transactional, so that we can undo/redo changes made to those objects. // One current example of this is editing natively defined components in the Blueprint Editor. Result->SetFlags(RF_Transactional); #endif Outer->GetClass()->AddDefaultSubobject(Result, ReturnType); } // Clear PendingKill flag in case we recycled a subobject of a dead object. // @todo: we should not be recycling subobjects unless we're currently loading from a package Result->ClearInternalFlags(EInternalObjectFlags::PendingKill); } } return Result; } UObject* StaticConstructObject_Internal # \u5728\u51fd\u6570 StaticConstructObject_Internal \u4e2d Result = StaticAllocateObject(InClass, InOuter, InName, InFlags, Params.InternalSetFlags, bCanRecycleSubobjects, &bRecycledSubobject, Params.ExternalPackage) ; \u7533\u8bf7\u5185\u5b58\u7a7a\u95f4 (*InClass->ClassConstructor)( FObjectInitializer(Result, InTemplate, Params.bCopyTransientsFromClassDefaults, true, Params.InstanceGraph) ) ; \u8c03\u7528\u6784\u9020\u51fd\u6570 UObject* StaticConstructObject_Internal(const FStaticConstructObjectParameters& Params) { .... // \u7533\u8bf7\u5185\u5b58 Result = StaticAllocateObject(InClass, InOuter, InName, InFlags, Params.InternalSetFlags, bCanRecycleSubobjects, &bRecycledSubobject, Params.ExternalPackage); check(Result != NULL); // Don't call the constructor on recycled subobjects, they haven't been destroyed. if (!bRecycledSubobject) { STAT(FScopeCycleCounterUObject ConstructorScope(InClass->GetFName().IsNone() ? nullptr : InClass, GET_STATID(STAT_ConstructObject))); //\u8c03\u7528\u6784\u9020\u51fd\u6570 (*InClass->ClassConstructor)( FObjectInitializer(Result, InTemplate, Params.bCopyTransientsFromClassDefaults, true, Params.InstanceGraph) ); } if( GIsEditor && GUndo && (InFlags & RF_Transactional) && !(InFlags & RF_NeedLoad) && !InClass->IsChildOf(UField::StaticClass()) ) { // Set RF_PendingKill and update the undo buffer so an undo operation will set RF_PendingKill on the newly constructed object. Result->MarkPendingKill(); SaveToTransactionBuffer(Result, false); Result->ClearPendingKill(); } return Result; }","title":"NewObject\u548cCreateDefaultSubobject"},{"location":"UE4/NewObject%E5%92%8CCreateDefaultSubobject/#newobjectcreatedefaultsubobject","text":"\u5728 UE4 \u4e2d\uff0c\u521b\u5efa UObject \u5bf9\u8c61\u6709 2 \u79cd\u65b9\u5f0f NewObject \u5728\u975e\u6784\u9020\u51fd\u6570\u4e2d\u4f7f\u7528 CreateDefaultSubobject \u5728\u6784\u9020\u51fd\u6570\u4e2d\u4f7f\u7528","title":"NewObject\u548cCreateDefaultSubobject"},{"location":"UE4/NewObject%E5%92%8CCreateDefaultSubobject/#newobject","text":"NewObject \u6784\u9020\u5b8c\u53c2\u6570 FStaticConstructObjectParameters \u540e\uff0c\u76f4\u63a5\u8c03\u7528\u7684 StaticConstructObject_Internal(Params) /** * Convenience template for constructing a gameplay object * * @param Outer the outer for the new object. If not specified, object will be created in the transient package. * @param Class the class of object to construct * @param Name the name for the new object. If not specified, the object will be given a transient name via MakeUniqueObjectName * @param Flags the object flags to apply to the new object * @param Template the object to use for initializing the new object. If not specified, the class's default object will be used * @param bCopyTransientsFromClassDefaults if true, copy transient from the class defaults instead of the pass in archetype ptr (often these are the same) * @param InInstanceGraph contains the mappings of instanced objects and components to their templates * @param ExternalPackage Assign an external Package to the created object if non-null * * @return a pointer of type T to a new object of the specified class */ template< class T > FUNCTION_NON_NULL_RETURN_START T* NewObject(UObject* Outer, const UClass* Class, FName Name = NAME_None, EObjectFlags Flags = RF_NoFlags, UObject* Template = nullptr, bool bCopyTransientsFromClassDefaults = false, FObjectInstancingGraph* InInstanceGraph = nullptr, UPackage* ExternalPackage = nullptr) FUNCTION_NON_NULL_RETURN_END { if (Name == NAME_None) { FObjectInitializer::AssertIfInConstructor(Outer, TEXT(\"NewObject with empty name can't be used to create default subobjects (inside of UObject derived class constructor) as it produces inconsistent object names. Use ObjectInitializer.CreateDefaultSubobject<> instead.\")); } #if DO_CHECK // Class was specified explicitly, so needs to be validated CheckIsClassChildOf_Internal(T::StaticClass(), Class); #endif FStaticConstructObjectParameters Params(Class); Params.Outer = Outer; Params.Name = Name; Params.SetFlags = Flags; Params.Template = Template; Params.bCopyTransientsFromClassDefaults = bCopyTransientsFromClassDefaults; Params.InstanceGraph = InInstanceGraph; Params.ExternalPackage = ExternalPackage; return static_cast<T*>(StaticConstructObject_Internal(Params)); }","title":"NewObject"},{"location":"UE4/NewObject%E5%92%8CCreateDefaultSubobject/#createdefaultsubobject","text":"CreateDefaultSubobject \u6700\u7ec8\u4e5f\u662f\u8c03\u7528 StaticConstructObject_Internal \u6765\u521b\u5efa\u5bf9\u8c61\uff0c\u4f46\u5728\u8fd9\u4e4b\u524d\u4f1a\u7ecf\u8fc7 FObjectInitializer::CreateDefaultSubobject \u7684\u5904\u7406 /** * Create an optional component or subobject. Optional subobjects will not get created * if a derived class specified DoNotCreateDefaultSubobject with the subobject's name. * @param TReturnType Class of return type, all overrides must be of this type * @param SubobjectName Name of the new component * @param bTransient True if the component is being assigned to a transient property. This does not make the component itself transient, but does stop it from inheriting parent defaults */ template<class TReturnType> TReturnType* CreateOptionalDefaultSubobject(FName SubobjectName, bool bTransient = false) { UClass* ReturnType = TReturnType::StaticClass(); return static_cast<TReturnType*>(CreateDefaultSubobject(SubobjectName, ReturnType, ReturnType, /*bIsRequired =*/ false, bTransient)); } /** * Create an optional component or subobject. Optional subobjects will not get created * if a derived class specified DoNotCreateDefaultSubobject with the subobject's name. * @param TReturnType Class of return type, all overrides must be of this type * @param TClassToConstructByDefault Class of object to actually construct, must be a subclass of TReturnType * @param SubobjectName Name of the new component * @param bTransient True if the component is being assigned to a transient property. This does not make the component itself transient, but does stop it from inheriting parent defaults */ template<class TReturnType, class TClassToConstructByDefault> TReturnType* CreateOptionalDefaultSubobject(FName SubobjectName, bool bTransient = false) { return static_cast<TReturnType*>(CreateDefaultSubobject(SubobjectName, TReturnType::StaticClass(), TClassToConstructByDefault::StaticClass(), /*bIsRequired =*/ false, bTransient)); } /** Utility function for templates below */ UObject* CreateDefaultSubobject(FName SubobjectFName, UClass* ReturnType, UClass* ClassToCreateByDefault, bool bIsRequired, bool bIsTransient); UObject* UObject::CreateDefaultSubobject(FName SubobjectFName, UClass* ReturnType, UClass* ClassToCreateByDefault, bool bIsRequired, bool bIsTransient) { FObjectInitializer* CurrentInitializer = FUObjectThreadContext::Get().TopInitializer(); UE_CLOG(!CurrentInitializer, LogObj, Fatal, TEXT(\"No object initializer found during construction.\")); UE_CLOG(CurrentInitializer->Obj != this, LogObj, Fatal, TEXT(\"Using incorrect object initializer.\")); return CurrentInitializer->CreateDefaultSubobject(this, SubobjectFName, ReturnType, ClassToCreateByDefault, bIsRequired, bIsTransient); }","title":"CreateDefaultSubobject"},{"location":"UE4/NewObject%E5%92%8CCreateDefaultSubobject/#fobjectinitializercreatedefaultsubobject","text":"\u4e3b\u8981\u76ee\u7684\u5c31\u662f \u4f7f\u7528 ComponentOverrides \u4e2d\u7684\u6307\u5b9a UClass \u66ff\u4ee3 ClassToCreateByDefault \u6765\u521b\u5efa\u5bf9\u8c61 \u4f1a\u68c0\u67e5\u662f\u5426\u5728\u6784\u9020\u51fd\u6570\u4e2d\u8c03\u7528 \u901a\u8fc7 ObjectInitializer->SetDefaultSubobjectClass \u6765\u6307\u5b9a UClass \u66ff\u4ee3 ClassToCreateByDefault \u901a\u8fc7 ObjectInitializer->DoNotCreateDefaultSubobject \u6307\u5b9a\u4e3a nullptr \u4e14 !bIsRequired \uff0c\u5219\u4e0d\u521b\u5efa UObject* FObjectInitializer::CreateDefaultSubobject(UObject* Outer, FName SubobjectFName, UClass* ReturnType, UClass* ClassToCreateByDefault, bool bIsRequired, bool bIsTransient) const { UE_CLOG(!FUObjectThreadContext::Get().IsInConstructor, LogClass, Fatal, TEXT(\"Subobjects cannot be created outside of UObject constructors. UObject constructing subobjects cannot be created using new or placement new operator.\")); if (SubobjectFName == NAME_None) { UE_LOG(LogClass, Fatal, TEXT(\"Illegal default subobject name: %s\"), *SubobjectFName.ToString()); } UObject* Result = NULL; UClass* OverrideClass = ComponentOverrides.Get(SubobjectFName, ReturnType, ClassToCreateByDefault, *this); if (!OverrideClass && bIsRequired) { OverrideClass = ClassToCreateByDefault; UE_LOG(LogClass, Warning, TEXT(\"Ignored DoNotCreateDefaultSubobject for %s as it's marked as required. Creating %s.\"), *SubobjectFName.ToString(), *OverrideClass->GetName()); } if (OverrideClass) { check(OverrideClass->IsChildOf(ReturnType)); if (OverrideClass->HasAnyClassFlags(CLASS_Abstract)) { // Attempts to create an abstract class will return null. If it is not optional or the owning class is not also abstract report a warning. if (!bIsRequired && !Outer->GetClass()->HasAnyClassFlags(CLASS_Abstract)) { UE_LOG(LogClass, Warning, TEXT(\"Required default subobject %s not created as requested class %s is abstract. Returning null.\"), *SubobjectFName.ToString(), *OverrideClass->GetName()); } } else { UObject* Template = OverrideClass->GetDefaultObject(); // force the CDO to be created if it hasn't already EObjectFlags SubobjectFlags = Outer->GetMaskedFlags(RF_PropagateToSubObjects) | RF_DefaultSubObject; bool bOwnerArchetypeIsNotNative; UClass* OuterArchetypeClass; // It is not safe to mark this component as properly transient, that results in it being nulled incorrectly OuterArchetypeClass = Outer->GetArchetype()->GetClass(); bOwnerArchetypeIsNotNative = !OuterArchetypeClass->HasAnyClassFlags(CLASS_Native | CLASS_Intrinsic); const bool bOwnerTemplateIsNotCDO = ObjectArchetype != nullptr && ObjectArchetype != Outer->GetClass()->GetDefaultObject(false) && !Outer->HasAnyFlags(RF_ClassDefaultObject); #if !UE_BUILD_SHIPPING // Guard against constructing the same subobject multiple times. // We only need to check the name as ConstructObject would fail anyway if an object of the same name but different class already existed. if (ConstructedSubobjects.Find(SubobjectFName) != INDEX_NONE) { UE_LOG(LogClass, Fatal, TEXT(\"Default subobject %s %s already exists for %s.\"), *OverrideClass->GetName(), *SubobjectFName.ToString(), *Outer->GetFullName()); } else { ConstructedSubobjects.Add(SubobjectFName); } #endif FStaticConstructObjectParameters Params(OverrideClass); Params.Outer = Outer; Params.Name = SubobjectFName; Params.SetFlags = SubobjectFlags; Result = StaticConstructObject_Internal(Params); if (!bIsTransient && (bOwnerArchetypeIsNotNative || bOwnerTemplateIsNotCDO)) { UObject* MaybeTemplate = nullptr; if (bOwnerTemplateIsNotCDO) { // Try to get the subobject template from the specified object template MaybeTemplate = ObjectArchetype->GetDefaultSubobjectByName(SubobjectFName); } if (!MaybeTemplate) { // The archetype of the outer is not native, so we need to copy properties to the subobjects after the C++ constructor chain for the outer has run (because those sets properties on the subobjects) MaybeTemplate = OuterArchetypeClass->GetDefaultSubobjectByName(SubobjectFName); } if (MaybeTemplate && MaybeTemplate->IsA(ReturnType) && Template != MaybeTemplate) { ComponentInits.Add(Result, MaybeTemplate); } } if (Outer->HasAnyFlags(RF_ClassDefaultObject) && Outer->GetClass()->GetSuperClass()) { #if WITH_EDITOR // Default subobjects on the CDO should be transactional, so that we can undo/redo changes made to those objects. // One current example of this is editing natively defined components in the Blueprint Editor. Result->SetFlags(RF_Transactional); #endif Outer->GetClass()->AddDefaultSubobject(Result, ReturnType); } // Clear PendingKill flag in case we recycled a subobject of a dead object. // @todo: we should not be recycling subobjects unless we're currently loading from a package Result->ClearInternalFlags(EInternalObjectFlags::PendingKill); } } return Result; }","title":"FObjectInitializer::CreateDefaultSubobject"},{"location":"UE4/NewObject%E5%92%8CCreateDefaultSubobject/#uobject-staticconstructobject_internal","text":"\u5728\u51fd\u6570 StaticConstructObject_Internal \u4e2d Result = StaticAllocateObject(InClass, InOuter, InName, InFlags, Params.InternalSetFlags, bCanRecycleSubobjects, &bRecycledSubobject, Params.ExternalPackage) ; \u7533\u8bf7\u5185\u5b58\u7a7a\u95f4 (*InClass->ClassConstructor)( FObjectInitializer(Result, InTemplate, Params.bCopyTransientsFromClassDefaults, true, Params.InstanceGraph) ) ; \u8c03\u7528\u6784\u9020\u51fd\u6570 UObject* StaticConstructObject_Internal(const FStaticConstructObjectParameters& Params) { .... // \u7533\u8bf7\u5185\u5b58 Result = StaticAllocateObject(InClass, InOuter, InName, InFlags, Params.InternalSetFlags, bCanRecycleSubobjects, &bRecycledSubobject, Params.ExternalPackage); check(Result != NULL); // Don't call the constructor on recycled subobjects, they haven't been destroyed. if (!bRecycledSubobject) { STAT(FScopeCycleCounterUObject ConstructorScope(InClass->GetFName().IsNone() ? nullptr : InClass, GET_STATID(STAT_ConstructObject))); //\u8c03\u7528\u6784\u9020\u51fd\u6570 (*InClass->ClassConstructor)( FObjectInitializer(Result, InTemplate, Params.bCopyTransientsFromClassDefaults, true, Params.InstanceGraph) ); } if( GIsEditor && GUndo && (InFlags & RF_Transactional) && !(InFlags & RF_NeedLoad) && !InClass->IsChildOf(UField::StaticClass()) ) { // Set RF_PendingKill and update the undo buffer so an undo operation will set RF_PendingKill on the newly constructed object. Result->MarkPendingKill(); SaveToTransactionBuffer(Result, false); Result->ClearPendingKill(); } return Result; }","title":"UObject* StaticConstructObject_Internal"},{"location":"UE4/Pitch_Yaw_Roll/","text":"Pitch\uff0cYaw\uff0cRoll # Pitch\uff0cYaw\uff0cRoll\u662f\u6765\u81ea\u822a\u7a7a\u754c\u7684\u53eb\u6cd5 Pitch : \u4fef\u4ef0\u89d2 \u5bf9\u5e94 UE4 \u4e2d\uff0c\u7ed5 Y \u8f74\u65cb\u8f6c Yaw : \u504f\u822a\u89d2 \u5bf9\u5e94 UE4 \u4e2d\uff0c\u7ed5 Z \u8f74\u65cb\u8f6c Roll : \u7ffb\u6eda\u89d2 \u5bf9\u5e94 UE4 \u4e2d\uff0c\u7ed5 X \u8f74\u65cb\u8f6c struct FRotator { public: /** Rotation around the right axis (around Y axis), Looking up and down (0=Straight Ahead, +Up, -Down) */ float Pitch; /** Rotation around the up axis (around Z axis), Running in circles 0=East, +North, -South. */ float Yaw; /** Rotation around the forward axis (around X axis), Tilting your head, 0=Straight, +Clockwise, -CCW. */ float Roll; /** * Constructor. * * @param InPitch Pitch in degrees. * @param InYaw Yaw in degrees. * @param InRoll Roll in degrees. */ FORCEINLINE FRotator( float InPitch, float InYaw, float InRoll ); }","title":"Pitch\uff0cYaw\uff0cRoll"},{"location":"UE4/Pitch_Yaw_Roll/#pitchyawroll","text":"Pitch\uff0cYaw\uff0cRoll\u662f\u6765\u81ea\u822a\u7a7a\u754c\u7684\u53eb\u6cd5 Pitch : \u4fef\u4ef0\u89d2 \u5bf9\u5e94 UE4 \u4e2d\uff0c\u7ed5 Y \u8f74\u65cb\u8f6c Yaw : \u504f\u822a\u89d2 \u5bf9\u5e94 UE4 \u4e2d\uff0c\u7ed5 Z \u8f74\u65cb\u8f6c Roll : \u7ffb\u6eda\u89d2 \u5bf9\u5e94 UE4 \u4e2d\uff0c\u7ed5 X \u8f74\u65cb\u8f6c struct FRotator { public: /** Rotation around the right axis (around Y axis), Looking up and down (0=Straight Ahead, +Up, -Down) */ float Pitch; /** Rotation around the up axis (around Z axis), Running in circles 0=East, +North, -South. */ float Yaw; /** Rotation around the forward axis (around X axis), Tilting your head, 0=Straight, +Clockwise, -CCW. */ float Roll; /** * Constructor. * * @param InPitch Pitch in degrees. * @param InYaw Yaw in degrees. * @param InRoll Roll in degrees. */ FORCEINLINE FRotator( float InPitch, float InYaw, float InRoll ); }","title":"Pitch\uff0cYaw\uff0cRoll"},{"location":"UE4/UE4%E7%9A%84%E5%9E%83%E5%9C%BE%E5%9B%9E%E6%94%B6/","text":"UE4\u7684\u5783\u573e\u56de\u6536\u7cfb\u7edf # \u8ffd\u8e2a\u5f0fGC \u6807\u8bb0\u9636\u6bb5\uff1a\u4ece\u6839\u7ed3\u70b9\u96c6\u5408\u5f00\u59cb\u9012\u5f52\u7684\u6807\u8bb0\u6240\u6709\u53ef\u8fbe\u5bf9\u8c61\u3002 \u6e05\u626b\u9636\u6bb5\uff1a\u904d\u5386\u6240\u6709\u5bf9\u8c61\uff0c\u5c06\u6ca1\u6709\u6807\u8bb0\u4e3a\u53ef\u8fbe\u7684\u5bf9\u8c61\u56de\u6536\uff0c\u5e76\u6e05\u7406\u6807\u8bb0\u4f4d\u3002 \u6ce8\u610f UObject\u7c7b\u578b\u7684\u53d8\u91cf\uff0c\u5373\u4f7f\u662fstatic\uff0c\u9ed8\u8ba4\u4e5f\u4f1a\u88abGC\u6389\u3002 \u9632\u6b62UObject\u5bf9\u8c61\u88abGC\u6389\uff0c\u5c31\u8981\u4fdd\u6301\u5bf9\u5176\u5f15\u7528 1\u3001UPROPERTY # UPROPERTY() class UPaperTileMap* AssetToRename; UPROPERTY() TMap<UCompositingElementInput*, ECompPassConstructionType> UserConstructedInputs; 2\u3001AddToRoot # m_sInstance = NewObject<T>(); m_sInstance->AddToRoot(); \u6ce8\u610f \u91ca\u653e\u7684\u65f6\u5019\u9700\u8981\u8c03\u7528 m_sInstance->RemoveFromRoot(); 3\u3001TWeakObjectPtr # \u6ce8\u610f \u5f31\u5f15\u7528\uff0c\u4e0d\u5f71\u54cd\u53d8\u91cf\u7684 GC 4\u3001TSharedPtr # \u5171\u4eab\u6307\u9488 \u5171\u4eab\u6307\u9488\uff0c\u7c7b\u4f3cC++\u6807\u51c6\u5e93\u7684\u5171\u4eab\u667a\u80fd\u6307\u9488\uff0c\u7528\u4e8e\u81ea\u5b9a\u4e49\u7684\u7ed3\u6784\u4f53\u3002 TSharedPtr Test = MakeShareable(new FTest()); \u4e0d\u80fd\u7528\u4e8eUObject\u5bf9\u8c61(TWeakPtr\u5012\u662f\u53ef\u4ee5\u7528\u4e8eUObject), \u56e0\u4e3aUObject\u6709\u4e00\u5957\u4e13\u7528\u7684GC\u89c4\u5219\u3002 class MYPROJECT2_API FTest { public: FTest(); ~FTest(); }; #include \"FTest.h\" FTest::FTest() { UE_LOG(LogTemp, Warning, TEXT(\"1111FTest Constrction\")); } FTest::~FTest() { UE_LOG(LogTemp, Warning, TEXT(\"2222FTest Deconstrction\")); } UCLASS() class MYPROJECT2_API ATestActor : public AActor { GENERATED_BODY() public: // Sets default values for this actor's properties ATestActor(); TSharedPtr<FTest> Test; protected: // Called when the game starts or when spawned virtual void BeginPlay() override; } // Called when the game starts or when spawned void ATestActor::BeginPlay() { Super::BeginPlay(); Test = MakeShareable(new FTest()); } 5\u3001FGCObject # \u5982\u4f55\u6df7\u7528 \u5df2\u77e5 UObject \u7c7b\u901a\u8fc7 NewObject \u521b\u5efa\u5e76\u81ea\u52a8 GC \u975e UObject \u7c7b\u901a\u8fc7 MakeShareable \u6765\u521b\u5efa TSharedPtr \u6765\u81ea\u52a8 GC \u800c \u975e UObject \u7c7b\u4e2d\u51fa\u73b0 UObject \u53d8\u91cf\u600e\u4e48\u529e\u5462\uff1f FGCObject UE4 \u63d0\u4f9b\u4e86 FGCObject\uff0c\u975e UObject \u7c7b\u53ef\u4ee5\u7ee7\u627f FGCObject\uff0c\u7136\u540e\u901a\u8fc7 AddReferencedObjects \u51fd\u6570\u5bf9 UObject \u5bf9\u8c61\u6dfb\u52a0\u5f15\u7528\u3002 #include \"GCObject.h\" class UCameraAnim; /** * */ class MYPROJECT2_API FTest :public FGCObject { public: FTest(); ~FTest(); UCameraAnim* CameraAnim; protected: virtual void AddReferencedObjects(FReferenceCollector& Collector) override { Collector.AddReferencedObject(CameraAnim); } }; 6\u3001TSharedRef # \u5171\u4eab\u5f15\u7528 \u672c\u8d28\u4e0a\u5171\u4eab\u5f15\u7528(TSharedRef)\u548c\u5171\u4eab\u6307\u9488(TSharedPtr)\u662f\u5dee\u4e0d\u591a\u7684\uff0c\u4e00\u6837\u662f\u7528\u4e8e\u975eUObject\u4f53\u7cfb\u7684\u5bf9\u8c61\uff0c\u4e0d\u8fc7 TSharedRef \u548c TSharedPtr \u7684\u4e0d\u540c\u5728\u4e8e\u5171\u4eab\u5f15\u7528\u65e0\u6cd5\u5f15\u7528\u7a7a\u5bf9\u8c61\uff0c\u7f16\u8bd1\u76f4\u63a5\u62a5\u9519\u3002TSharedRef\u8fde \u201cIsValid\u201d \u5224\u65ad\u662f\u5426\u975e\u7a7a\u90fd\u6ca1\u6709\uff0c\u5f3a\u903c\u4f60\u4f7f\u7528\u5fc5\u5b9a\u662f\u6709\u6548\u7684\u5f15\u7528\u3002\u6240\u4ee5\u5728 UE4 \u7684 SWidget \u4e2d\u5927\u91cf\u4f7f\u7528 TSharedRef \u3002 //\u6b63\u786e\u7684\u58f0\u660e\u5b9a\u4e49 TSharedRef<FMyCustom> MyCustom = MakeShared<FMyCustom>(); //\u9519\u8bef\u7684\u58f0\u660e\u5b9a\u4e49 //TSharedRef\u6ca1\u6709\u7a7a\u5f15\u7528\uff0c\u5e94\u8be5\u6301\u6709\u7684\u5bf9\u8c61\u5fc5\u987b\u662f\u6709\u6548\u7684 //TSharedRef<FMyCustom> MyCustom; //TSharedRef<FMyCustom> MyCustom = nullptr; //TSharedPtr\u8f6c\u4e3aTSharedRef TSharedPtr<FMyCustom> MySharedPtr = MakeShareable(new FMyCustom); TSharedRef<FMyCustom> MySharedRef = MySharedPtr.ToSharedRef(); // TSharedRef\u53ef\u4ee5\u8f6c\u5316\u4e3aTSharedPtr\uff0c \u76f4\u63a5\u7b49\u4e8e\u5c31\u53ef\u4ee5\u4e86 TSharedRef<FMyCustom> RefCustom = MakeShared<FMyCustom>(); TSharedPtr<FMyCustom> PtrCustom = RefCustom; TSharedFromThis # TSharedFromThis \u4e00\u4e2a\u666e\u901a\u7684\u7ed3\u6784\u4f53\u7ee7\u627f TSharedFromThis\uff0c\u5c31\u53ef\u4ee5\u62e5\u6709 AsShared \u51fd\u6570\u8ba9\u666e\u901a\u7684\u7ed3\u6784\u4f53\u5bf9\u8c61\u8f6c\u4e3a TSharedRef, \u50cf SWidget \u8fd9\u4e2a\u7c7b\u672c\u8eab\u5c31\u4f7f\u7528\u4e86 TSharedFromThis\u3002 FMyCustom MyCustom; TSharedRef<FMyCustom> FMyCustomRef = MyCustom.AsShared(); 7\u3001TWeakPtr # TWeakPtr \u4e0a\u9762\u8bf4\u5230\u4e86 TWeakObjectPtr\uff0c\u4e13\u95e8\u7528\u4e8eUObject, \u76f8\u5e94\u7684\u666e\u901a\u7ed3\u6784\u4f53\u4e5f\u6709\u5f31\u6307\u9488 TWeakPtr, \u80fd\u591f\u8bbf\u95ee\u4e00\u4e2a\u975eUObject\u5bf9\u8c61\uff0c\u4f46\u53c8\u4e0d\u5f71\u54cd GC\u3002 \u4e00\u822c\u6765\u8bf4\u901a\u8fc7 TWeakPtr \u6765\u8bbf\u95ee\u5176\u6301\u6709\u7684\u5bf9\u8c61\uff0c\u5148\u662f\u7528 Pin() \u8f6c\u6362\u4e3a TSharedPtr \u6307\u9488\uff0c\u5224\u65ad\u5bf9\u8c61\u662f\u5426\u6709\u6548\u540e\uff0c\u518d\u8bbf\u95ee struct FMyCustom { int a = 1; FMyCustom() { UE_LOG(LogTemp, Error, TEXT(\"destruct a = %d\"), a); } ~FMyCustom() { UE_LOG(LogTemp, Error, TEXT(\"undestruct a = %d\"), a); } }; UCLASS() class MYPROJECT5_API AMyActor : public AActor { public: TWeakPtr<FMyCustom> WeakCustom; virtual void BeginPlay() override; virtual void Tick(float DeltaTime) override; } void AMyActor::BeginPlay() { Super::BeginPlay(); TSharedPtr<FMyCustom> ShareCustom = MakeShareable(new FMyCustom); WeakCustom = ShareCustom; } // Called every frame void AMyActor::Tick(float DeltaTime) { Super::Tick(DeltaTime); TSharedPtr<FMyCustom> ShareCustom = WeakCustom.Pin(); if (ShareCustom.IsValid()) { UE_LOG(LogTemp, Error, TEXT(\"a = %d\"), ShareCustom->a); } } TSharedPtr\uff0cTSharedRef, TWeakPtr\u5728\u5bb9\u5668\u4f7f\u7528\u4e8b\u9879 \u5f31\u6307\u9488(TWeakPtr)\u5bf9\u8c61\u4e0d\u80fd\u4f5c\u4e3a Set\u6216\u8005Map \u7684 Key\uff0c\u56e0\u4e3a\u4e00\u4e2a\u5bf9\u8c61\u88ab GC \u6389\u65e0\u6cd5\u901a\u77e5\u4e00\u4e2a\u5bb9\u5668\u7684 Key\uff0c\u5f53\u7136 TWeakPtr \u53ef\u4ee5\u4f5c\u4e3a\u5bb9\u5668\u7684 Value\u3002 \u800c TSharedPtr\u548cTSharedRef \u65e2\u53ef\u4ee5\u5f53\u4f5c\u5bb9\u5668\u7684 Key\uff0c\u4e5f\u53ef\u4ee5\u4f5c\u4e3a\u5bb9\u5668\u7684 Value. Demo # /** * UMyGCObject */ UCLASS() class UMyGCObject : public UObject { GENERATED_BODY() }; /** * UTestGCObject */ UCLASS() class UTestGCObject : public UObject { GENERATED_BODY() public: UPROPERTY() UMyGCObject* Obj; }; /** * FTestGCStruct */ struct FTestGCStruct { public: UPROPERTY() UMyGCObject* Obj; }; /** * FTestGCUStruct */ USTRUCT() struct FTestGCUStruct { GENERATED_BODY() public: UPROPERTY() UMyGCObject* Obj; }; /** * ATestGCActor */ UCLASS() class ATestGCActor : public AActor { GENERATED_BODY() public: //UTestGCObject UTestGCObject* TestGCObj; //\u8ffd\u8e2a\u4e0d\u53ef\u8fbe\uff0c\u5f53GC\u65f6\u4f1a\u88ab\u56de\u6536 UPROPERTY() UTestGCObject* TestGCObj_UPROPERTY; //\u4f7f\u7528 UPROPERTY \u4fee\u9970\uff0c\u8ffd\u8e2a\u53ef\u8fbe\uff0c\u5f53GC\u65f6\u4e0d\u4f1a\u88ab\u56de\u6536 //FTestGCStruct //FTestGCStruct \u6ca1\u6709\u7528 USTRUCT() \u4fee\u9970\uff0c\u6240\u4ee5\u4efb\u4f55\u5f62\u5f0f\u7684\u53d8\u91cf\u90fd\u4e0d\u80fd\u4f7f\u7528 UPROPERTY()\u4fee\u9970 //\u6240\u4ee5\u4ee5\u4e0b\u51e0\u79cd\u53d8\u91cf\u5747 \u8ffd\u8e2a\u4e0d\u53ef\u8fbe\uff0c\u5f53GC\u65f6\u5176\u53d8\u91cf UMyGCObject* Obj \u4f1a\u88ab\u56de\u6536 FTestGCStruct TestGCStruct; FTestGCStruct* TestGCStructP; TSharedPtr<FTestGCStruct> TestGCStructPtr; TArray<FTestGCStruct> TestGCStructArray; TArray<TSharedPtr<FTestGCStruct>> TestGCStructPtrArray; //FTestGCStruct \u4f7f\u7528\u4e86 USTRUCT() \u4fee\u9970 //\u53ea\u6709\u4ee5\u4e0b 2 \u79cd\u5f62\u5f0f\u7684\u53d8\u91cf\uff0c\u624d\u53ef\u4ee5\u4f7f\u7528 UPROPERTY()\u4fee\u9970 //\u5f53\u4f7f\u7528 UPROPERTY() \u4fee\u9970\u65f6\uff0c\u8ffd\u8e2a\u53ef\u8fbe\uff0c\u5f53GC\u65f6\u5176\u53d8\u91cf UMyGCObject* Obj \u4e0d\u4f1a\u88ab\u56de\u6536 UPROPERTY() FTestGCUStruct TestGCUStruct_UPROPERTY; UPROPERTY() TArray<FTestGCUStruct> TestGCUStructArray_UPROPERTY; //\u4ee5\u4e0b\u51e0\u79cd\u53d8\u91cf \u8ffd\u8e2a\u4e0d\u53ef\u8fbe\uff0c\u5f53GC\u65f6\u5176\u53d8\u91cf UMyGCObject* Obj \u4f1a\u88ab\u56de\u6536 FTestGCUStruct TestGCUStruct; FTestGCUStruct* TestGCUStructP; TSharedPtr<FTestGCUStruct> TestGCUStructPtr; TArray<FTestGCUStruct> TestGCUStructArray; TArray<TSharedPtr<FTestGCUStruct>> TestGCUStructPtrArray; };","title":"UE4\u7684\u5783\u573e\u56de\u6536"},{"location":"UE4/UE4%E7%9A%84%E5%9E%83%E5%9C%BE%E5%9B%9E%E6%94%B6/#ue4","text":"\u8ffd\u8e2a\u5f0fGC \u6807\u8bb0\u9636\u6bb5\uff1a\u4ece\u6839\u7ed3\u70b9\u96c6\u5408\u5f00\u59cb\u9012\u5f52\u7684\u6807\u8bb0\u6240\u6709\u53ef\u8fbe\u5bf9\u8c61\u3002 \u6e05\u626b\u9636\u6bb5\uff1a\u904d\u5386\u6240\u6709\u5bf9\u8c61\uff0c\u5c06\u6ca1\u6709\u6807\u8bb0\u4e3a\u53ef\u8fbe\u7684\u5bf9\u8c61\u56de\u6536\uff0c\u5e76\u6e05\u7406\u6807\u8bb0\u4f4d\u3002 \u6ce8\u610f UObject\u7c7b\u578b\u7684\u53d8\u91cf\uff0c\u5373\u4f7f\u662fstatic\uff0c\u9ed8\u8ba4\u4e5f\u4f1a\u88abGC\u6389\u3002 \u9632\u6b62UObject\u5bf9\u8c61\u88abGC\u6389\uff0c\u5c31\u8981\u4fdd\u6301\u5bf9\u5176\u5f15\u7528","title":"UE4\u7684\u5783\u573e\u56de\u6536\u7cfb\u7edf"},{"location":"UE4/UE4%E7%9A%84%E5%9E%83%E5%9C%BE%E5%9B%9E%E6%94%B6/#1uproperty","text":"UPROPERTY() class UPaperTileMap* AssetToRename; UPROPERTY() TMap<UCompositingElementInput*, ECompPassConstructionType> UserConstructedInputs;","title":"1\u3001UPROPERTY"},{"location":"UE4/UE4%E7%9A%84%E5%9E%83%E5%9C%BE%E5%9B%9E%E6%94%B6/#2addtoroot","text":"m_sInstance = NewObject<T>(); m_sInstance->AddToRoot(); \u6ce8\u610f \u91ca\u653e\u7684\u65f6\u5019\u9700\u8981\u8c03\u7528 m_sInstance->RemoveFromRoot();","title":"2\u3001AddToRoot"},{"location":"UE4/UE4%E7%9A%84%E5%9E%83%E5%9C%BE%E5%9B%9E%E6%94%B6/#3tweakobjectptr","text":"\u6ce8\u610f \u5f31\u5f15\u7528\uff0c\u4e0d\u5f71\u54cd\u53d8\u91cf\u7684 GC","title":"3\u3001TWeakObjectPtr"},{"location":"UE4/UE4%E7%9A%84%E5%9E%83%E5%9C%BE%E5%9B%9E%E6%94%B6/#4tsharedptr","text":"\u5171\u4eab\u6307\u9488 \u5171\u4eab\u6307\u9488\uff0c\u7c7b\u4f3cC++\u6807\u51c6\u5e93\u7684\u5171\u4eab\u667a\u80fd\u6307\u9488\uff0c\u7528\u4e8e\u81ea\u5b9a\u4e49\u7684\u7ed3\u6784\u4f53\u3002 TSharedPtr Test = MakeShareable(new FTest()); \u4e0d\u80fd\u7528\u4e8eUObject\u5bf9\u8c61(TWeakPtr\u5012\u662f\u53ef\u4ee5\u7528\u4e8eUObject), \u56e0\u4e3aUObject\u6709\u4e00\u5957\u4e13\u7528\u7684GC\u89c4\u5219\u3002 class MYPROJECT2_API FTest { public: FTest(); ~FTest(); }; #include \"FTest.h\" FTest::FTest() { UE_LOG(LogTemp, Warning, TEXT(\"1111FTest Constrction\")); } FTest::~FTest() { UE_LOG(LogTemp, Warning, TEXT(\"2222FTest Deconstrction\")); } UCLASS() class MYPROJECT2_API ATestActor : public AActor { GENERATED_BODY() public: // Sets default values for this actor's properties ATestActor(); TSharedPtr<FTest> Test; protected: // Called when the game starts or when spawned virtual void BeginPlay() override; } // Called when the game starts or when spawned void ATestActor::BeginPlay() { Super::BeginPlay(); Test = MakeShareable(new FTest()); }","title":"4\u3001TSharedPtr"},{"location":"UE4/UE4%E7%9A%84%E5%9E%83%E5%9C%BE%E5%9B%9E%E6%94%B6/#5fgcobject","text":"\u5982\u4f55\u6df7\u7528 \u5df2\u77e5 UObject \u7c7b\u901a\u8fc7 NewObject \u521b\u5efa\u5e76\u81ea\u52a8 GC \u975e UObject \u7c7b\u901a\u8fc7 MakeShareable \u6765\u521b\u5efa TSharedPtr \u6765\u81ea\u52a8 GC \u800c \u975e UObject \u7c7b\u4e2d\u51fa\u73b0 UObject \u53d8\u91cf\u600e\u4e48\u529e\u5462\uff1f FGCObject UE4 \u63d0\u4f9b\u4e86 FGCObject\uff0c\u975e UObject \u7c7b\u53ef\u4ee5\u7ee7\u627f FGCObject\uff0c\u7136\u540e\u901a\u8fc7 AddReferencedObjects \u51fd\u6570\u5bf9 UObject \u5bf9\u8c61\u6dfb\u52a0\u5f15\u7528\u3002 #include \"GCObject.h\" class UCameraAnim; /** * */ class MYPROJECT2_API FTest :public FGCObject { public: FTest(); ~FTest(); UCameraAnim* CameraAnim; protected: virtual void AddReferencedObjects(FReferenceCollector& Collector) override { Collector.AddReferencedObject(CameraAnim); } };","title":"5\u3001FGCObject"},{"location":"UE4/UE4%E7%9A%84%E5%9E%83%E5%9C%BE%E5%9B%9E%E6%94%B6/#6tsharedref","text":"\u5171\u4eab\u5f15\u7528 \u672c\u8d28\u4e0a\u5171\u4eab\u5f15\u7528(TSharedRef)\u548c\u5171\u4eab\u6307\u9488(TSharedPtr)\u662f\u5dee\u4e0d\u591a\u7684\uff0c\u4e00\u6837\u662f\u7528\u4e8e\u975eUObject\u4f53\u7cfb\u7684\u5bf9\u8c61\uff0c\u4e0d\u8fc7 TSharedRef \u548c TSharedPtr \u7684\u4e0d\u540c\u5728\u4e8e\u5171\u4eab\u5f15\u7528\u65e0\u6cd5\u5f15\u7528\u7a7a\u5bf9\u8c61\uff0c\u7f16\u8bd1\u76f4\u63a5\u62a5\u9519\u3002TSharedRef\u8fde \u201cIsValid\u201d \u5224\u65ad\u662f\u5426\u975e\u7a7a\u90fd\u6ca1\u6709\uff0c\u5f3a\u903c\u4f60\u4f7f\u7528\u5fc5\u5b9a\u662f\u6709\u6548\u7684\u5f15\u7528\u3002\u6240\u4ee5\u5728 UE4 \u7684 SWidget \u4e2d\u5927\u91cf\u4f7f\u7528 TSharedRef \u3002 //\u6b63\u786e\u7684\u58f0\u660e\u5b9a\u4e49 TSharedRef<FMyCustom> MyCustom = MakeShared<FMyCustom>(); //\u9519\u8bef\u7684\u58f0\u660e\u5b9a\u4e49 //TSharedRef\u6ca1\u6709\u7a7a\u5f15\u7528\uff0c\u5e94\u8be5\u6301\u6709\u7684\u5bf9\u8c61\u5fc5\u987b\u662f\u6709\u6548\u7684 //TSharedRef<FMyCustom> MyCustom; //TSharedRef<FMyCustom> MyCustom = nullptr; //TSharedPtr\u8f6c\u4e3aTSharedRef TSharedPtr<FMyCustom> MySharedPtr = MakeShareable(new FMyCustom); TSharedRef<FMyCustom> MySharedRef = MySharedPtr.ToSharedRef(); // TSharedRef\u53ef\u4ee5\u8f6c\u5316\u4e3aTSharedPtr\uff0c \u76f4\u63a5\u7b49\u4e8e\u5c31\u53ef\u4ee5\u4e86 TSharedRef<FMyCustom> RefCustom = MakeShared<FMyCustom>(); TSharedPtr<FMyCustom> PtrCustom = RefCustom;","title":"6\u3001TSharedRef"},{"location":"UE4/UE4%E7%9A%84%E5%9E%83%E5%9C%BE%E5%9B%9E%E6%94%B6/#tsharedfromthis","text":"TSharedFromThis \u4e00\u4e2a\u666e\u901a\u7684\u7ed3\u6784\u4f53\u7ee7\u627f TSharedFromThis\uff0c\u5c31\u53ef\u4ee5\u62e5\u6709 AsShared \u51fd\u6570\u8ba9\u666e\u901a\u7684\u7ed3\u6784\u4f53\u5bf9\u8c61\u8f6c\u4e3a TSharedRef, \u50cf SWidget \u8fd9\u4e2a\u7c7b\u672c\u8eab\u5c31\u4f7f\u7528\u4e86 TSharedFromThis\u3002 FMyCustom MyCustom; TSharedRef<FMyCustom> FMyCustomRef = MyCustom.AsShared();","title":"TSharedFromThis"},{"location":"UE4/UE4%E7%9A%84%E5%9E%83%E5%9C%BE%E5%9B%9E%E6%94%B6/#7tweakptr","text":"TWeakPtr \u4e0a\u9762\u8bf4\u5230\u4e86 TWeakObjectPtr\uff0c\u4e13\u95e8\u7528\u4e8eUObject, \u76f8\u5e94\u7684\u666e\u901a\u7ed3\u6784\u4f53\u4e5f\u6709\u5f31\u6307\u9488 TWeakPtr, \u80fd\u591f\u8bbf\u95ee\u4e00\u4e2a\u975eUObject\u5bf9\u8c61\uff0c\u4f46\u53c8\u4e0d\u5f71\u54cd GC\u3002 \u4e00\u822c\u6765\u8bf4\u901a\u8fc7 TWeakPtr \u6765\u8bbf\u95ee\u5176\u6301\u6709\u7684\u5bf9\u8c61\uff0c\u5148\u662f\u7528 Pin() \u8f6c\u6362\u4e3a TSharedPtr \u6307\u9488\uff0c\u5224\u65ad\u5bf9\u8c61\u662f\u5426\u6709\u6548\u540e\uff0c\u518d\u8bbf\u95ee struct FMyCustom { int a = 1; FMyCustom() { UE_LOG(LogTemp, Error, TEXT(\"destruct a = %d\"), a); } ~FMyCustom() { UE_LOG(LogTemp, Error, TEXT(\"undestruct a = %d\"), a); } }; UCLASS() class MYPROJECT5_API AMyActor : public AActor { public: TWeakPtr<FMyCustom> WeakCustom; virtual void BeginPlay() override; virtual void Tick(float DeltaTime) override; } void AMyActor::BeginPlay() { Super::BeginPlay(); TSharedPtr<FMyCustom> ShareCustom = MakeShareable(new FMyCustom); WeakCustom = ShareCustom; } // Called every frame void AMyActor::Tick(float DeltaTime) { Super::Tick(DeltaTime); TSharedPtr<FMyCustom> ShareCustom = WeakCustom.Pin(); if (ShareCustom.IsValid()) { UE_LOG(LogTemp, Error, TEXT(\"a = %d\"), ShareCustom->a); } } TSharedPtr\uff0cTSharedRef, TWeakPtr\u5728\u5bb9\u5668\u4f7f\u7528\u4e8b\u9879 \u5f31\u6307\u9488(TWeakPtr)\u5bf9\u8c61\u4e0d\u80fd\u4f5c\u4e3a Set\u6216\u8005Map \u7684 Key\uff0c\u56e0\u4e3a\u4e00\u4e2a\u5bf9\u8c61\u88ab GC \u6389\u65e0\u6cd5\u901a\u77e5\u4e00\u4e2a\u5bb9\u5668\u7684 Key\uff0c\u5f53\u7136 TWeakPtr \u53ef\u4ee5\u4f5c\u4e3a\u5bb9\u5668\u7684 Value\u3002 \u800c TSharedPtr\u548cTSharedRef \u65e2\u53ef\u4ee5\u5f53\u4f5c\u5bb9\u5668\u7684 Key\uff0c\u4e5f\u53ef\u4ee5\u4f5c\u4e3a\u5bb9\u5668\u7684 Value.","title":"7\u3001TWeakPtr"},{"location":"UE4/UE4%E7%9A%84%E5%9E%83%E5%9C%BE%E5%9B%9E%E6%94%B6/#demo","text":"/** * UMyGCObject */ UCLASS() class UMyGCObject : public UObject { GENERATED_BODY() }; /** * UTestGCObject */ UCLASS() class UTestGCObject : public UObject { GENERATED_BODY() public: UPROPERTY() UMyGCObject* Obj; }; /** * FTestGCStruct */ struct FTestGCStruct { public: UPROPERTY() UMyGCObject* Obj; }; /** * FTestGCUStruct */ USTRUCT() struct FTestGCUStruct { GENERATED_BODY() public: UPROPERTY() UMyGCObject* Obj; }; /** * ATestGCActor */ UCLASS() class ATestGCActor : public AActor { GENERATED_BODY() public: //UTestGCObject UTestGCObject* TestGCObj; //\u8ffd\u8e2a\u4e0d\u53ef\u8fbe\uff0c\u5f53GC\u65f6\u4f1a\u88ab\u56de\u6536 UPROPERTY() UTestGCObject* TestGCObj_UPROPERTY; //\u4f7f\u7528 UPROPERTY \u4fee\u9970\uff0c\u8ffd\u8e2a\u53ef\u8fbe\uff0c\u5f53GC\u65f6\u4e0d\u4f1a\u88ab\u56de\u6536 //FTestGCStruct //FTestGCStruct \u6ca1\u6709\u7528 USTRUCT() \u4fee\u9970\uff0c\u6240\u4ee5\u4efb\u4f55\u5f62\u5f0f\u7684\u53d8\u91cf\u90fd\u4e0d\u80fd\u4f7f\u7528 UPROPERTY()\u4fee\u9970 //\u6240\u4ee5\u4ee5\u4e0b\u51e0\u79cd\u53d8\u91cf\u5747 \u8ffd\u8e2a\u4e0d\u53ef\u8fbe\uff0c\u5f53GC\u65f6\u5176\u53d8\u91cf UMyGCObject* Obj \u4f1a\u88ab\u56de\u6536 FTestGCStruct TestGCStruct; FTestGCStruct* TestGCStructP; TSharedPtr<FTestGCStruct> TestGCStructPtr; TArray<FTestGCStruct> TestGCStructArray; TArray<TSharedPtr<FTestGCStruct>> TestGCStructPtrArray; //FTestGCStruct \u4f7f\u7528\u4e86 USTRUCT() \u4fee\u9970 //\u53ea\u6709\u4ee5\u4e0b 2 \u79cd\u5f62\u5f0f\u7684\u53d8\u91cf\uff0c\u624d\u53ef\u4ee5\u4f7f\u7528 UPROPERTY()\u4fee\u9970 //\u5f53\u4f7f\u7528 UPROPERTY() \u4fee\u9970\u65f6\uff0c\u8ffd\u8e2a\u53ef\u8fbe\uff0c\u5f53GC\u65f6\u5176\u53d8\u91cf UMyGCObject* Obj \u4e0d\u4f1a\u88ab\u56de\u6536 UPROPERTY() FTestGCUStruct TestGCUStruct_UPROPERTY; UPROPERTY() TArray<FTestGCUStruct> TestGCUStructArray_UPROPERTY; //\u4ee5\u4e0b\u51e0\u79cd\u53d8\u91cf \u8ffd\u8e2a\u4e0d\u53ef\u8fbe\uff0c\u5f53GC\u65f6\u5176\u53d8\u91cf UMyGCObject* Obj \u4f1a\u88ab\u56de\u6536 FTestGCUStruct TestGCUStruct; FTestGCUStruct* TestGCUStructP; TSharedPtr<FTestGCUStruct> TestGCUStructPtr; TArray<FTestGCUStruct> TestGCUStructArray; TArray<TSharedPtr<FTestGCUStruct>> TestGCUStructPtrArray; };","title":"Demo"},{"location":"UE4/%E5%88%9B%E5%BB%BA%E7%BB%84%E4%BB%B6/","text":"\u521b\u5efa\u7ec4\u4ef6 # \u9759\u6001\u521b\u5efa # USphereComponent* Sphere = CreateDefaultSubobject<USphereComponent>(TEXT(\"Sphere\")); Sphere->SetupAttachment(RootComponent); \u52a8\u6001\u521b\u5efa # UBoxComponent* BoxComponent = NewObject<UBoxComponent>(this,TEXT(\"BoxComponent\")); //\u6ce8\u518c\u6b64\u7ec4\u4ef6\uff0c\u521b\u5efa\u6e32\u67d3/\u7269\u7406\u72b6\u6001\u3002\u5e76\u5c06\u5176\u6dfb\u52a0\u5230OuterActor\u7684\u7ec4\u4ef6\u6570\u7ec4\u4e2d BoxComponent->RegisterComponent(); //\u5c06\u52a8\u6001\u521b\u5efa\u7684\u7ec4\u4ef6\u6302\u8f7d\u5230\u8ddf\u7ec4\u4ef6\u4e0a BoxComponent->AttachToComponent(GetRootComponent(), FAttachmentTransformRules::KeepRelativeTransform); //\u5c06\u7ec4\u4ef6\u6dfb\u52a0\u5230Actor\u7684\u5b9e\u4f8b\u7ec4\u4ef6\u6570\u7ec4\u4e2d\uff0c\u4f7f\u52a8\u6001\u521b\u5efa\u7684\u7ec4\u4ef6\u663e\u793a\u5728\u7f16\u8f91\u5668\u7ec6\u8282\u9762\u677f\u4e2d this->AddInstanceComponent(BoxComponent);","title":"\u521b\u5efa\u7ec4\u4ef6"},{"location":"UE4/%E5%88%9B%E5%BB%BA%E7%BB%84%E4%BB%B6/#_1","text":"","title":"\u521b\u5efa\u7ec4\u4ef6"},{"location":"UE4/%E5%88%9B%E5%BB%BA%E7%BB%84%E4%BB%B6/#_2","text":"USphereComponent* Sphere = CreateDefaultSubobject<USphereComponent>(TEXT(\"Sphere\")); Sphere->SetupAttachment(RootComponent);","title":"\u9759\u6001\u521b\u5efa"},{"location":"UE4/%E5%88%9B%E5%BB%BA%E7%BB%84%E4%BB%B6/#_3","text":"UBoxComponent* BoxComponent = NewObject<UBoxComponent>(this,TEXT(\"BoxComponent\")); //\u6ce8\u518c\u6b64\u7ec4\u4ef6\uff0c\u521b\u5efa\u6e32\u67d3/\u7269\u7406\u72b6\u6001\u3002\u5e76\u5c06\u5176\u6dfb\u52a0\u5230OuterActor\u7684\u7ec4\u4ef6\u6570\u7ec4\u4e2d BoxComponent->RegisterComponent(); //\u5c06\u52a8\u6001\u521b\u5efa\u7684\u7ec4\u4ef6\u6302\u8f7d\u5230\u8ddf\u7ec4\u4ef6\u4e0a BoxComponent->AttachToComponent(GetRootComponent(), FAttachmentTransformRules::KeepRelativeTransform); //\u5c06\u7ec4\u4ef6\u6dfb\u52a0\u5230Actor\u7684\u5b9e\u4f8b\u7ec4\u4ef6\u6570\u7ec4\u4e2d\uff0c\u4f7f\u52a8\u6001\u521b\u5efa\u7684\u7ec4\u4ef6\u663e\u793a\u5728\u7f16\u8f91\u5668\u7ec6\u8282\u9762\u677f\u4e2d this->AddInstanceComponent(BoxComponent);","title":"\u52a8\u6001\u521b\u5efa"},{"location":"UE4/%E5%AE%8FGENERATED_XX_BODY%E4%B9%8B%E9%97%B4%E7%9A%84%E5%8C%BA%E5%88%AB/","text":"\u5b8fGENERATED_XX_BODY # UE4\u4e2d\u5b9a\u4e49\u4e86\u591a\u79cd GENERATED_XX_BODY \u7684\u5b8f\uff0c\u770b\u5b8f\u5b9a\u4e49\u6700\u7ec8\u53ea\u6709 GENERATED_BODY \u548c GENERATED_BODY_LEGACY \u4e24\u79cd\uff0c\u800c\u533a\u522b\u53ea\u662f\u6784\u9020\u51fd\u6570\u662f\u65e0\u53c2\u6784\u9020\u51fd\u6570\u8fd8\u662f\u5e26\u6709\u53c2\u6570 const FObjectInitializer& X \u7684\u6784\u9020\u51fd\u6570 \u9ed8\u8ba4\u65e0\u53c2\u6784\u9020\u51fd\u6570 GENERATED_BODY GENERATED_USTRUCT_BODY \u5e26\u6709\u53c2\u6570 const FObjectInitializer& X \u7684\u6784\u9020\u51fd\u6570 GENERATED_UCLASS_BODY GENERATED_UINTERFACE_BODY GENERATED_IINTERFACE_BODY GENERATED_BODY_LEGACY BODY_MACRO_COMBINE_INNER GENERATED_BODY \u548c GENERATED_BODY_LEGACY \u6700\u7ec8\u6307\u5411\u5b8f BODY_MACRO_COMBINE_INNER \uff0c\u53ea\u662f\u540e\u7f00\u4e0d\u540c\u800c\u5df2 // This pair of macros is used to help implement GENERATED_BODY() and GENERATED_USTRUCT_BODY() #define BODY_MACRO_COMBINE_INNER(A,B,C,D) A##B##C##D #define BODY_MACRO_COMBINE(A,B,C,D) BODY_MACRO_COMBINE_INNER(A,B,C,D) // Include a redundant semicolon at the end of the generated code block, so that intellisense parsers can start parsing // a new declaration if the line number/generated code is out of date. #define GENERATED_BODY_LEGACY(...) BODY_MACRO_COMBINE(CURRENT_FILE_ID,_,__LINE__,_GENERATED_BODY_LEGACY); #define GENERATED_BODY(...) BODY_MACRO_COMBINE(CURRENT_FILE_ID,_,__LINE__,_GENERATED_BODY); #define GENERATED_USTRUCT_BODY(...) GENERATED_BODY() #define GENERATED_UCLASS_BODY(...) GENERATED_BODY_LEGACY() #define GENERATED_UINTERFACE_BODY(...) GENERATED_BODY_LEGACY() #define GENERATED_IINTERFACE_BODY(...) GENERATED_BODY_LEGACY() BODY_MACRO_COMBINE_INNER # #define BODY_MACRO_COMBINE_INNER(A,B,C,D) A##B##C##D \u901a\u8fc7\u4f20\u5165\u7684\u5b57\u7b26\u4e32\u7ec4\u5408\u6210\u4e00\u4e2a\u65b0\u7684\u5b8f\uff0c\u5bf9\u5e94\u7684\u5b8f\u5b9a\u4e49\u5728 \"XX.generated.h\" \u5934\u6587\u4ef6\u4e2d \"XX.generated.h\" \u53ef\u4ee5\u5728 MyProject/Intermediate/Build/Win64 \u76ee\u5f55\u4e0b\u627e\u5230 \u5728 \"XX.generated.h\" \u7684\u6700\u4e0b\u65b9\u53ef\u4ee5\u770b\u5230 #define BODY_MACRO_COMBINE_INNER(A,B,C,D) A##B##C##D \u751f\u6210\u7684\u5b57\u7b26\u4e32\u5bf9\u5e94\u7684\u5b8f\u5b9a\u4e49 #define MyProject_Source_MyProject_Public_MyPlayerState_h_16_GENERATED_BODY_LEGACY \\ PRAGMA_DISABLE_DEPRECATION_WARNINGS \\ public: \\ MyProject_Source_MyProject_Public_MyPlayerState_h_16_PRIVATE_PROPERTY_OFFSET \\ MyProject_Source_MyProject_Public_MyPlayerState_h_16_SPARSE_DATA \\ MyProject_Source_MyProject_Public_MyPlayerState_h_16_RPC_WRAPPERS \\ MyProject_Source_MyProject_Public_MyPlayerState_h_16_INCLASS \\ MyProject_Source_MyProject_Public_MyPlayerState_h_16_STANDARD_CONSTRUCTORS \\ public: \\ PRAGMA_ENABLE_DEPRECATION_WARNINGS #define MyProject_Source_MyProject_Public_MyPlayerState_h_16_GENERATED_BODY \\ PRAGMA_DISABLE_DEPRECATION_WARNINGS \\ public: \\ MyProject_Source_MyProject_Public_MyPlayerState_h_16_PRIVATE_PROPERTY_OFFSET \\ MyProject_Source_MyProject_Public_MyPlayerState_h_16_SPARSE_DATA \\ MyProject_Source_MyProject_Public_MyPlayerState_h_16_RPC_WRAPPERS_NO_PURE_DECLS \\ MyProject_Source_MyProject_Public_MyPlayerState_h_16_INCLASS_NO_PURE_DECLS \\ MyProject_Source_MyProject_Public_MyPlayerState_h_16_ENHANCED_CONSTRUCTORS \\ private: \\ PRAGMA_ENABLE_DEPRECATION_WARNINGS CONSTRUCTORS # CONSTRUCTORS \u5e26\u53c2\u6570 const FObjectInitializer& ObjectInitializer \u7684\u6784\u9020\u51fd\u6570 MyProject_Source_MyProject_Public_MyPlayerState_h_16_STANDARD_CONSTRUCTORS \u9ed8\u8ba4\u65e0\u53c2\u6784\u9020\u51fd\u6570 MyProject_Source_MyProject_Public_MyPlayerState_h_16_ENHANCED_CONSTRUCTORS #define MyProject_Source_MyProject_Public_MyPlayerState_h_16_STANDARD_CONSTRUCTORS \\ /** Standard constructor, called after all reflected properties have been initialized */ \\ NO_API AMyPlayerState(const FObjectInitializer& ObjectInitializer); \\ DEFINE_DEFAULT_OBJECT_INITIALIZER_CONSTRUCTOR_CALL(AMyPlayerState) \\ DECLARE_VTABLE_PTR_HELPER_CTOR(NO_API, AMyPlayerState); \\ DEFINE_VTABLE_PTR_HELPER_CTOR_CALLER(AMyPlayerState); \\ private: \\ /** Private move- and copy-constructors, should never be used */ \\ NO_API AMyPlayerState(AMyPlayerState&&); \\ NO_API AMyPlayerState(const AMyPlayerState&); \\ public: #define MyProject_Source_MyProject_Public_MyPlayerState_h_16_ENHANCED_CONSTRUCTORS \\ private: \\ /** Private move- and copy-constructors, should never be used */ \\ NO_API AMyPlayerState(AMyPlayerState&&); \\ NO_API AMyPlayerState(const AMyPlayerState&); \\ public: \\ DECLARE_VTABLE_PTR_HELPER_CTOR(NO_API, AMyPlayerState); \\ DEFINE_VTABLE_PTR_HELPER_CTOR_CALLER(AMyPlayerState); \\ DEFINE_DEFAULT_CONSTRUCTOR_CALL(AMyPlayerState) CONSTRUCTOR_CALL # CONSTRUCTOR_CALL \u65e0\u53c2\u6784\u9020\u51fd\u6570\u6784\u9020\u5668 DEFINE_DEFAULT_CONSTRUCTOR_CALL \u5e26\u53c2\u6570 const FObjectInitializer& X \u7684\u6784\u9020\u51fd\u6570\u6784\u9020\u5668 DEFINE_DEFAULT_OBJECT_INITIALIZER_CONSTRUCTOR_CALL //ObjectMacros.h #define DEFINE_DEFAULT_CONSTRUCTOR_CALL(TClass) \\ static void __DefaultConstructor(const FObjectInitializer& X) { new((EInternal*)X.GetObj())TClass; } #define DEFINE_DEFAULT_OBJECT_INITIALIZER_CONSTRUCTOR_CALL(TClass) \\ static void __DefaultConstructor(const FObjectInitializer& X) { new((EInternal*)X.GetObj())TClass(X); }","title":"\u5b8fGENERATED_XX_BODY"},{"location":"UE4/%E5%AE%8FGENERATED_XX_BODY%E4%B9%8B%E9%97%B4%E7%9A%84%E5%8C%BA%E5%88%AB/#generated_xx_body","text":"UE4\u4e2d\u5b9a\u4e49\u4e86\u591a\u79cd GENERATED_XX_BODY \u7684\u5b8f\uff0c\u770b\u5b8f\u5b9a\u4e49\u6700\u7ec8\u53ea\u6709 GENERATED_BODY \u548c GENERATED_BODY_LEGACY \u4e24\u79cd\uff0c\u800c\u533a\u522b\u53ea\u662f\u6784\u9020\u51fd\u6570\u662f\u65e0\u53c2\u6784\u9020\u51fd\u6570\u8fd8\u662f\u5e26\u6709\u53c2\u6570 const FObjectInitializer& X \u7684\u6784\u9020\u51fd\u6570 \u9ed8\u8ba4\u65e0\u53c2\u6784\u9020\u51fd\u6570 GENERATED_BODY GENERATED_USTRUCT_BODY \u5e26\u6709\u53c2\u6570 const FObjectInitializer& X \u7684\u6784\u9020\u51fd\u6570 GENERATED_UCLASS_BODY GENERATED_UINTERFACE_BODY GENERATED_IINTERFACE_BODY GENERATED_BODY_LEGACY BODY_MACRO_COMBINE_INNER GENERATED_BODY \u548c GENERATED_BODY_LEGACY \u6700\u7ec8\u6307\u5411\u5b8f BODY_MACRO_COMBINE_INNER \uff0c\u53ea\u662f\u540e\u7f00\u4e0d\u540c\u800c\u5df2 // This pair of macros is used to help implement GENERATED_BODY() and GENERATED_USTRUCT_BODY() #define BODY_MACRO_COMBINE_INNER(A,B,C,D) A##B##C##D #define BODY_MACRO_COMBINE(A,B,C,D) BODY_MACRO_COMBINE_INNER(A,B,C,D) // Include a redundant semicolon at the end of the generated code block, so that intellisense parsers can start parsing // a new declaration if the line number/generated code is out of date. #define GENERATED_BODY_LEGACY(...) BODY_MACRO_COMBINE(CURRENT_FILE_ID,_,__LINE__,_GENERATED_BODY_LEGACY); #define GENERATED_BODY(...) BODY_MACRO_COMBINE(CURRENT_FILE_ID,_,__LINE__,_GENERATED_BODY); #define GENERATED_USTRUCT_BODY(...) GENERATED_BODY() #define GENERATED_UCLASS_BODY(...) GENERATED_BODY_LEGACY() #define GENERATED_UINTERFACE_BODY(...) GENERATED_BODY_LEGACY() #define GENERATED_IINTERFACE_BODY(...) GENERATED_BODY_LEGACY()","title":"\u5b8fGENERATED_XX_BODY"},{"location":"UE4/%E5%AE%8FGENERATED_XX_BODY%E4%B9%8B%E9%97%B4%E7%9A%84%E5%8C%BA%E5%88%AB/#body_macro_combine_inner","text":"#define BODY_MACRO_COMBINE_INNER(A,B,C,D) A##B##C##D \u901a\u8fc7\u4f20\u5165\u7684\u5b57\u7b26\u4e32\u7ec4\u5408\u6210\u4e00\u4e2a\u65b0\u7684\u5b8f\uff0c\u5bf9\u5e94\u7684\u5b8f\u5b9a\u4e49\u5728 \"XX.generated.h\" \u5934\u6587\u4ef6\u4e2d \"XX.generated.h\" \u53ef\u4ee5\u5728 MyProject/Intermediate/Build/Win64 \u76ee\u5f55\u4e0b\u627e\u5230 \u5728 \"XX.generated.h\" \u7684\u6700\u4e0b\u65b9\u53ef\u4ee5\u770b\u5230 #define BODY_MACRO_COMBINE_INNER(A,B,C,D) A##B##C##D \u751f\u6210\u7684\u5b57\u7b26\u4e32\u5bf9\u5e94\u7684\u5b8f\u5b9a\u4e49 #define MyProject_Source_MyProject_Public_MyPlayerState_h_16_GENERATED_BODY_LEGACY \\ PRAGMA_DISABLE_DEPRECATION_WARNINGS \\ public: \\ MyProject_Source_MyProject_Public_MyPlayerState_h_16_PRIVATE_PROPERTY_OFFSET \\ MyProject_Source_MyProject_Public_MyPlayerState_h_16_SPARSE_DATA \\ MyProject_Source_MyProject_Public_MyPlayerState_h_16_RPC_WRAPPERS \\ MyProject_Source_MyProject_Public_MyPlayerState_h_16_INCLASS \\ MyProject_Source_MyProject_Public_MyPlayerState_h_16_STANDARD_CONSTRUCTORS \\ public: \\ PRAGMA_ENABLE_DEPRECATION_WARNINGS #define MyProject_Source_MyProject_Public_MyPlayerState_h_16_GENERATED_BODY \\ PRAGMA_DISABLE_DEPRECATION_WARNINGS \\ public: \\ MyProject_Source_MyProject_Public_MyPlayerState_h_16_PRIVATE_PROPERTY_OFFSET \\ MyProject_Source_MyProject_Public_MyPlayerState_h_16_SPARSE_DATA \\ MyProject_Source_MyProject_Public_MyPlayerState_h_16_RPC_WRAPPERS_NO_PURE_DECLS \\ MyProject_Source_MyProject_Public_MyPlayerState_h_16_INCLASS_NO_PURE_DECLS \\ MyProject_Source_MyProject_Public_MyPlayerState_h_16_ENHANCED_CONSTRUCTORS \\ private: \\ PRAGMA_ENABLE_DEPRECATION_WARNINGS","title":"BODY_MACRO_COMBINE_INNER"},{"location":"UE4/%E5%AE%8FGENERATED_XX_BODY%E4%B9%8B%E9%97%B4%E7%9A%84%E5%8C%BA%E5%88%AB/#constructors","text":"CONSTRUCTORS \u5e26\u53c2\u6570 const FObjectInitializer& ObjectInitializer \u7684\u6784\u9020\u51fd\u6570 MyProject_Source_MyProject_Public_MyPlayerState_h_16_STANDARD_CONSTRUCTORS \u9ed8\u8ba4\u65e0\u53c2\u6784\u9020\u51fd\u6570 MyProject_Source_MyProject_Public_MyPlayerState_h_16_ENHANCED_CONSTRUCTORS #define MyProject_Source_MyProject_Public_MyPlayerState_h_16_STANDARD_CONSTRUCTORS \\ /** Standard constructor, called after all reflected properties have been initialized */ \\ NO_API AMyPlayerState(const FObjectInitializer& ObjectInitializer); \\ DEFINE_DEFAULT_OBJECT_INITIALIZER_CONSTRUCTOR_CALL(AMyPlayerState) \\ DECLARE_VTABLE_PTR_HELPER_CTOR(NO_API, AMyPlayerState); \\ DEFINE_VTABLE_PTR_HELPER_CTOR_CALLER(AMyPlayerState); \\ private: \\ /** Private move- and copy-constructors, should never be used */ \\ NO_API AMyPlayerState(AMyPlayerState&&); \\ NO_API AMyPlayerState(const AMyPlayerState&); \\ public: #define MyProject_Source_MyProject_Public_MyPlayerState_h_16_ENHANCED_CONSTRUCTORS \\ private: \\ /** Private move- and copy-constructors, should never be used */ \\ NO_API AMyPlayerState(AMyPlayerState&&); \\ NO_API AMyPlayerState(const AMyPlayerState&); \\ public: \\ DECLARE_VTABLE_PTR_HELPER_CTOR(NO_API, AMyPlayerState); \\ DEFINE_VTABLE_PTR_HELPER_CTOR_CALLER(AMyPlayerState); \\ DEFINE_DEFAULT_CONSTRUCTOR_CALL(AMyPlayerState)","title":"CONSTRUCTORS"},{"location":"UE4/%E5%AE%8FGENERATED_XX_BODY%E4%B9%8B%E9%97%B4%E7%9A%84%E5%8C%BA%E5%88%AB/#constructor_call","text":"CONSTRUCTOR_CALL \u65e0\u53c2\u6784\u9020\u51fd\u6570\u6784\u9020\u5668 DEFINE_DEFAULT_CONSTRUCTOR_CALL \u5e26\u53c2\u6570 const FObjectInitializer& X \u7684\u6784\u9020\u51fd\u6570\u6784\u9020\u5668 DEFINE_DEFAULT_OBJECT_INITIALIZER_CONSTRUCTOR_CALL //ObjectMacros.h #define DEFINE_DEFAULT_CONSTRUCTOR_CALL(TClass) \\ static void __DefaultConstructor(const FObjectInitializer& X) { new((EInternal*)X.GetObj())TClass; } #define DEFINE_DEFAULT_OBJECT_INITIALIZER_CONSTRUCTOR_CALL(TClass) \\ static void __DefaultConstructor(const FObjectInitializer& X) { new((EInternal*)X.GetObj())TClass(X); }","title":"CONSTRUCTOR_CALL"},{"location":"UE4/%E7%94%9F%E6%88%90xcode%E5%B7%A5%E7%A8%8B%E6%96%87%E4%BB%B6/","text":"\u6267\u884c\u4ee5\u4e0b\u547d\u4ee4 # /xxx/GenerateProjectFiles.sh /yyy/MyProject.uproject -Game -Engine \u6ce8\u610f\u8def\u5f84 xxx: GenerateProjectFiles.sh\u7684\u8def\u5f84 yyy: MyProject.uproject\u7684\u8def\u5f84","title":"\u751f\u6210xcode\u5de5\u7a0b\u6587\u4ef6"},{"location":"UE4/%E7%94%9F%E6%88%90xcode%E5%B7%A5%E7%A8%8B%E6%96%87%E4%BB%B6/#_1","text":"/xxx/GenerateProjectFiles.sh /yyy/MyProject.uproject -Game -Engine \u6ce8\u610f\u8def\u5f84 xxx: GenerateProjectFiles.sh\u7684\u8def\u5f84 yyy: MyProject.uproject\u7684\u8def\u5f84","title":"\u6267\u884c\u4ee5\u4e0b\u547d\u4ee4"},{"location":"UE4/%E7%BD%91%E7%BB%9C%E6%A6%82%E8%A6%81/","text":"\u7f51\u7edc\u6982\u8981 # Server-Client\u67b6\u6784 # ServerOnly Server&Clients Server&OwningClient OwningClientOnly AGameMode AGameState & APlayerState & APawn APlayerController AHUD & UMG Replication # Replicated\u3001ReplicatedUsing=FUNCTIONAME \u5c5e\u6027\u968f\u7f51\u7edc\u8fdb\u884c\u590d\u5236 ReplicatedUsing \u8bf4\u660e\u7b26\u6307\u5b9a\u4e00\u4e2a\u56de\u8c03\u51fd\u6570(\u5fc5\u987b\u4e3a UFUNCTION )\uff0c\u5176\u5728\u5c5e\u6027\u901a\u8fc7\u7f51\u7edc\u66f4\u65b0\u65f6\u6267\u884c GetLifetimeReplicatedProps \u9700\u91cd\u5199\u51fd\u6570 GetLifetimeReplicatedProps \u5e76\u4f7f\u7528 DOREPLIFETIME \u3001 DOREPLIFETIME_CONDITION \u7b49 \u6ce8\u518c\u9700\u8981\u540c\u6b65\u7684\u5c5e\u6027 void ARORCharacter::GetLifetimeReplicatedProps(TArray< FLifetimeProperty >& OutLifetimeProps) const { Super::GetLifetimeReplicatedProps(OutLifetimeProps); DOREPLIFETIME(ARORCharacter, IsInCombat); DOREPLIFETIME_CONDITION(ARORCharacter, RowName, COND_InitialOnly); DOREPLIFETIME_CONDITION_NOTIFY(ARORCharacter, OnDieInfo, COND_None, REPNOTIFY_Always); } enum ELifetimeCondition { COND_None = 0 UMETA(DisplayName = \"None\"), // This property has no condition, and will send anytime it changes COND_InitialOnly = 1 UMETA(DisplayName = \"Initial Only\"), // This property will only attempt to send on the initial bunch COND_OwnerOnly = 2 UMETA(DisplayName = \"Owner Only\"), // This property will only send to the actor's owner COND_SkipOwner = 3 UMETA(DisplayName = \"Skip Owner\"), // This property send to every connection EXCEPT the owner COND_SimulatedOnly = 4 UMETA(DisplayName = \"Simulated Only\"), // This property will only send to simulated actors COND_AutonomousOnly = 5 UMETA(DisplayName = \"Autonomous Only\"), // This property will only send to autonomous actors COND_SimulatedOrPhysics = 6 UMETA(DisplayName = \"Simulated Or Physics\"), // This property will send to simulated OR bRepPhysics actors COND_InitialOrOwner = 7 UMETA(DisplayName = \"Initial Or Owner\"), // This property will send on the initial packet, or to the actors owner COND_Custom = 8 UMETA(DisplayName = \"Custom\"), // This property has no particular condition, but wants the ability to toggle on/off via SetCustomIsActiveOverride COND_ReplayOrOwner = 9 UMETA(DisplayName = \"Replay Or Owner\"), // This property will only send to the replay connection, or to the actors owner COND_ReplayOnly = 10 UMETA(DisplayName = \"Replay Only\"), // This property will only send to the replay connection COND_SimulatedOnlyNoReplay = 11 UMETA(DisplayName = \"Simulated Only No Replay\"), // This property will send to actors only, but not to replay connections COND_SimulatedOrPhysicsNoReplay = 12 UMETA(DisplayName = \"Simulated Or Physics No Replay\"), // This property will send to simulated Or bRepPhysics actors, but not to replay connections COND_SkipReplay = 13 UMETA(DisplayName = \"Skip Replay\"), // This property will not send to the replay connection COND_Never = 15 UMETA(Hidden), // This property will never be replicated COND_Max = 16 UMETA(Hidden) }; RPC # Server\u3001Client\u3001NetMulticast \u58f0\u660e RPC \u51fd\u6570\u65f6\uff0c\u4f1a\u58f0\u660e\u4e00\u4e2a\u540d\u4e3a \u51fd\u6570\u540d_Implementation \u7684\u9644\u52a0\u51fd\u6570\uff0c\u800c\u8fd9\u4e2a\u9644\u52a0\u51fd\u6570\u624d\u662f\u6211\u4eec\u9700\u8981\u5b9e\u73b0\u7684 \u8fdc\u7a0b\u51fd\u6570 Reliable\u3001Unreliable \u7531\u4e8e\u5e26\u5bbd\u6216\u7f51\u7edc\u9519\u8bef\u4f1a\u5bfc\u81f4 RPC \u5931\u8d25\uff0c\u5f53\u58f0\u660e\u4e3a Reliable \u65f6\uff0c\u4f1a\u786e\u4fdd RPC \u6210\u529f \u975e\u5fc5\u8981\u4e0d\u8981\u4f7f\u7528 Reliable WithValidation \u58f0\u660e RPC \u51fd\u6570\u65f6\uff0c\u4f1a\u58f0\u660e\u4e00\u4e2a\u540d\u4e3a \u51fd\u6570\u540d_Validate \u7684\u9644\u52a0\u51fd\u6570\uff0c\u6b64\u51fd\u6570\u4f7f\u7528\u76f8\u540c\u7684\u53c2\u6570\uff0c\u4f46\u662f\u4f1a\u8fd4\u56de bool\u503c \uff0c\u53ea\u6709\u8fd4\u56de true \u65f6\u624d\u4f1a\u6210\u529f\u8c03\u7528 RPC Actor\u7684\u6240\u6709\u6743 # Actor\u7684\u6240\u6709\u6743 \u6bcf\u4e2a Connection \u90fd\u6709\u4e00\u4e2a PlayerController \uff0c\u8981\u786e\u5b9a\u67d0\u4e2aActor\u7684\u6240\u6709\u6743\u662f\u5426\u4e3a\u8be5\u8fde\u63a5\uff0c\u67e5\u770b\u5176\u6700\u5916\u56f4\u7684 Owner \u662f\u5426\u4e3a\u8be5\u8fde\u63a5\u6301\u6709\u7684 PlayerController \u5373\u53ef \u4ee5\u4e0b\u60c5\u5f62\u9700\u8981\u786e\u5b9a\u6240\u6709\u6743 RPC \u9700\u8981\u786e\u5b9a\u54ea\u4e2a\u5ba2\u6237\u7aef\u5c06\u6267\u884c Run-On-Client RPC Actor \u590d\u5236\u4e0e\u8fde\u63a5\u76f8\u5173\u6027 bOnlyRelevantToOwner=true \u7684 Actor \uff0c\u53ea\u6709\u540c\u6b65\u5230\u62e5\u6709\u6b64 Actor \u7684\u8fde\u63a5 \u5728\u6d89\u53ca\u6240\u6709\u8005\u65f6\u7684 Actor \u5c5e\u6027\u590d\u5236\u6761\u4ef6 DOREPLIFETIME_CONDITION \u4e2d\u7684 COND_OwnerOnly \u7b49 Actor\u76f8\u5173\u6027 # \u67d0\u4e00\u65f6\u523b\u5ba2\u6237\u7aef\uff08\u5373\u8be5\u5ba2\u6237\u7aef\u62e5\u6709\u7684\u8fde\u63a5\uff09\u4e0d\u4e00\u5b9a\u9700\u8981\u770b\u5230\u670d\u52a1\u5668\u4e0a\u6240\u6709\u7684 Actor \uff0c \u865a\u5e7b\u5f15\u64ce\u7684\u7f51\u7edc\u4ee3\u7801\u4e2d\u5305\u542b\u4e00\u5904\u91cd\u8981\u7684\u5e26\u5bbd\u4f18\u5316\uff1a\u670d\u52a1\u5668\u53ea\u4f1a\u8ba9\u5ba2\u6237\u7aef\u77e5\u9053\u4e0e\u5176\u76f8\u5173\u7684 Actor \u3002\u865a\u5e7b\u5f15\u64ce\uff08\u4f9d\u6b21\uff09\u53c2\u7167\u4ee5\u4e0b\u89c4\u5219\u786e\u5b9a Actor \u4e0e\u5ba2\u6237\u7aef\u7684\u76f8\u5173\u6027 AActor::IsNetRelevantFor() \u76f8\u5173\u6027\u5224\u65ad \u5982\u679c Actor \u662f bAlwaysRelevant \u3001\u5f52\u5c5e\u4e8e Pawn \u6216 PlayerController \u3001\u672c\u8eab\u4e3a Pawn \u6216\u8005 Pawn \u662f\u67d0\u4e9b\u884c\u4e3a\uff08\u5982\u566a\u97f3\u6216\u4f24\u5bb3\uff09\u7684\u53d1\u8d77\u8005\uff0c\u5219\u5176\u5177\u6709\u76f8\u5173\u6027\u3002 \u5982\u679c Actor \u662f bNetUseOwnerRelevancy \u4e14\u62e5\u6709\u4e00\u4e2a\u6240\u6709\u8005\uff0c\u5219\u4f7f\u7528\u6240\u6709\u8005\u7684\u76f8\u5173\u6027\u3002 \u5982\u679c Actor \u662f bOnlyRelevantToOwner \u4e14\u6ca1\u6709\u901a\u8fc7\u7b2c\u4e00\u8f6e\u68c0\u67e5\uff0c\u5219\u4e0d\u5177\u6709\u76f8\u5173\u6027\u3002 \u5982\u679c Actor \u88ab\u9644\u52a0\u5230\u53e6\u4e00\u4e2a Actor \u7684\u9aa8\u67b6\u6a21\u578b\uff0c\u5b83\u7684\u76f8\u5173\u6027\u5c06\u53d6\u51b3\u4e8e\u5176\u6240\u5728\u57fa\u7840\u7684\u76f8\u5173\u6027\u3002 \u5982\u679c Actor \u662f\u4e0d\u53ef\u89c1\u7684 (bHidden == true) \u5e76\u4e14\u5b83\u7684 Root Component \u5e76\u6ca1\u6709\u78b0\u649e\uff0c\u90a3\u4e48\u5219\u4e0d\u5177\u6709\u76f8\u5173\u6027\uff0c \u5982\u679c\u6ca1\u6709 Root Component \uff0c AActor::IsNetRelevantFor() \u4f1a\u8bb0\u5f55\u4e00\u6761\u8b66\u544a\uff0c\u63d0\u793a\u662f\u5426\u8981\u5c06\u5b83\u8bbe\u7f6e\u4e3a bAlwaysRelevant=true \u3002 \u5982\u679c AGameNetworkManager \u88ab\u8bbe\u7f6e\u4e3a\u4f7f\u7528\u57fa\u4e8e\u8ddd\u79bb\u7684\u76f8\u5173\u6027\uff0c\u5219\u53ea\u8981 Actor \u4f4e\u4e8e\u51c0\u5254\u9664\u8ddd\u79bb\uff0c\u5373\u88ab\u89c6\u4e3a\u5177\u6709\u76f8\u5173\u6027\u3002 Pawn \u548c PlayerController\u7684\u76f8\u5173\u6027\u5224\u65ad Pawn \u548c PlayerController \u5c06\u8986\u76d6 AActor::IsNetRelevantFor() \u5e76\u6700\u7ec8\u5177\u6709\u4e0d\u540c\u7684\u76f8\u5173\u6027\u6761\u4ef6 \u4f18\u5148\u7ea7\u8bbe\u5b9a # Actor \u7684 NetPriority Actor \u6709\u4e00\u4e2a\u53d8\u91cf float NetPriority \u3002\u8be5\u53d8\u91cf\u7684\u6570\u503c\u8d8a\u5927\uff0c\u8be5 Actor \u7684\u76f8\u5bf9\u5e26\u5bbd\u5c31\u8d8a\u591a\u3002 \u548c NetPriority=1.0 \u7684 Actor \u76f8\u6bd4\uff0c NetPriority=2.0 \u7684 Actor \u53ef\u4ee5\u5f97\u5230\u4e24\u500d\u7684\u66f4\u65b0\u9891\u5ea6\u3002 \u552f\u4e00\u5f71\u54cd\u4f18\u5148\u987a\u5e8f\u7684\u5c31\u662f\u5b83\u4eec\u7684\u6bd4\u503c\uff0c\u65e0\u6cd5\u901a\u8fc7\u63d0\u9ad8\u6240\u6709\u4f18\u5148\u7ea7\u7684\u6570\u503c\u6765\u589e\u52a0\u865a\u5e7b\u5f15\u64ce\u7684\u7f51\u7edc\u6027\u80fd\u3002 virtual void AActor::GetNetPriority() override; \u8ba1\u7b97 Actor \u7684\u5f53\u524d\u4f18\u5148\u7ea7\u65f6\u4f7f\u7528\u4e86\u865a\u51fd\u6570 AActor::GetNetPriority() \u3002\u4e3a\u907f\u514d\u51fa\u73b0\u9965\u8352\uff08starvation\uff09\uff0c AActor::GetNetPriority() \u4f7f\u7528 Actor \u4e0a\u6b21\u590d\u5236\u540e\u7ecf\u8fc7\u7684\u65f6\u95f4\u4e58\u4ee5 NetPriority \u3002\u8be5\u51fd\u6570\u8fd8\u8003\u8651\u4e86 Actor \u4e0e\u89c2\u5bdf\u8005\u7684\u76f8\u5bf9\u4f4d\u7f6e\u4ee5\u53ca\u4e24\u8005\u4e4b\u95f4\u7684\u8ddd\u79bb\u3002","title":"\u7f51\u7edc\u6982\u8981"},{"location":"UE4/%E7%BD%91%E7%BB%9C%E6%A6%82%E8%A6%81/#_1","text":"","title":"\u7f51\u7edc\u6982\u8981"},{"location":"UE4/%E7%BD%91%E7%BB%9C%E6%A6%82%E8%A6%81/#server-client","text":"ServerOnly Server&Clients Server&OwningClient OwningClientOnly AGameMode AGameState & APlayerState & APawn APlayerController AHUD & UMG","title":"Server-Client\u67b6\u6784"},{"location":"UE4/%E7%BD%91%E7%BB%9C%E6%A6%82%E8%A6%81/#replication","text":"Replicated\u3001ReplicatedUsing=FUNCTIONAME \u5c5e\u6027\u968f\u7f51\u7edc\u8fdb\u884c\u590d\u5236 ReplicatedUsing \u8bf4\u660e\u7b26\u6307\u5b9a\u4e00\u4e2a\u56de\u8c03\u51fd\u6570(\u5fc5\u987b\u4e3a UFUNCTION )\uff0c\u5176\u5728\u5c5e\u6027\u901a\u8fc7\u7f51\u7edc\u66f4\u65b0\u65f6\u6267\u884c GetLifetimeReplicatedProps \u9700\u91cd\u5199\u51fd\u6570 GetLifetimeReplicatedProps \u5e76\u4f7f\u7528 DOREPLIFETIME \u3001 DOREPLIFETIME_CONDITION \u7b49 \u6ce8\u518c\u9700\u8981\u540c\u6b65\u7684\u5c5e\u6027 void ARORCharacter::GetLifetimeReplicatedProps(TArray< FLifetimeProperty >& OutLifetimeProps) const { Super::GetLifetimeReplicatedProps(OutLifetimeProps); DOREPLIFETIME(ARORCharacter, IsInCombat); DOREPLIFETIME_CONDITION(ARORCharacter, RowName, COND_InitialOnly); DOREPLIFETIME_CONDITION_NOTIFY(ARORCharacter, OnDieInfo, COND_None, REPNOTIFY_Always); } enum ELifetimeCondition { COND_None = 0 UMETA(DisplayName = \"None\"), // This property has no condition, and will send anytime it changes COND_InitialOnly = 1 UMETA(DisplayName = \"Initial Only\"), // This property will only attempt to send on the initial bunch COND_OwnerOnly = 2 UMETA(DisplayName = \"Owner Only\"), // This property will only send to the actor's owner COND_SkipOwner = 3 UMETA(DisplayName = \"Skip Owner\"), // This property send to every connection EXCEPT the owner COND_SimulatedOnly = 4 UMETA(DisplayName = \"Simulated Only\"), // This property will only send to simulated actors COND_AutonomousOnly = 5 UMETA(DisplayName = \"Autonomous Only\"), // This property will only send to autonomous actors COND_SimulatedOrPhysics = 6 UMETA(DisplayName = \"Simulated Or Physics\"), // This property will send to simulated OR bRepPhysics actors COND_InitialOrOwner = 7 UMETA(DisplayName = \"Initial Or Owner\"), // This property will send on the initial packet, or to the actors owner COND_Custom = 8 UMETA(DisplayName = \"Custom\"), // This property has no particular condition, but wants the ability to toggle on/off via SetCustomIsActiveOverride COND_ReplayOrOwner = 9 UMETA(DisplayName = \"Replay Or Owner\"), // This property will only send to the replay connection, or to the actors owner COND_ReplayOnly = 10 UMETA(DisplayName = \"Replay Only\"), // This property will only send to the replay connection COND_SimulatedOnlyNoReplay = 11 UMETA(DisplayName = \"Simulated Only No Replay\"), // This property will send to actors only, but not to replay connections COND_SimulatedOrPhysicsNoReplay = 12 UMETA(DisplayName = \"Simulated Or Physics No Replay\"), // This property will send to simulated Or bRepPhysics actors, but not to replay connections COND_SkipReplay = 13 UMETA(DisplayName = \"Skip Replay\"), // This property will not send to the replay connection COND_Never = 15 UMETA(Hidden), // This property will never be replicated COND_Max = 16 UMETA(Hidden) };","title":"Replication"},{"location":"UE4/%E7%BD%91%E7%BB%9C%E6%A6%82%E8%A6%81/#rpc","text":"Server\u3001Client\u3001NetMulticast \u58f0\u660e RPC \u51fd\u6570\u65f6\uff0c\u4f1a\u58f0\u660e\u4e00\u4e2a\u540d\u4e3a \u51fd\u6570\u540d_Implementation \u7684\u9644\u52a0\u51fd\u6570\uff0c\u800c\u8fd9\u4e2a\u9644\u52a0\u51fd\u6570\u624d\u662f\u6211\u4eec\u9700\u8981\u5b9e\u73b0\u7684 \u8fdc\u7a0b\u51fd\u6570 Reliable\u3001Unreliable \u7531\u4e8e\u5e26\u5bbd\u6216\u7f51\u7edc\u9519\u8bef\u4f1a\u5bfc\u81f4 RPC \u5931\u8d25\uff0c\u5f53\u58f0\u660e\u4e3a Reliable \u65f6\uff0c\u4f1a\u786e\u4fdd RPC \u6210\u529f \u975e\u5fc5\u8981\u4e0d\u8981\u4f7f\u7528 Reliable WithValidation \u58f0\u660e RPC \u51fd\u6570\u65f6\uff0c\u4f1a\u58f0\u660e\u4e00\u4e2a\u540d\u4e3a \u51fd\u6570\u540d_Validate \u7684\u9644\u52a0\u51fd\u6570\uff0c\u6b64\u51fd\u6570\u4f7f\u7528\u76f8\u540c\u7684\u53c2\u6570\uff0c\u4f46\u662f\u4f1a\u8fd4\u56de bool\u503c \uff0c\u53ea\u6709\u8fd4\u56de true \u65f6\u624d\u4f1a\u6210\u529f\u8c03\u7528 RPC","title":"RPC"},{"location":"UE4/%E7%BD%91%E7%BB%9C%E6%A6%82%E8%A6%81/#actor","text":"Actor\u7684\u6240\u6709\u6743 \u6bcf\u4e2a Connection \u90fd\u6709\u4e00\u4e2a PlayerController \uff0c\u8981\u786e\u5b9a\u67d0\u4e2aActor\u7684\u6240\u6709\u6743\u662f\u5426\u4e3a\u8be5\u8fde\u63a5\uff0c\u67e5\u770b\u5176\u6700\u5916\u56f4\u7684 Owner \u662f\u5426\u4e3a\u8be5\u8fde\u63a5\u6301\u6709\u7684 PlayerController \u5373\u53ef \u4ee5\u4e0b\u60c5\u5f62\u9700\u8981\u786e\u5b9a\u6240\u6709\u6743 RPC \u9700\u8981\u786e\u5b9a\u54ea\u4e2a\u5ba2\u6237\u7aef\u5c06\u6267\u884c Run-On-Client RPC Actor \u590d\u5236\u4e0e\u8fde\u63a5\u76f8\u5173\u6027 bOnlyRelevantToOwner=true \u7684 Actor \uff0c\u53ea\u6709\u540c\u6b65\u5230\u62e5\u6709\u6b64 Actor \u7684\u8fde\u63a5 \u5728\u6d89\u53ca\u6240\u6709\u8005\u65f6\u7684 Actor \u5c5e\u6027\u590d\u5236\u6761\u4ef6 DOREPLIFETIME_CONDITION \u4e2d\u7684 COND_OwnerOnly \u7b49","title":"Actor\u7684\u6240\u6709\u6743"},{"location":"UE4/%E7%BD%91%E7%BB%9C%E6%A6%82%E8%A6%81/#actor_1","text":"\u67d0\u4e00\u65f6\u523b\u5ba2\u6237\u7aef\uff08\u5373\u8be5\u5ba2\u6237\u7aef\u62e5\u6709\u7684\u8fde\u63a5\uff09\u4e0d\u4e00\u5b9a\u9700\u8981\u770b\u5230\u670d\u52a1\u5668\u4e0a\u6240\u6709\u7684 Actor \uff0c \u865a\u5e7b\u5f15\u64ce\u7684\u7f51\u7edc\u4ee3\u7801\u4e2d\u5305\u542b\u4e00\u5904\u91cd\u8981\u7684\u5e26\u5bbd\u4f18\u5316\uff1a\u670d\u52a1\u5668\u53ea\u4f1a\u8ba9\u5ba2\u6237\u7aef\u77e5\u9053\u4e0e\u5176\u76f8\u5173\u7684 Actor \u3002\u865a\u5e7b\u5f15\u64ce\uff08\u4f9d\u6b21\uff09\u53c2\u7167\u4ee5\u4e0b\u89c4\u5219\u786e\u5b9a Actor \u4e0e\u5ba2\u6237\u7aef\u7684\u76f8\u5173\u6027 AActor::IsNetRelevantFor() \u76f8\u5173\u6027\u5224\u65ad \u5982\u679c Actor \u662f bAlwaysRelevant \u3001\u5f52\u5c5e\u4e8e Pawn \u6216 PlayerController \u3001\u672c\u8eab\u4e3a Pawn \u6216\u8005 Pawn \u662f\u67d0\u4e9b\u884c\u4e3a\uff08\u5982\u566a\u97f3\u6216\u4f24\u5bb3\uff09\u7684\u53d1\u8d77\u8005\uff0c\u5219\u5176\u5177\u6709\u76f8\u5173\u6027\u3002 \u5982\u679c Actor \u662f bNetUseOwnerRelevancy \u4e14\u62e5\u6709\u4e00\u4e2a\u6240\u6709\u8005\uff0c\u5219\u4f7f\u7528\u6240\u6709\u8005\u7684\u76f8\u5173\u6027\u3002 \u5982\u679c Actor \u662f bOnlyRelevantToOwner \u4e14\u6ca1\u6709\u901a\u8fc7\u7b2c\u4e00\u8f6e\u68c0\u67e5\uff0c\u5219\u4e0d\u5177\u6709\u76f8\u5173\u6027\u3002 \u5982\u679c Actor \u88ab\u9644\u52a0\u5230\u53e6\u4e00\u4e2a Actor \u7684\u9aa8\u67b6\u6a21\u578b\uff0c\u5b83\u7684\u76f8\u5173\u6027\u5c06\u53d6\u51b3\u4e8e\u5176\u6240\u5728\u57fa\u7840\u7684\u76f8\u5173\u6027\u3002 \u5982\u679c Actor \u662f\u4e0d\u53ef\u89c1\u7684 (bHidden == true) \u5e76\u4e14\u5b83\u7684 Root Component \u5e76\u6ca1\u6709\u78b0\u649e\uff0c\u90a3\u4e48\u5219\u4e0d\u5177\u6709\u76f8\u5173\u6027\uff0c \u5982\u679c\u6ca1\u6709 Root Component \uff0c AActor::IsNetRelevantFor() \u4f1a\u8bb0\u5f55\u4e00\u6761\u8b66\u544a\uff0c\u63d0\u793a\u662f\u5426\u8981\u5c06\u5b83\u8bbe\u7f6e\u4e3a bAlwaysRelevant=true \u3002 \u5982\u679c AGameNetworkManager \u88ab\u8bbe\u7f6e\u4e3a\u4f7f\u7528\u57fa\u4e8e\u8ddd\u79bb\u7684\u76f8\u5173\u6027\uff0c\u5219\u53ea\u8981 Actor \u4f4e\u4e8e\u51c0\u5254\u9664\u8ddd\u79bb\uff0c\u5373\u88ab\u89c6\u4e3a\u5177\u6709\u76f8\u5173\u6027\u3002 Pawn \u548c PlayerController\u7684\u76f8\u5173\u6027\u5224\u65ad Pawn \u548c PlayerController \u5c06\u8986\u76d6 AActor::IsNetRelevantFor() \u5e76\u6700\u7ec8\u5177\u6709\u4e0d\u540c\u7684\u76f8\u5173\u6027\u6761\u4ef6","title":"Actor\u76f8\u5173\u6027"},{"location":"UE4/%E7%BD%91%E7%BB%9C%E6%A6%82%E8%A6%81/#_2","text":"Actor \u7684 NetPriority Actor \u6709\u4e00\u4e2a\u53d8\u91cf float NetPriority \u3002\u8be5\u53d8\u91cf\u7684\u6570\u503c\u8d8a\u5927\uff0c\u8be5 Actor \u7684\u76f8\u5bf9\u5e26\u5bbd\u5c31\u8d8a\u591a\u3002 \u548c NetPriority=1.0 \u7684 Actor \u76f8\u6bd4\uff0c NetPriority=2.0 \u7684 Actor \u53ef\u4ee5\u5f97\u5230\u4e24\u500d\u7684\u66f4\u65b0\u9891\u5ea6\u3002 \u552f\u4e00\u5f71\u54cd\u4f18\u5148\u987a\u5e8f\u7684\u5c31\u662f\u5b83\u4eec\u7684\u6bd4\u503c\uff0c\u65e0\u6cd5\u901a\u8fc7\u63d0\u9ad8\u6240\u6709\u4f18\u5148\u7ea7\u7684\u6570\u503c\u6765\u589e\u52a0\u865a\u5e7b\u5f15\u64ce\u7684\u7f51\u7edc\u6027\u80fd\u3002 virtual void AActor::GetNetPriority() override; \u8ba1\u7b97 Actor \u7684\u5f53\u524d\u4f18\u5148\u7ea7\u65f6\u4f7f\u7528\u4e86\u865a\u51fd\u6570 AActor::GetNetPriority() \u3002\u4e3a\u907f\u514d\u51fa\u73b0\u9965\u8352\uff08starvation\uff09\uff0c AActor::GetNetPriority() \u4f7f\u7528 Actor \u4e0a\u6b21\u590d\u5236\u540e\u7ecf\u8fc7\u7684\u65f6\u95f4\u4e58\u4ee5 NetPriority \u3002\u8be5\u51fd\u6570\u8fd8\u8003\u8651\u4e86 Actor \u4e0e\u89c2\u5bdf\u8005\u7684\u76f8\u5bf9\u4f4d\u7f6e\u4ee5\u53ca\u4e24\u8005\u4e4b\u95f4\u7684\u8ddd\u79bb\u3002","title":"\u4f18\u5148\u7ea7\u8bbe\u5b9a"},{"location":"UE4/%E8%87%AA%E5%8A%A8%E7%BC%96%E8%AF%91%E6%96%B0%E5%88%9B%E5%BB%BA%E7%9A%84C%2B%2B%E7%B1%BB/","text":"\u81ea\u52a8\u7f16\u8bd1\u65b0\u521b\u5efa\u7684C++\u7c7b #","title":"\u81ea\u52a8\u7f16\u8bd1\u65b0\u521b\u5efa\u7684C++\u7c7b"},{"location":"UE4/%E8%87%AA%E5%8A%A8%E7%BC%96%E8%AF%91%E6%96%B0%E5%88%9B%E5%BB%BA%E7%9A%84C%2B%2B%E7%B1%BB/#c","text":"","title":"\u81ea\u52a8\u7f16\u8bd1\u65b0\u521b\u5efa\u7684C++\u7c7b"},{"location":"UE4/%E8%87%AA%E5%AE%9A%E4%B9%89Tick%E7%9A%84%E4%B8%A4%E7%A7%8D%E6%96%B9%E5%BC%8F/","text":"\u7ee7\u627f FTickableGameObject # UCLASS() class UCoolDownMgr : public UObject, public FTickableGameObject { GENERATED_BODY() public: // Sets default values for this character's properties UCoolDownMgr(); virtual ~UCoolDownMgr(); // Begin FTickableGameObject Interface. virtual void Tick(float DeltaTime) override; virtual bool IsTickable() const override; virtual TStatId GetStatId() const override; // End FTickableGameObject Interface. }; \u521b\u5efa\u4ee3\u7406 FTickerDelegate # TickDelegate = FTickerDelegate::CreateUObject(this, &UShooterGameInstance::Tick); TickDelegateHandle = FTicker::GetCoreTicker().AddTicker(TickDelegate);","title":"\u81ea\u5b9a\u4e49Tick\u7684\u4e24\u79cd\u65b9\u5f0f"},{"location":"UE4/%E8%87%AA%E5%AE%9A%E4%B9%89Tick%E7%9A%84%E4%B8%A4%E7%A7%8D%E6%96%B9%E5%BC%8F/#ftickablegameobject","text":"UCLASS() class UCoolDownMgr : public UObject, public FTickableGameObject { GENERATED_BODY() public: // Sets default values for this character's properties UCoolDownMgr(); virtual ~UCoolDownMgr(); // Begin FTickableGameObject Interface. virtual void Tick(float DeltaTime) override; virtual bool IsTickable() const override; virtual TStatId GetStatId() const override; // End FTickableGameObject Interface. };","title":"\u7ee7\u627f FTickableGameObject"},{"location":"UE4/%E8%87%AA%E5%AE%9A%E4%B9%89Tick%E7%9A%84%E4%B8%A4%E7%A7%8D%E6%96%B9%E5%BC%8F/#ftickerdelegate","text":"TickDelegate = FTickerDelegate::CreateUObject(this, &UShooterGameInstance::Tick); TickDelegateHandle = FTicker::GetCoreTicker().AddTicker(TickDelegate);","title":"\u521b\u5efa\u4ee3\u7406 FTickerDelegate"},{"location":"UE4/%E9%83%A8%E7%BD%B2iOS%E6%89%93%E5%8C%85%E7%8E%AF%E5%A2%83/","text":"Windows\u8fdc\u7a0b\u6253\u5305 # XCode 13.3.1 Unreal Engine 4.26 1\u3001RemoteToolChainPrivate # \u62a5\u9519 [Remote] Using private key at D:\\RemoteToolChainPrivate.key ERROR: Unable to determine home directory for remote user. SSH output: \u89e3\u51b3\u65b9\u6848 \u9700\u5728\u6253\u5305\u673a\uff08Windows\u7cfb\u7edf\uff09\u4e0a\u751f\u6210 RemoteToolChainPrivate.key \u6587\u4ef6 2\u3001-Werror # \u62a5\u9519 error: variable 'xx' set but not used [-Werror,-Wunused-but-set-variable] \u89e3\u51b3\u65b9\u6848 XCode\u7248\u672c\u95ee\u9898\uff0c\u53ef\u4ee5\u4f7f\u7528 Xcode 13.2.1 \u7248\u672c 3\u3001The Legacy Build System # \u62a5\u9519 error: The Legacy Build System will be removed in a future release. You can configure the selected build system and this deprecation message in File > Workspace Settings. \u89e3\u51b3\u65b9\u6848 Unreal Engine \u7248\u672c\u95ee\u9898\uff0c\u53ef\u4ee5\u4f7f\u7528 4.27 Mac\u6253\u5305 # jdk-11.0.15_osx-x64 Jenkins 2.332.2 LTS Jenkins\u4e2d\u914d\u7f6e svn \u8d26\u53f7\u9a8c\u8bc1\u4e0d\u901a\u8fc7\uff0c\u540e\u53f0\u62a5\u9519 \u62a5\u9519 SEVERE h.s.SubversionSCM$ModuleLocation$DescriptorImpl#checkCredentialsId: svn: E175002: SSL handshake failed: 'The server selected protocol version TLS10 is not accepted by client preferences [TLS13, TLS12] \u89e3\u51b3\u65b9\u6848 \u5728\u6587\u4ef6 /Library/Java/JavaVirtualMachines/jdk-11.0.15.jdk/Contents/Home/conf/security/java.security \u4e2d\u627e\u5230 jdk.tls.disabledAlgorithms\uff0c\u5220\u9664\u5176\u4e2d\u7684 TLSv1\u3001TLSv1.1\u30013DES_EDE_CBC \u540e\u91cd\u542f\u7cfb\u7edf\u3002 java.security\u6587\u4ef6\u6ca1\u6709\u6743\u9650\u4fee\u6539\uff0c\u53ef\u4ee5\u5c06\u5176\u590d\u5236\u5230\u6709\u6743\u9650\u4fee\u6539\u7684\u76ee\u5f55\uff0c\u6539\u5b8c\u4e4b\u540e\u518d\u8986\u76d6\u8be5\u6587\u4ef6\u3002","title":"\u90e8\u7f72iOS\u6253\u5305\u73af\u5883"},{"location":"UE4/%E9%83%A8%E7%BD%B2iOS%E6%89%93%E5%8C%85%E7%8E%AF%E5%A2%83/#windows","text":"XCode 13.3.1 Unreal Engine 4.26","title":"Windows\u8fdc\u7a0b\u6253\u5305"},{"location":"UE4/%E9%83%A8%E7%BD%B2iOS%E6%89%93%E5%8C%85%E7%8E%AF%E5%A2%83/#1remotetoolchainprivate","text":"\u62a5\u9519 [Remote] Using private key at D:\\RemoteToolChainPrivate.key ERROR: Unable to determine home directory for remote user. SSH output: \u89e3\u51b3\u65b9\u6848 \u9700\u5728\u6253\u5305\u673a\uff08Windows\u7cfb\u7edf\uff09\u4e0a\u751f\u6210 RemoteToolChainPrivate.key \u6587\u4ef6","title":"1\u3001RemoteToolChainPrivate"},{"location":"UE4/%E9%83%A8%E7%BD%B2iOS%E6%89%93%E5%8C%85%E7%8E%AF%E5%A2%83/#2-werror","text":"\u62a5\u9519 error: variable 'xx' set but not used [-Werror,-Wunused-but-set-variable] \u89e3\u51b3\u65b9\u6848 XCode\u7248\u672c\u95ee\u9898\uff0c\u53ef\u4ee5\u4f7f\u7528 Xcode 13.2.1 \u7248\u672c","title":"2\u3001-Werror"},{"location":"UE4/%E9%83%A8%E7%BD%B2iOS%E6%89%93%E5%8C%85%E7%8E%AF%E5%A2%83/#3the-legacy-build-system","text":"\u62a5\u9519 error: The Legacy Build System will be removed in a future release. You can configure the selected build system and this deprecation message in File > Workspace Settings. \u89e3\u51b3\u65b9\u6848 Unreal Engine \u7248\u672c\u95ee\u9898\uff0c\u53ef\u4ee5\u4f7f\u7528 4.27","title":"3\u3001The Legacy Build System"},{"location":"UE4/%E9%83%A8%E7%BD%B2iOS%E6%89%93%E5%8C%85%E7%8E%AF%E5%A2%83/#mac","text":"jdk-11.0.15_osx-x64 Jenkins 2.332.2 LTS Jenkins\u4e2d\u914d\u7f6e svn \u8d26\u53f7\u9a8c\u8bc1\u4e0d\u901a\u8fc7\uff0c\u540e\u53f0\u62a5\u9519 \u62a5\u9519 SEVERE h.s.SubversionSCM$ModuleLocation$DescriptorImpl#checkCredentialsId: svn: E175002: SSL handshake failed: 'The server selected protocol version TLS10 is not accepted by client preferences [TLS13, TLS12] \u89e3\u51b3\u65b9\u6848 \u5728\u6587\u4ef6 /Library/Java/JavaVirtualMachines/jdk-11.0.15.jdk/Contents/Home/conf/security/java.security \u4e2d\u627e\u5230 jdk.tls.disabledAlgorithms\uff0c\u5220\u9664\u5176\u4e2d\u7684 TLSv1\u3001TLSv1.1\u30013DES_EDE_CBC \u540e\u91cd\u542f\u7cfb\u7edf\u3002 java.security\u6587\u4ef6\u6ca1\u6709\u6743\u9650\u4fee\u6539\uff0c\u53ef\u4ee5\u5c06\u5176\u590d\u5236\u5230\u6709\u6743\u9650\u4fee\u6539\u7684\u76ee\u5f55\uff0c\u6539\u5b8c\u4e4b\u540e\u518d\u8986\u76d6\u8be5\u6587\u4ef6\u3002","title":"Mac\u6253\u5305"},{"location":"UE4/ASC/AbilitySystemComponent/","text":"AbilitySystemComponent # ASC # UAbilitySystemComponent(ASC) \u662f\u6574\u4e2a\u6280\u80fd\u7cfb\u7edf\u7684\u6838\u5fc3\uff0c ASC \u672c\u8d28\u4e0a\u662f\u4e00\u4e2a UActorComponent \uff0c\u7528\u4e8e\u5904\u7406\u6280\u80fd\u7cfb\u7edf\u4e2d\u7684\u6240\u6709\u4ea4\u4e92\u3002 ASC \u6301\u6709\u88ab\u8d4b\u4e88\u7684 GameplayAbilities \uff0c FGameplayAbilitySpecContainer ActivatableAbilities \u3002 ASC \u6301\u6709\u5f53\u524d\u5df2\u6fc0\u6d3b\u7684 GameplayEffects \uff0c FActiveGameplayEffectsContainer ActiveGameplayEffects \u3002 \u8fed\u4ee3 ASC \u7684 ActivatableAbilities.Items \u5728\u8fed\u4ee3 ASC \u7684 ActivatableAbilities.Items \u4e4b\u524d\uff0c\u4e00\u5b9a\u8981\u6dfb\u52a0 ABILITYLIST_SCOPE_LOCK() \uff0c\u5728 ABILITYLIST_SCOPE_LOCK() \u8fc7\u7a0b\u4e2d\u66f4\u4e0d\u8981\u5220\u9664 Ability \u3002 OwnerActor \u548c AvatarActor # ASC \u7684 OwnerActor \u548c AvatarActor \u53ef\u4ee5\u662f\u540c\u4e00\u4e2a Actor \uff0c\u5982 MOBA \u4e2d\u7684\u91ce\u602a\u3002\u4e5f\u53ef\u4ee5\u662f\u4e0d\u540c\u7684 Actor \uff0c\u5982 MOBA \u4e2d\u73a9\u5bb6\u63a7\u5236\u7684 Character\uff0c\u6b64\u65f6 OwnerActor \u901a\u5e38\u4e3a PlayerState \u3002 IAbilitySystemInterface \u5982\u679c OwnerActor \u548c AvatarActor \u662f\u4e0d\u540c\u7684 Actor\uff0c\u5219\u4e24\u8005\u90fd\u9700\u5b9e\u73b0 IAbilitySystemInterface PlayerState \u7684 NetUpdateFrequency \u5982\u679c ASC \u7684 OwnerActor \u4e3a PlayerState \uff0c\u5219\u9700\u589e\u52a0 PlayerState \u7684\u7f51\u7edc\u66f4\u65b0\u9891\u7387 NetUpdateFrequency \uff0c PlayerState \u7684\u9ed8\u8ba4\u66f4\u65b0\u9891\u7387\u975e\u5e38\u4f4e\uff0c\u4f1a\u5bfc\u81f4 Attributes \u548c GameplayTags \u7684\u540c\u6b65\u5ef6\u8fdf\uff0c \u786e\u4fdd\u542f\u7528\u4e86 Adaptive Network Update Frequency \uff0c\u9ed8\u8ba4\u662f\u5173\u95ed\u7684 ASC\u590d\u5236\u6a21\u5f0f # ASC \u63d0\u4f9b\u4e86\u4e09\u79cd\u4e0d\u540c\u7684\u590d\u5236\u6a21\u5f0f\uff0c\u7528\u4e8e\u590d\u5236 GameplayEffects \u3001 GameplayTags \u548c GameplayCues \u3002\u800c Attributes \u7531 AttributeSet \u590d\u5236\u3002 \u590d\u5236\u6a21\u5f0f \u4f7f\u7528\u573a\u666f \u63cf\u8ff0 Full \u5355\u4eba GameplayEffect \u4f1a\u88ab\u590d\u5236\u5230\u6240\u6709\u5ba2\u6237\u7aef\u3002 Mixed \u591a\u4eba\uff0c\u73a9\u5bb6\u63a7\u5236\u7684Actor GameplayEffect\u4ec5\u88ab\u590d\u5236\u5230 Owner Client\uff0cGameplayTags\u548cGameplayCus\u4f1a\u88ab\u590d\u5236\u5230\u6240\u6709\u5ba2\u6237\u7aef\u3002 Minimal \u591a\u4eba\uff0cAI\u63a7\u5236\u7684Actor GameplayEffect\u4e0d\u4f1a\u88ab\u590d\u5236\u5230\u4efb\u4f55\u5ba2\u6237\u7aef\uff0cGameplayTags\u548cGameplayCus\u4f1a\u88ab\u590d\u5236\u5230\u6240\u6709\u5ba2\u6237\u7aef ASC\u7684\u521b\u5efa\u548c\u521d\u59cb\u5316 # ASC \u901a\u5e38\u5728 OwnerActor \u7684\u6784\u9020\u51fd\u6570\u4e2d\u521b\u5efa\uff0c\u5e76\u8bbe\u7f6e\u590d\u5236\u6a21\u5f0f\uff0c\u8fd9\u4e00\u6b65\u5fc5\u987b\u5728C++\u4e2d\u5b8c\u6210\u3002 ARPGPlayerState::ARPGPlayerState() { // Create ability system component, and set it to be explicitly replicated AbilitySystemComponent = CreateDefaultSubobject<URPGAbilitySystemComponent>(TEXT(\"AbilitySystemComponent\")); AbilitySystemComponent->SetIsReplicated(true); AbilitySystemComponent->SetReplicationMode(EGameplayEffectReplicationMode::Mixed); NetUpdateFrequency = 100.0f; //. } ASC\u7684\u521d\u59cb\u5316 ASC \u9700\u8981\u5728 OwnerActor \u548c AvatarActor \u4e2d\u90fd\u8fdb\u884c\u521d\u59cb\u5316\uff0c\u800c\u4e14\u5fc5\u987b\u5728 \u670d\u52a1\u5668 \u548c \u5ba2\u6237\u7aef \u90fd\u8981\u5b8c\u6210\u521d\u59cb\u5316\u3002 \u5f53 OwnerActor == AvatarActor \u65f6 # \u5bf9\u4e8e\u73a9\u5bb6\u63a7\u5236\u7684\u89d2\u8272\uff0cASC \u7684 OwnerActor\u548cAvatarActor \u90fd\u4e3a Pawn \u65f6\uff0c\u901a\u5e38 -\u670d\u52a1\u5668\uff1a\u5728 Pawn \u7684 PossessedBy() \u51fd\u6570\u4e2d\u5b8c\u6210 ASC \u7684\u521d\u59cb\u5316\uff1b -\u5ba2\u6237\u7aef\uff1a\u5728 PlayerController \u7684 AcknowledgePawn() \u51fd\u6570\u4e2d\u5b8c\u6210 ASC \u7684\u521d\u59cb\u5316\u3002 /* ARPGCharacterBase.cpp */ void ARPGCharacterBase::PossessedBy(AController * NewController) { Super::PossessedBy(NewController); \u200b if (AbilitySystemComponent) { AbilitySystemComponent->InitAbilityActorInfo(this, this); } //... } /* ARPGPlayerControllerBase.cpp*/ void ARPGPlayerControllerBase::AcknowledgePossession(APawn* P) { Super::AcknowledgePossession(P); \u200b ARPGCharacterBase* CharacterBase = Cast<ARPGCharacterBase>(P); if (CharacterBase) { CharacterBase->GetAbilitySystemComponent()->InitAbilityActorInfo(CharacterBase, CharacterBase); } //... } \u5f53 OwnerActor != AvatarActor \u65f6 # \u5bf9\u4e8e\u73a9\u5bb6\u63a7\u5236\u7684\u89d2\u8272\uff0cASC \u7684 OwnerActor \u4e3a PlayerState\uff0cAvatarActor \u4e3a Pawn \u65f6\uff0c\u901a\u5e38 - \u670d\u52a1\u5668\uff1a\u5728 Pawn \u7684 PossessedBy() \u51fd\u6570\u4e2d\u5b8c\u6210 ASC \u7684\u521d\u59cb\u5316\uff08\u4e0e\u4e0a\u9762\u76f8\u540c\uff09\uff1b - \u5ba2\u6237\u7aef\uff1a\u5728 Pawn \u7684 OnRep_PlayerState() \u51fd\u6570\u4e2d \u5b8c\u6210 ASC \u7684\u521d\u59cb\u5316\uff08\u8fd9\u5c06\u786e\u4fdd PlayerState \u5728\u5ba2\u6237\u7aef\u5df2\u5b58\u5728\uff09\u3002 // Server only void ARPGHeroCharacter::PossessedBy(AController * NewController) { Super::PossessedBy(NewController); \u200b ARPGPlayerState* PS = GetPlayerState<ARPGPlayerState>(); if (PS) { // Set the ASC on the Server. Clients do this in OnRep_PlayerState() AbilitySystemComponent = Cast<URPGAbilitySystemComponent>(PS->GetAbilitySystemComponent()); \u200b // AI won't have PlayerControllers so we can init again here just to be sure. No harm in initing twice for heroes that have PlayerControllers. PS->GetAbilitySystemComponent()->InitAbilityActorInfo(PS, this); } //... } // Client only void ARPGHeroCharacter::OnRep_PlayerState() { Super::OnRep_PlayerState(); \u200b ARPGPlayerState* PS = GetPlayerState<ARPGPlayerState>(); if (PS) { // Set the ASC for clients. Server does this in PossessedBy. AbilitySystemComponent = Cast<URPGAbilitySystemComponent>(PS->GetAbilitySystemComponent()); \u200b // Init ASC Actor Info for clients. Server will init its ASC when it possesses a new Actor. AbilitySystemComponent->InitAbilityActorInfo(PS, this); } \u200b // ... } \u5982\u679c\u770b\u5230\u5982\u4e0b\u65e5\u5fd7\uff0c\u5219\u8bf4\u660e\u6ca1\u6709\u5728\u5ba2\u6237\u7aef\u521d\u59cb\u5316 ASC LogAbilitySystem: Warning: Can't activate LocalOnly or LocalPredicted ability %s when not local!","title":"AbilitySystemComponent"},{"location":"UE4/ASC/AbilitySystemComponent/#abilitysystemcomponent","text":"","title":"AbilitySystemComponent"},{"location":"UE4/ASC/AbilitySystemComponent/#asc","text":"UAbilitySystemComponent(ASC) \u662f\u6574\u4e2a\u6280\u80fd\u7cfb\u7edf\u7684\u6838\u5fc3\uff0c ASC \u672c\u8d28\u4e0a\u662f\u4e00\u4e2a UActorComponent \uff0c\u7528\u4e8e\u5904\u7406\u6280\u80fd\u7cfb\u7edf\u4e2d\u7684\u6240\u6709\u4ea4\u4e92\u3002 ASC \u6301\u6709\u88ab\u8d4b\u4e88\u7684 GameplayAbilities \uff0c FGameplayAbilitySpecContainer ActivatableAbilities \u3002 ASC \u6301\u6709\u5f53\u524d\u5df2\u6fc0\u6d3b\u7684 GameplayEffects \uff0c FActiveGameplayEffectsContainer ActiveGameplayEffects \u3002 \u8fed\u4ee3 ASC \u7684 ActivatableAbilities.Items \u5728\u8fed\u4ee3 ASC \u7684 ActivatableAbilities.Items \u4e4b\u524d\uff0c\u4e00\u5b9a\u8981\u6dfb\u52a0 ABILITYLIST_SCOPE_LOCK() \uff0c\u5728 ABILITYLIST_SCOPE_LOCK() \u8fc7\u7a0b\u4e2d\u66f4\u4e0d\u8981\u5220\u9664 Ability \u3002","title":"ASC"},{"location":"UE4/ASC/AbilitySystemComponent/#owneractor-avataractor","text":"ASC \u7684 OwnerActor \u548c AvatarActor \u53ef\u4ee5\u662f\u540c\u4e00\u4e2a Actor \uff0c\u5982 MOBA \u4e2d\u7684\u91ce\u602a\u3002\u4e5f\u53ef\u4ee5\u662f\u4e0d\u540c\u7684 Actor \uff0c\u5982 MOBA \u4e2d\u73a9\u5bb6\u63a7\u5236\u7684 Character\uff0c\u6b64\u65f6 OwnerActor \u901a\u5e38\u4e3a PlayerState \u3002 IAbilitySystemInterface \u5982\u679c OwnerActor \u548c AvatarActor \u662f\u4e0d\u540c\u7684 Actor\uff0c\u5219\u4e24\u8005\u90fd\u9700\u5b9e\u73b0 IAbilitySystemInterface PlayerState \u7684 NetUpdateFrequency \u5982\u679c ASC \u7684 OwnerActor \u4e3a PlayerState \uff0c\u5219\u9700\u589e\u52a0 PlayerState \u7684\u7f51\u7edc\u66f4\u65b0\u9891\u7387 NetUpdateFrequency \uff0c PlayerState \u7684\u9ed8\u8ba4\u66f4\u65b0\u9891\u7387\u975e\u5e38\u4f4e\uff0c\u4f1a\u5bfc\u81f4 Attributes \u548c GameplayTags \u7684\u540c\u6b65\u5ef6\u8fdf\uff0c \u786e\u4fdd\u542f\u7528\u4e86 Adaptive Network Update Frequency \uff0c\u9ed8\u8ba4\u662f\u5173\u95ed\u7684","title":"OwnerActor \u548c AvatarActor"},{"location":"UE4/ASC/AbilitySystemComponent/#asc_1","text":"ASC \u63d0\u4f9b\u4e86\u4e09\u79cd\u4e0d\u540c\u7684\u590d\u5236\u6a21\u5f0f\uff0c\u7528\u4e8e\u590d\u5236 GameplayEffects \u3001 GameplayTags \u548c GameplayCues \u3002\u800c Attributes \u7531 AttributeSet \u590d\u5236\u3002 \u590d\u5236\u6a21\u5f0f \u4f7f\u7528\u573a\u666f \u63cf\u8ff0 Full \u5355\u4eba GameplayEffect \u4f1a\u88ab\u590d\u5236\u5230\u6240\u6709\u5ba2\u6237\u7aef\u3002 Mixed \u591a\u4eba\uff0c\u73a9\u5bb6\u63a7\u5236\u7684Actor GameplayEffect\u4ec5\u88ab\u590d\u5236\u5230 Owner Client\uff0cGameplayTags\u548cGameplayCus\u4f1a\u88ab\u590d\u5236\u5230\u6240\u6709\u5ba2\u6237\u7aef\u3002 Minimal \u591a\u4eba\uff0cAI\u63a7\u5236\u7684Actor GameplayEffect\u4e0d\u4f1a\u88ab\u590d\u5236\u5230\u4efb\u4f55\u5ba2\u6237\u7aef\uff0cGameplayTags\u548cGameplayCus\u4f1a\u88ab\u590d\u5236\u5230\u6240\u6709\u5ba2\u6237\u7aef","title":"ASC\u590d\u5236\u6a21\u5f0f"},{"location":"UE4/ASC/AbilitySystemComponent/#asc_2","text":"ASC \u901a\u5e38\u5728 OwnerActor \u7684\u6784\u9020\u51fd\u6570\u4e2d\u521b\u5efa\uff0c\u5e76\u8bbe\u7f6e\u590d\u5236\u6a21\u5f0f\uff0c\u8fd9\u4e00\u6b65\u5fc5\u987b\u5728C++\u4e2d\u5b8c\u6210\u3002 ARPGPlayerState::ARPGPlayerState() { // Create ability system component, and set it to be explicitly replicated AbilitySystemComponent = CreateDefaultSubobject<URPGAbilitySystemComponent>(TEXT(\"AbilitySystemComponent\")); AbilitySystemComponent->SetIsReplicated(true); AbilitySystemComponent->SetReplicationMode(EGameplayEffectReplicationMode::Mixed); NetUpdateFrequency = 100.0f; //. } ASC\u7684\u521d\u59cb\u5316 ASC \u9700\u8981\u5728 OwnerActor \u548c AvatarActor \u4e2d\u90fd\u8fdb\u884c\u521d\u59cb\u5316\uff0c\u800c\u4e14\u5fc5\u987b\u5728 \u670d\u52a1\u5668 \u548c \u5ba2\u6237\u7aef \u90fd\u8981\u5b8c\u6210\u521d\u59cb\u5316\u3002","title":"ASC\u7684\u521b\u5efa\u548c\u521d\u59cb\u5316"},{"location":"UE4/ASC/AbilitySystemComponent/#owneractor-avataractor_1","text":"\u5bf9\u4e8e\u73a9\u5bb6\u63a7\u5236\u7684\u89d2\u8272\uff0cASC \u7684 OwnerActor\u548cAvatarActor \u90fd\u4e3a Pawn \u65f6\uff0c\u901a\u5e38 -\u670d\u52a1\u5668\uff1a\u5728 Pawn \u7684 PossessedBy() \u51fd\u6570\u4e2d\u5b8c\u6210 ASC \u7684\u521d\u59cb\u5316\uff1b -\u5ba2\u6237\u7aef\uff1a\u5728 PlayerController \u7684 AcknowledgePawn() \u51fd\u6570\u4e2d\u5b8c\u6210 ASC \u7684\u521d\u59cb\u5316\u3002 /* ARPGCharacterBase.cpp */ void ARPGCharacterBase::PossessedBy(AController * NewController) { Super::PossessedBy(NewController); \u200b if (AbilitySystemComponent) { AbilitySystemComponent->InitAbilityActorInfo(this, this); } //... } /* ARPGPlayerControllerBase.cpp*/ void ARPGPlayerControllerBase::AcknowledgePossession(APawn* P) { Super::AcknowledgePossession(P); \u200b ARPGCharacterBase* CharacterBase = Cast<ARPGCharacterBase>(P); if (CharacterBase) { CharacterBase->GetAbilitySystemComponent()->InitAbilityActorInfo(CharacterBase, CharacterBase); } //... }","title":"\u5f53 OwnerActor == AvatarActor \u65f6"},{"location":"UE4/ASC/AbilitySystemComponent/#owneractor-avataractor_2","text":"\u5bf9\u4e8e\u73a9\u5bb6\u63a7\u5236\u7684\u89d2\u8272\uff0cASC \u7684 OwnerActor \u4e3a PlayerState\uff0cAvatarActor \u4e3a Pawn \u65f6\uff0c\u901a\u5e38 - \u670d\u52a1\u5668\uff1a\u5728 Pawn \u7684 PossessedBy() \u51fd\u6570\u4e2d\u5b8c\u6210 ASC \u7684\u521d\u59cb\u5316\uff08\u4e0e\u4e0a\u9762\u76f8\u540c\uff09\uff1b - \u5ba2\u6237\u7aef\uff1a\u5728 Pawn \u7684 OnRep_PlayerState() \u51fd\u6570\u4e2d \u5b8c\u6210 ASC \u7684\u521d\u59cb\u5316\uff08\u8fd9\u5c06\u786e\u4fdd PlayerState \u5728\u5ba2\u6237\u7aef\u5df2\u5b58\u5728\uff09\u3002 // Server only void ARPGHeroCharacter::PossessedBy(AController * NewController) { Super::PossessedBy(NewController); \u200b ARPGPlayerState* PS = GetPlayerState<ARPGPlayerState>(); if (PS) { // Set the ASC on the Server. Clients do this in OnRep_PlayerState() AbilitySystemComponent = Cast<URPGAbilitySystemComponent>(PS->GetAbilitySystemComponent()); \u200b // AI won't have PlayerControllers so we can init again here just to be sure. No harm in initing twice for heroes that have PlayerControllers. PS->GetAbilitySystemComponent()->InitAbilityActorInfo(PS, this); } //... } // Client only void ARPGHeroCharacter::OnRep_PlayerState() { Super::OnRep_PlayerState(); \u200b ARPGPlayerState* PS = GetPlayerState<ARPGPlayerState>(); if (PS) { // Set the ASC for clients. Server does this in PossessedBy. AbilitySystemComponent = Cast<URPGAbilitySystemComponent>(PS->GetAbilitySystemComponent()); \u200b // Init ASC Actor Info for clients. Server will init its ASC when it possesses a new Actor. AbilitySystemComponent->InitAbilityActorInfo(PS, this); } \u200b // ... } \u5982\u679c\u770b\u5230\u5982\u4e0b\u65e5\u5fd7\uff0c\u5219\u8bf4\u660e\u6ca1\u6709\u5728\u5ba2\u6237\u7aef\u521d\u59cb\u5316 ASC LogAbilitySystem: Warning: Can't activate LocalOnly or LocalPredicted ability %s when not local!","title":"\u5f53 OwnerActor != AvatarActor \u65f6"},{"location":"UE4/ASC/Attribute/","text":"Attribute # Attribute # Attribute \u662f\u7531 FGameplayAttributeData \u5b9a\u4e49\u7684\u6d6e\u70b9\u503c\u3002\u901a\u5e38\u7528\u6765\u8868\u793a\u89d2\u8272\u7684\u67d0\u4e9b\u5c5e\u6027\uff0c\u5982\uff1aHP\u3001MP\u7b49\u7b49\u3002Attribute \u901a\u5e38\u53ea\u88ab GameplayEffect \u4fee\u6539\uff0c\u56e0\u6b64 ASC \u53ef\u4ee5\u9884\u6d4b\u8fd9\u4e2a\u4fee\u6539\u3002 Attribute \u88ab\u5b9a\u4e49\u5728 AttributeSet \u4e2d\uff0cAttributeSet \u4e5f\u4f1a\u8d1f\u8d23\u5904\u7406 Attribute \u7684\u7f51\u7edc\u590d\u5236\u3002 HideInDetailsView \u5982\u679c\u4e0d\u9700\u8981 Attribute \u663e\u793a\u5728\u7f16\u8f91\u5668\u7684\u5c5e\u6027\u8be6\u60c5\u4e2d\uff0c\u53ef\u4ee5\u4f7f\u7528 meta = (HideInDetailsView) \u5c5e\u6027\u8bf4\u660e\u7b26\u3002 BaseValue \u548c CurrentValue # \u4e00\u4e2a Attribute \u7531\u4e24\u4e2a\u503c\u6784\u6210\uff0c BaseValue \u548c CurrentValue \u3002 BaseValue\uff1aAttribute \u7684\u6c38\u4e45\u57fa\u503c CurrentValue\uff1aAttribute \u7684 \u5f53\u524d\u503c\uff0c\u5176 BaseValue + GameEffects \u7684\u4e34\u65f6\u4fee\u6539\u503c \u5e94\u7528 GameplayEffect \u65f6\u4fee\u6539 Attribute \u7684\u503c Instant \uff1a\u4fee\u6539 BaseValue Duration \uff1a\u4fee\u6539 CurrentValue \u5f53\u542f\u7528 Periodic \u65f6\uff0c\u4fee\u6539 BaseValue Infinite \uff1a\u4fee\u6539 CurrentValue \u5f53\u542f\u7528 Periodic \u65f6\uff0c\u4fee\u6539 BaseValue \u76d1\u542c Attribute \u7684\u53d8\u5316 # //\u8bbe\u7f6e\u4ee3\u7406 AbilitySystemComponent->GetGameplayAttributeValueChangeDelegate(AttributeSet->GetHealthAttribute()).AddUObject(this, &ARPGPlayerState::HealthChanged); //\u56de\u8c03\u51fd\u6570 //FGameplayEffectModCallbackData \u53ea\u80fd\u5728\u670d\u52a1\u7aef\u4e0a\u8bbe\u7f6e virtual void HealthChanged(const FOnAttributeChangeData& Data)\uff1b","title":"Attribute"},{"location":"UE4/ASC/Attribute/#attribute","text":"","title":"Attribute"},{"location":"UE4/ASC/Attribute/#attribute_1","text":"Attribute \u662f\u7531 FGameplayAttributeData \u5b9a\u4e49\u7684\u6d6e\u70b9\u503c\u3002\u901a\u5e38\u7528\u6765\u8868\u793a\u89d2\u8272\u7684\u67d0\u4e9b\u5c5e\u6027\uff0c\u5982\uff1aHP\u3001MP\u7b49\u7b49\u3002Attribute \u901a\u5e38\u53ea\u88ab GameplayEffect \u4fee\u6539\uff0c\u56e0\u6b64 ASC \u53ef\u4ee5\u9884\u6d4b\u8fd9\u4e2a\u4fee\u6539\u3002 Attribute \u88ab\u5b9a\u4e49\u5728 AttributeSet \u4e2d\uff0cAttributeSet \u4e5f\u4f1a\u8d1f\u8d23\u5904\u7406 Attribute \u7684\u7f51\u7edc\u590d\u5236\u3002 HideInDetailsView \u5982\u679c\u4e0d\u9700\u8981 Attribute \u663e\u793a\u5728\u7f16\u8f91\u5668\u7684\u5c5e\u6027\u8be6\u60c5\u4e2d\uff0c\u53ef\u4ee5\u4f7f\u7528 meta = (HideInDetailsView) \u5c5e\u6027\u8bf4\u660e\u7b26\u3002","title":"Attribute"},{"location":"UE4/ASC/Attribute/#basevalue-currentvalue","text":"\u4e00\u4e2a Attribute \u7531\u4e24\u4e2a\u503c\u6784\u6210\uff0c BaseValue \u548c CurrentValue \u3002 BaseValue\uff1aAttribute \u7684\u6c38\u4e45\u57fa\u503c CurrentValue\uff1aAttribute \u7684 \u5f53\u524d\u503c\uff0c\u5176 BaseValue + GameEffects \u7684\u4e34\u65f6\u4fee\u6539\u503c \u5e94\u7528 GameplayEffect \u65f6\u4fee\u6539 Attribute \u7684\u503c Instant \uff1a\u4fee\u6539 BaseValue Duration \uff1a\u4fee\u6539 CurrentValue \u5f53\u542f\u7528 Periodic \u65f6\uff0c\u4fee\u6539 BaseValue Infinite \uff1a\u4fee\u6539 CurrentValue \u5f53\u542f\u7528 Periodic \u65f6\uff0c\u4fee\u6539 BaseValue","title":"BaseValue \u548c CurrentValue"},{"location":"UE4/ASC/Attribute/#attribute_2","text":"//\u8bbe\u7f6e\u4ee3\u7406 AbilitySystemComponent->GetGameplayAttributeValueChangeDelegate(AttributeSet->GetHealthAttribute()).AddUObject(this, &ARPGPlayerState::HealthChanged); //\u56de\u8c03\u51fd\u6570 //FGameplayEffectModCallbackData \u53ea\u80fd\u5728\u670d\u52a1\u7aef\u4e0a\u8bbe\u7f6e virtual void HealthChanged(const FOnAttributeChangeData& Data)\uff1b","title":"\u76d1\u542c Attribute \u7684\u53d8\u5316"},{"location":"UE4/ASC/AttributeSet/","text":"AttributeSet # AttributeSet \u5b9a\u4e49 # AttributeSet \u8d1f\u8d23\u5b9a\u4e49\u5e76\u7ba1\u7406 Attributes \u3002 AttributeSet Actor \u7684 AttributeSet \uff0c\u4f1a\u5728\u5176 ASC \u7ec4\u4ef6\u7684\u51fd\u6570 UAbilitySystemComponent::InitializeComponent \u4e2d\u81ea\u52a8\u6ce8\u518c \u4e00\u4e2a ASC \u53ef\u4ee5\u6709 N \u4e2a AttributeSet AttributeSet \u7684\u5185\u5b58\u5f00\u9500\u5f88\u4f4e\u3002 \u540c\u4e00\u4e2a AttributeSet \u5728\u4e00\u4e2a ASC \u4e2d\u6700\u591a\u53ea\u80fd\u6709 1 \u4e2a\u3002 \u5b9a\u4e49Attributes # // RPGAttributeSet.h //\u5efa\u8bae\u5b9a\u4e49\u8be5\u5b8f\uff0c\u5b83\u5c06\u4f1a\u4e3a\u5c5e\u6027\u751f\u6210 Getter\u548cSetter \u7b49\u51fd\u6570\u3002 #define ATTRIBUTE_ACCESSORS(ClassName, PropertyName) \\ GAMEPLAYATTRIBUTE_PROPERTY_GETTER(ClassName, PropertyName) \\ GAMEPLAYATTRIBUTE_VALUE_GETTER(PropertyName) \\ GAMEPLAYATTRIBUTE_VALUE_SETTER(PropertyName) \\ GAMEPLAYATTRIBUTE_VALUE_INITTER(PropertyName) UPROPERTY(BlueprintReadOnly, Category = \"HP\", ReplicatedUsing = OnRep_HP) FGameplayAttributeData HP; ATTRIBUTE_ACCESSORS(UGTAttributeSet, HP); UFUNCTION() virtual void OnRep_HP(const FGameplayAttributeData& OldHP); ////////////////////////////////////////////////////// // RPGAttributeSet.cpp void UGTAttributeSet::OnRep_HP(const FGameplayAttributeData& OldHP) { GAMEPLAYATTRIBUTE_REPNOTIFY(UGTAttributeSet, HP, OldHP); } void UGTAttributeSet::GetLifetimeReplicatedProps(TArray<class FLifetimeProperty>& OutLifetimeProps) const { Super::GetLifetimeReplicatedProps(OutLifetimeProps); DOREPLIFETIME_CONDITION_NOTIFY(UGTAttributeSet, HP, COND_None, REPNOTIFY_Always); } Attribute REPNOTIFY_Always \uff1a\u544a\u8bc9 OnRep \u51fd\u6570\uff0c\u5728\u672c\u5730\u503c\u548c\u670d\u52a1\u5668\u4e0b\u53d1\u7684\u503c\u5373\u4f7f\u76f8\u540c\u4e5f\u4f1a\u89e6\u53d1\uff08\u4e3a\u4e86\u9884\u6d4b\uff09\uff0c\u9ed8\u8ba4\u60c5\u51b5\u4e0b OnRep \u4e0d\u4f1a\u89e6\u53d1\u3002 \u5982\u679c Attribute \u4e0d\u9700\u8981\u590d\u5236\uff08\u5982\uff1aMeta Attribute\uff09\uff0c\u90a3\u4e48 OnRep \u548c GetLifetimeReplicatedProps \u53ef\u4ee5\u8df3\u8fc7\u3002 AttributeSet \u51e0\u4e2a\u91cd\u8981\u7684\u51fd\u6570 # PreAttributeChange \u5728 AttributeSet \u7684 CurrentValue \u88ab\u6539\u53d8\u4e4b\u524d\u8c03\u7528\uff0c\u4e3b\u8981\u5bf9 NewValue \u8fdb\u884c Clamp \u4fee\u6b63 \u5728\u8fd9\u91cc\u505a\u7684\u4efb\u4f55\u9650\u5236\u90fd\u4e0d\u4f1a\u6c38\u4e45\u6027\u5730\u4fee\u6539 ASC \u4e2d\u7684 Modifier , \u53ea\u4f1a\u4fee\u6539\u67e5\u8be2 Modifier \u7684\u8fd4\u56de\u503c GameplayEffectExecutionCalculations \u548c ModifierMagnitudeCalculations \u8fd9\u79cd\u81ea\u6240\u6709 Modifier \u91cd\u65b0\u8ba1\u7b97 CurrentValue \u7684\u51fd\u6570\u9700\u8981\u518d\u6b21\u6267\u884c Clamp \u64cd\u4f5c PostGameplayEffectExecute \u4ec5\u5728 Instant GE \u5bf9 Attribute \u7684 BaseValue \u4fee\u6539\u4e4b\u540e\u89e6\u53d1 \u5f53 PostGameplayEffectExecute \u88ab\u8c03\u7528\u65f6\uff0c\u5bf9\u5c5e\u6027\u7684\u6539\u53d8\u5df2\u7ecf\u53d1\u751f\uff0c\u4f46\u8fd8\u6ca1\u6709\u590d\u5236\u7ed9\u5ba2\u6237\u7aef\uff0c\u56e0\u6b64\u5728\u6b64\u5904\u8fdb\u884c Clamp \u4e0d\u4f1a\u6267\u884c\u4e24\u6b21\u590d\u5236\uff0c\u5ba2\u6237\u7aef\u53ea\u4f1a\u6536\u5230 Clamp \u540e\u7684\u7ed3\u679c\u3002 class GAMEPLAYABILITIES_API UAttributeSet : public UObject { public: /** * Called just before modifying the value of an attribute. AttributeSet can make additional modifications here. Return true to continue, or false to throw out the modification. * Note this is only called during an 'execute'. E.g., a modification to the 'base value' of an attribute. It is not called during an application of a GameplayEffect, such as a 5 ssecond +10 movement speed buff. */ virtual bool PreGameplayEffectExecute(struct FGameplayEffectModCallbackData &Data) { return true; } /** * Called just before a GameplayEffect is executed to modify the base value of an attribute. No more changes can be made. * Note this is only called during an 'execute'. E.g., a modification to the 'base value' of an attribute. It is not called during an application of a GameplayEffect, such as a 5 ssecond +10 movement speed buff. */ virtual void PostGameplayEffectExecute(const struct FGameplayEffectModCallbackData &Data) { } /** * An \"On Aggregator Change\" type of event could go here, and that could be called when active gameplay effects are added or removed to an attribute aggregator. * It is difficult to give all the information in these cases though - aggregators can change for many reasons: being added, being removed, being modified, having a modifier change, immunity, stacking rules, etc. */ /** * Called just before any modification happens to an attribute. This is lower level than PreAttributeModify/PostAttribute modify. * There is no additional context provided here since anything can trigger this. Executed effects, duration based effects, effects being removed, immunity being applied, stacking rules changing, etc. * This function is meant to enforce things like \"Health = Clamp(Health, 0, MaxHealth)\" and NOT things like \"trigger this extra thing if damage is applied, etc\". * * NewValue is a mutable reference so you are able to clamp the newly applied value as well. */ virtual void PreAttributeChange(const FGameplayAttribute& Attribute, float& NewValue) { } /** * This is called just before any modification happens to an attribute's base value when an attribute aggregator exists. * This function should enforce clamping (presuming you wish to clamp the base value along with the final value in PreAttributeChange) * This function should NOT invoke gameplay related events or callbacks. Do those in PreAttributeChange() which will be called prior to the * final value of the attribute actually changing. */ virtual void PreAttributeBaseChange(const FGameplayAttribute& Attribute, float& NewValue) const { } /** Callback for when an FAggregator is created for an attribute in this set. Allows custom setup of FAggregator::EvaluationMetaData */ virtual void OnAttributeAggregatorCreated(const FGameplayAttribute& Attribute, FAggregator* NewAggregator) const { } };","title":"AttributeSet"},{"location":"UE4/ASC/AttributeSet/#attributeset","text":"","title":"AttributeSet"},{"location":"UE4/ASC/AttributeSet/#attributeset_1","text":"AttributeSet \u8d1f\u8d23\u5b9a\u4e49\u5e76\u7ba1\u7406 Attributes \u3002 AttributeSet Actor \u7684 AttributeSet \uff0c\u4f1a\u5728\u5176 ASC \u7ec4\u4ef6\u7684\u51fd\u6570 UAbilitySystemComponent::InitializeComponent \u4e2d\u81ea\u52a8\u6ce8\u518c \u4e00\u4e2a ASC \u53ef\u4ee5\u6709 N \u4e2a AttributeSet AttributeSet \u7684\u5185\u5b58\u5f00\u9500\u5f88\u4f4e\u3002 \u540c\u4e00\u4e2a AttributeSet \u5728\u4e00\u4e2a ASC \u4e2d\u6700\u591a\u53ea\u80fd\u6709 1 \u4e2a\u3002","title":"AttributeSet \u5b9a\u4e49"},{"location":"UE4/ASC/AttributeSet/#attributes","text":"// RPGAttributeSet.h //\u5efa\u8bae\u5b9a\u4e49\u8be5\u5b8f\uff0c\u5b83\u5c06\u4f1a\u4e3a\u5c5e\u6027\u751f\u6210 Getter\u548cSetter \u7b49\u51fd\u6570\u3002 #define ATTRIBUTE_ACCESSORS(ClassName, PropertyName) \\ GAMEPLAYATTRIBUTE_PROPERTY_GETTER(ClassName, PropertyName) \\ GAMEPLAYATTRIBUTE_VALUE_GETTER(PropertyName) \\ GAMEPLAYATTRIBUTE_VALUE_SETTER(PropertyName) \\ GAMEPLAYATTRIBUTE_VALUE_INITTER(PropertyName) UPROPERTY(BlueprintReadOnly, Category = \"HP\", ReplicatedUsing = OnRep_HP) FGameplayAttributeData HP; ATTRIBUTE_ACCESSORS(UGTAttributeSet, HP); UFUNCTION() virtual void OnRep_HP(const FGameplayAttributeData& OldHP); ////////////////////////////////////////////////////// // RPGAttributeSet.cpp void UGTAttributeSet::OnRep_HP(const FGameplayAttributeData& OldHP) { GAMEPLAYATTRIBUTE_REPNOTIFY(UGTAttributeSet, HP, OldHP); } void UGTAttributeSet::GetLifetimeReplicatedProps(TArray<class FLifetimeProperty>& OutLifetimeProps) const { Super::GetLifetimeReplicatedProps(OutLifetimeProps); DOREPLIFETIME_CONDITION_NOTIFY(UGTAttributeSet, HP, COND_None, REPNOTIFY_Always); } Attribute REPNOTIFY_Always \uff1a\u544a\u8bc9 OnRep \u51fd\u6570\uff0c\u5728\u672c\u5730\u503c\u548c\u670d\u52a1\u5668\u4e0b\u53d1\u7684\u503c\u5373\u4f7f\u76f8\u540c\u4e5f\u4f1a\u89e6\u53d1\uff08\u4e3a\u4e86\u9884\u6d4b\uff09\uff0c\u9ed8\u8ba4\u60c5\u51b5\u4e0b OnRep \u4e0d\u4f1a\u89e6\u53d1\u3002 \u5982\u679c Attribute \u4e0d\u9700\u8981\u590d\u5236\uff08\u5982\uff1aMeta Attribute\uff09\uff0c\u90a3\u4e48 OnRep \u548c GetLifetimeReplicatedProps \u53ef\u4ee5\u8df3\u8fc7\u3002","title":"\u5b9a\u4e49Attributes"},{"location":"UE4/ASC/AttributeSet/#attributeset_2","text":"PreAttributeChange \u5728 AttributeSet \u7684 CurrentValue \u88ab\u6539\u53d8\u4e4b\u524d\u8c03\u7528\uff0c\u4e3b\u8981\u5bf9 NewValue \u8fdb\u884c Clamp \u4fee\u6b63 \u5728\u8fd9\u91cc\u505a\u7684\u4efb\u4f55\u9650\u5236\u90fd\u4e0d\u4f1a\u6c38\u4e45\u6027\u5730\u4fee\u6539 ASC \u4e2d\u7684 Modifier , \u53ea\u4f1a\u4fee\u6539\u67e5\u8be2 Modifier \u7684\u8fd4\u56de\u503c GameplayEffectExecutionCalculations \u548c ModifierMagnitudeCalculations \u8fd9\u79cd\u81ea\u6240\u6709 Modifier \u91cd\u65b0\u8ba1\u7b97 CurrentValue \u7684\u51fd\u6570\u9700\u8981\u518d\u6b21\u6267\u884c Clamp \u64cd\u4f5c PostGameplayEffectExecute \u4ec5\u5728 Instant GE \u5bf9 Attribute \u7684 BaseValue \u4fee\u6539\u4e4b\u540e\u89e6\u53d1 \u5f53 PostGameplayEffectExecute \u88ab\u8c03\u7528\u65f6\uff0c\u5bf9\u5c5e\u6027\u7684\u6539\u53d8\u5df2\u7ecf\u53d1\u751f\uff0c\u4f46\u8fd8\u6ca1\u6709\u590d\u5236\u7ed9\u5ba2\u6237\u7aef\uff0c\u56e0\u6b64\u5728\u6b64\u5904\u8fdb\u884c Clamp \u4e0d\u4f1a\u6267\u884c\u4e24\u6b21\u590d\u5236\uff0c\u5ba2\u6237\u7aef\u53ea\u4f1a\u6536\u5230 Clamp \u540e\u7684\u7ed3\u679c\u3002 class GAMEPLAYABILITIES_API UAttributeSet : public UObject { public: /** * Called just before modifying the value of an attribute. AttributeSet can make additional modifications here. Return true to continue, or false to throw out the modification. * Note this is only called during an 'execute'. E.g., a modification to the 'base value' of an attribute. It is not called during an application of a GameplayEffect, such as a 5 ssecond +10 movement speed buff. */ virtual bool PreGameplayEffectExecute(struct FGameplayEffectModCallbackData &Data) { return true; } /** * Called just before a GameplayEffect is executed to modify the base value of an attribute. No more changes can be made. * Note this is only called during an 'execute'. E.g., a modification to the 'base value' of an attribute. It is not called during an application of a GameplayEffect, such as a 5 ssecond +10 movement speed buff. */ virtual void PostGameplayEffectExecute(const struct FGameplayEffectModCallbackData &Data) { } /** * An \"On Aggregator Change\" type of event could go here, and that could be called when active gameplay effects are added or removed to an attribute aggregator. * It is difficult to give all the information in these cases though - aggregators can change for many reasons: being added, being removed, being modified, having a modifier change, immunity, stacking rules, etc. */ /** * Called just before any modification happens to an attribute. This is lower level than PreAttributeModify/PostAttribute modify. * There is no additional context provided here since anything can trigger this. Executed effects, duration based effects, effects being removed, immunity being applied, stacking rules changing, etc. * This function is meant to enforce things like \"Health = Clamp(Health, 0, MaxHealth)\" and NOT things like \"trigger this extra thing if damage is applied, etc\". * * NewValue is a mutable reference so you are able to clamp the newly applied value as well. */ virtual void PreAttributeChange(const FGameplayAttribute& Attribute, float& NewValue) { } /** * This is called just before any modification happens to an attribute's base value when an attribute aggregator exists. * This function should enforce clamping (presuming you wish to clamp the base value along with the final value in PreAttributeChange) * This function should NOT invoke gameplay related events or callbacks. Do those in PreAttributeChange() which will be called prior to the * final value of the attribute actually changing. */ virtual void PreAttributeBaseChange(const FGameplayAttribute& Attribute, float& NewValue) const { } /** Callback for when an FAggregator is created for an attribute in this set. Allows custom setup of FAggregator::EvaluationMetaData */ virtual void OnAttributeAggregatorCreated(const FGameplayAttribute& Attribute, FAggregator* NewAggregator) const { } };","title":"AttributeSet \u51e0\u4e2a\u91cd\u8981\u7684\u51fd\u6570"},{"location":"UE4/ASC/GameplayEffect/","text":"GameplayEffect # UGameplayEffect # UGameplayEffect \u662f Ability \u4fee\u6539\u5176\u81ea\u8eab\u548c\u5176\u4ed6 Attribute \u548c GameplayTag \u7684\u5bb9\u5668\u3002 GameplayEffect GameplayEffect \u53ea\u662f\u4e00\u4e2a\u5b9a\u4e49\u5355\u4e00\u6e38\u620f\u6548\u679c\u7684\u6570\u636e\u7c7b, \u4e0d\u5e94\u8be5\u5728\u5176\u4e2d\u6dfb\u52a0\u989d\u5916\u7684\u903b\u8f91 GameplayEffect \u901a\u8fc7 Modifier \u548c Execution \u4fee\u6539 Attribute GameplayEffect \u53ef\u4ee5 \u6dfb\u52a0/\u6267\u884c GameplayCue Instant GE \u5c06\u8c03\u7528 GameplayCue \u7684 Execute Duration GE \u6216 Infinite GE \u5c06\u8c03\u7528 GameplayCue \u7684 Add \u548c Remove Instant GE \u4fee\u6539 BaseValue \uff0c\u8c03\u7528 GameplayCue \u7684 Execute Duration GE \u548c Infinite GE \u4fee\u6539 CurrentValue \uff0c\u6267\u884c GameplayCue \u7684 Add \u548c Remove \u53ef\u4ee5\u8bbe\u7f6e Period \u6bcf\u9694 Period \u79d2\uff0c\u5219\u4fee\u6539\u4e00\u6b21 Attributes \u7684 BaseValue \uff0c\u5e76\u8c03\u7528 GameplayCue \u7684 Execute \u76f8\u5f53\u4e8e\u6bcf\u9694 Period \u79d2\uff0c\u6267\u884c\u4e00\u6b21 \u201cInstant\u201d \u7c7b\u578b\u7684\u6548\u679c\uff0c\u76f4\u5230 GameplayEffect \u79fb\u9664\u3002 \u76d1\u542c GameplayEffect \u7684 Add\u548cRemove # ```c++ //\u8bbe\u7f6e\u76d1\u542c AbilitySystemComponent->OnActiveGameplayEffectAddedDelegateToSelf.AddUObject(this, &ARPGCharacterBase::OnGameplayEffectAddedCallback); AbilitySystemComponent->OnAnyGameplayEffectRemovedDelegate().AddUObject(this, &ARPGCharacterBase::OnGameplayEffectRemovedCallback); //\u56de\u8c03\u51fd\u6570 virtual void OnGameplayEffectAddedCallback(UAbilitySystemComponent* Target, const FGameplayEffectSpec& SpecApplied, FActiveGameplayEffectHandle ActiveHandle); virtual void OnGameplayEffectRemovedCallback(const FActiveGameplayEffect& EffectRemoved);","title":"GameplayEffect"},{"location":"UE4/ASC/GameplayEffect/#gameplayeffect","text":"","title":"GameplayEffect"},{"location":"UE4/ASC/GameplayEffect/#ugameplayeffect","text":"UGameplayEffect \u662f Ability \u4fee\u6539\u5176\u81ea\u8eab\u548c\u5176\u4ed6 Attribute \u548c GameplayTag \u7684\u5bb9\u5668\u3002 GameplayEffect GameplayEffect \u53ea\u662f\u4e00\u4e2a\u5b9a\u4e49\u5355\u4e00\u6e38\u620f\u6548\u679c\u7684\u6570\u636e\u7c7b, \u4e0d\u5e94\u8be5\u5728\u5176\u4e2d\u6dfb\u52a0\u989d\u5916\u7684\u903b\u8f91 GameplayEffect \u901a\u8fc7 Modifier \u548c Execution \u4fee\u6539 Attribute GameplayEffect \u53ef\u4ee5 \u6dfb\u52a0/\u6267\u884c GameplayCue Instant GE \u5c06\u8c03\u7528 GameplayCue \u7684 Execute Duration GE \u6216 Infinite GE \u5c06\u8c03\u7528 GameplayCue \u7684 Add \u548c Remove Instant GE \u4fee\u6539 BaseValue \uff0c\u8c03\u7528 GameplayCue \u7684 Execute Duration GE \u548c Infinite GE \u4fee\u6539 CurrentValue \uff0c\u6267\u884c GameplayCue \u7684 Add \u548c Remove \u53ef\u4ee5\u8bbe\u7f6e Period \u6bcf\u9694 Period \u79d2\uff0c\u5219\u4fee\u6539\u4e00\u6b21 Attributes \u7684 BaseValue \uff0c\u5e76\u8c03\u7528 GameplayCue \u7684 Execute \u76f8\u5f53\u4e8e\u6bcf\u9694 Period \u79d2\uff0c\u6267\u884c\u4e00\u6b21 \u201cInstant\u201d \u7c7b\u578b\u7684\u6548\u679c\uff0c\u76f4\u5230 GameplayEffect \u79fb\u9664\u3002","title":"UGameplayEffect"},{"location":"UE4/ASC/GameplayEffect/#gameplayeffect-addremove","text":"```c++ //\u8bbe\u7f6e\u76d1\u542c AbilitySystemComponent->OnActiveGameplayEffectAddedDelegateToSelf.AddUObject(this, &ARPGCharacterBase::OnGameplayEffectAddedCallback); AbilitySystemComponent->OnAnyGameplayEffectRemovedDelegate().AddUObject(this, &ARPGCharacterBase::OnGameplayEffectRemovedCallback); //\u56de\u8c03\u51fd\u6570 virtual void OnGameplayEffectAddedCallback(UAbilitySystemComponent* Target, const FGameplayEffectSpec& SpecApplied, FActiveGameplayEffectHandle ActiveHandle); virtual void OnGameplayEffectRemovedCallback(const FActiveGameplayEffect& EffectRemoved);","title":"\u76d1\u542c GameplayEffect \u7684 Add\u548cRemove"},{"location":"UE4/ASC/GameplayTags/","text":"GameplayTags # FGameplayTag # FGameplayTag \u662f\u4e00\u7cfb\u5217\u5c42\u6b21\u5316\u7684\u540d\u5b57\uff0c\u5982 Parent.Child.Grandchild GameplayTag \u901a\u8fc7 GameplayTagManager \u8fdb\u884c\u6ce8\u518c UAbilitySystemComponent \u5b9e\u73b0\u4e86 IGameplayTagAssetInterface \u63a5\u53e3\u4e2d\u7684\u65b9\u6cd5\u4ee5\u4fbf\u8bbf\u95ee\u5b83\u62e5\u6709\u7684 GameplayTags \u5728C++\u4e2d\u83b7\u53d6GameplayTag\u5bf9\u8c61 FGameplayTag::RequestGameplayTag(FName(\"Your.GameplayTag.Name\")) FGameplayTagContainer # \u591a\u4e2a FGameplayTag \u53ef\u4ee5\u88ab\u5b58\u50a8\u5230 FGameplayTagContainer \u4e2d FGameplayTag \u5b58\u50a8\u5728 FGameplayTagCountContainer \u4e2d\uff0c\u6709\u4e00\u4e2a TagMap \uff0c\u5b58\u50a8\u4e86 GameplayTag \u5b9e\u4f8b\u7684\u6570\u91cf \u4efb\u4f55 HasTag() \u6216 HasMatchingTag() \u6216\u5176\u4ed6\u7c7b\u4f3c\u7684\u65b9\u6cd5\u90fd\u4f1a\u68c0\u67e5 TagMapCount \uff0c\u5982\u679c GameplayTag \u4e0d\u5b58\u5728\u6216\u8005 TagMapCount = 0 \u5c06\u8fd4\u56de false GameplayTagContainer \u4e0e TArray<FGameplayTag> \u5f3a\u70c8\u5efa\u8bae\u4f7f\u7528 GameplayTagContainer \u800c\u4e0d\u662f TArray<FGameplayTag> \uff0c\u56e0\u4e3a GameplayTagContainers \u6709\u4e00\u4e9b\u6781\u5176\u9ad8\u6548\u7684\u51fd\u6570 FGameplayTag \u662f\u6807\u51c6\u7684 FName \uff0c\u5728 FGameplayTagContainers \u4e2d FGameplayTag \u53ef\u4ee5\u88ab\u9ad8\u6548\u7684\u6253\u5305\u5728\u4e00\u8d77\u4ee5\u5b8c\u6210\u7f51\u7edc\u590d\u5236 \u9700\u8981\u5148\u5728\u9879\u76ee\u8bbe\u7f6e\u4e2d \u5f00\u542f Fast Replication \u3002 Fast Replication \u8981\u6c42\u670d\u52a1\u5668\u548c\u5ba2\u6237\u7aef\u62e5\u6709\u76f8\u540c\u7684 GameplayTags \u5217\u8868 \u4e3a\u4e86\u904d\u5386\uff0c GameplayTagContainers \u4e5f\u53ef\u4ee5\u8fd4\u56de\u4e00\u4e2a TArray<FGameplayTag> \u3002 GameplayTagManager # \u5bf9\u4e8e\u83b7\u53d6 GameplayTag \u7684\u7236\u6216\u5b50\u6807\u7b7e\u8fd9\u7c7b\u5904\u7406\uff0c\u53ef\u4ee5\u901a\u8fc7 GameplayTagManager \u4e2d\u7684\u4e00\u7cfb\u5217\u51fd\u6570\u5b8c\u6210\u3002 GameplayTagManager \u5b9e\u9645\u4e0a\u4ee5\u5173\u7cfb\u8282\u70b9\u7684\u65b9\u5f0f\u5b58\u50a8\u4e86 GameplayTags \uff0c \u901f\u5ea6\u4e0a\u8981\u8fdc\u4f18\u4e8e\u5b57\u7b26\u4e32\u7684\u5904\u7406\u548c\u6bd4\u8f83\u3002 GameplayTag \u7f16\u8f91\u5668 # GameplayTag \u9700\u8981\u5728 DefaultGameplayTags.ini \u4e2d\u5b9a\u4e49\u3002 UE4 \u7684\u7f16\u8f91\u5668\u5728\u9879\u76ee\u8bbe\u7f6e\u4e2d\u63d0\u4f9b\u4e86\u4e00\u4e2a\u754c\u9762\u53ef\u4ee5\u8ba9\u5f00\u53d1\u8005\u7ba1\u7406 GameplayTags \u800c\u4e0d\u9700\u8981\u624b\u52a8\u7f16\u8f91 DefaultGameplayTags.ini \u3002 GameplayTag \u7f16\u8f91\u5668\u53ef\u4ee5\u521b\u5efa\u3001\u91cd\u547d\u540d\u3001\u5220\u9664 GameplayTag \uff0c\u4e5f\u53ef\u4ee5\u67e5\u627e GameplayTag \u7684\u5f15\u7528\u3002 \u67e5\u627e GameplayTag \u7684\u5f15\u7528 \u67e5\u627e GameplayTag \u7684\u5f15\u7528\u53ea\u4f1a\u67e5\u627e\u84dd\u56fe\u4e2d\u7684\u5f15\u7528\u3002 GameplayTag \u7684\u91cd\u547d\u540d \u91cd\u547d\u540d GameplayTag \u5c06\u4f1a\u521b\u5efa\u4e00\u4e2a\u91cd\u5b9a\u5411\uff0c\u76f8\u5173\u8d44\u6e90\u4ecd\u7136\u5f15\u7528\u539f\u6765\u7684 GameplayTag \uff0c\u539f\u6765\u7684 GameplayTag \u5c06\u4f1a\u88ab\u5b9a\u5411\u5230\u65b0\u7684 GameplayTag \u3002 \u63a8\u8350\u521b\u5efa\u4e00\u4e2a\u65b0\u7684 GameplayTag , \u7136\u540e\u624b\u52a8\u66f4\u65b0\u6240\u6709\u5f15\u7528\u5230\u8fd9\u4e2a\u65b0 GameplayTag \uff0c\u7136\u540e\u5220\u9664\u65e7\u7684 GameplayTag \uff0c\u8fd9\u6837\u53ef\u4ee5\u907f\u514d\u91cd\u5b9a\u5411\u3002 \u53e6\u5916\uff0c\u5f53\u5f00\u542f Fast Replication \u540e\uff0c GameplayTag \u7f16\u8f91\u5668\u53ef\u914d\u7f6e\u8fdb\u4e00\u6b65\u4f18\u5316 GameplayTags \u7684\u7f51\u7edc\u590d\u5236\u3002 LooseGameplayTags # \u7531 GameplayEffect \u6dfb\u52a0\u7684 GameplayTag \u4f1a\u88ab\u590d\u5236\u3002 ASC \u4e5f\u53ef\u4ee5\u6dfb\u52a0\u4e0d\u4f1a\u88ab\u590d\u5236\u5e76\u4e14\u9700\u8981\u624b\u52a8\u7ba1\u7406\u7684 LooseGameplayTags LooseGameplayTag \u53ef\u4ee5\u4f7f\u7528 UAbilitySystemComponent::AddLooseGameplayTag() \u548c UAbilitySystemComponent::RemoveLooseGameplayTag() GameplayTag \u8fc7\u6ee4 # UPROPERTY(Meta = (Categories = \"XX\")) GameplayTags \u548c GameplayTagContainers \u5c5e\u6027\u6709\u53ef\u9009\u7684 UPROPERTY \u8bf4\u660e\u7b26\uff0c\u53ef\u4ee5\u7528\u6765\u5728\u84dd\u56fe\u4e2d\u5b9e\u73b0\u6807\u7b7e\u7684\u8fc7\u6ee4\uff0c\u4ec5\u5c55\u793a\u51fa\u7236\u6807\u7b7e\u4e3a XX \u7684 GameplayTags \u3002 UFUNCTION(Meta = (GameplayTagFilter = \"XX\")) \u5f53\u628a GameplayTag \u5f53\u4f5c\u51fd\u6570\u7684\u53c2\u6570\u65f6\uff0c\u53ef\u4ee5\u901a\u8fc7 Meta = (GameplayTagFilter = XX) \u5b8c\u6210\u8fc7\u6ee4\u3002 GameplayTagContainer \u53c2\u6570\u4e0d\u80fd\u8fc7\u6ee4 \u76d1\u542c FGameplayTag \u7684\u53d8\u5316 # ASC \u53ef\u4ee5\u4f7f\u7528\u679a\u4e3e EGameplayTagEventType \u6765\u6ce8\u518c\u4ee3\u7406\u76d1\u542c GameplayTag \u7684\u53d8\u5316\u3002 EGameplayTagEventType NewOrRemoved \uff1a Event only happens when tag is new or completely removed AnyCountChange \uff1a Event happens any time tag \u201ccount\u201d changes AbilitySystemComponent->RegisterGameplayTagEvent(FGameplayTag::RequestGameplayTag(FName(\"State.Debuff.Stun\")), EGameplayTagEventType::NewOrRemoved).AddUObject(this, &AGDPlayerState::StunTagChanged); virtual void StunTagChanged(const FGameplayTag CallbackTag, int32 NewCount);","title":"GameplayTags"},{"location":"UE4/ASC/GameplayTags/#gameplaytags","text":"","title":"GameplayTags"},{"location":"UE4/ASC/GameplayTags/#fgameplaytag","text":"FGameplayTag \u662f\u4e00\u7cfb\u5217\u5c42\u6b21\u5316\u7684\u540d\u5b57\uff0c\u5982 Parent.Child.Grandchild GameplayTag \u901a\u8fc7 GameplayTagManager \u8fdb\u884c\u6ce8\u518c UAbilitySystemComponent \u5b9e\u73b0\u4e86 IGameplayTagAssetInterface \u63a5\u53e3\u4e2d\u7684\u65b9\u6cd5\u4ee5\u4fbf\u8bbf\u95ee\u5b83\u62e5\u6709\u7684 GameplayTags \u5728C++\u4e2d\u83b7\u53d6GameplayTag\u5bf9\u8c61 FGameplayTag::RequestGameplayTag(FName(\"Your.GameplayTag.Name\"))","title":"FGameplayTag"},{"location":"UE4/ASC/GameplayTags/#fgameplaytagcontainer","text":"\u591a\u4e2a FGameplayTag \u53ef\u4ee5\u88ab\u5b58\u50a8\u5230 FGameplayTagContainer \u4e2d FGameplayTag \u5b58\u50a8\u5728 FGameplayTagCountContainer \u4e2d\uff0c\u6709\u4e00\u4e2a TagMap \uff0c\u5b58\u50a8\u4e86 GameplayTag \u5b9e\u4f8b\u7684\u6570\u91cf \u4efb\u4f55 HasTag() \u6216 HasMatchingTag() \u6216\u5176\u4ed6\u7c7b\u4f3c\u7684\u65b9\u6cd5\u90fd\u4f1a\u68c0\u67e5 TagMapCount \uff0c\u5982\u679c GameplayTag \u4e0d\u5b58\u5728\u6216\u8005 TagMapCount = 0 \u5c06\u8fd4\u56de false GameplayTagContainer \u4e0e TArray<FGameplayTag> \u5f3a\u70c8\u5efa\u8bae\u4f7f\u7528 GameplayTagContainer \u800c\u4e0d\u662f TArray<FGameplayTag> \uff0c\u56e0\u4e3a GameplayTagContainers \u6709\u4e00\u4e9b\u6781\u5176\u9ad8\u6548\u7684\u51fd\u6570 FGameplayTag \u662f\u6807\u51c6\u7684 FName \uff0c\u5728 FGameplayTagContainers \u4e2d FGameplayTag \u53ef\u4ee5\u88ab\u9ad8\u6548\u7684\u6253\u5305\u5728\u4e00\u8d77\u4ee5\u5b8c\u6210\u7f51\u7edc\u590d\u5236 \u9700\u8981\u5148\u5728\u9879\u76ee\u8bbe\u7f6e\u4e2d \u5f00\u542f Fast Replication \u3002 Fast Replication \u8981\u6c42\u670d\u52a1\u5668\u548c\u5ba2\u6237\u7aef\u62e5\u6709\u76f8\u540c\u7684 GameplayTags \u5217\u8868 \u4e3a\u4e86\u904d\u5386\uff0c GameplayTagContainers \u4e5f\u53ef\u4ee5\u8fd4\u56de\u4e00\u4e2a TArray<FGameplayTag> \u3002","title":"FGameplayTagContainer"},{"location":"UE4/ASC/GameplayTags/#gameplaytagmanager","text":"\u5bf9\u4e8e\u83b7\u53d6 GameplayTag \u7684\u7236\u6216\u5b50\u6807\u7b7e\u8fd9\u7c7b\u5904\u7406\uff0c\u53ef\u4ee5\u901a\u8fc7 GameplayTagManager \u4e2d\u7684\u4e00\u7cfb\u5217\u51fd\u6570\u5b8c\u6210\u3002 GameplayTagManager \u5b9e\u9645\u4e0a\u4ee5\u5173\u7cfb\u8282\u70b9\u7684\u65b9\u5f0f\u5b58\u50a8\u4e86 GameplayTags \uff0c \u901f\u5ea6\u4e0a\u8981\u8fdc\u4f18\u4e8e\u5b57\u7b26\u4e32\u7684\u5904\u7406\u548c\u6bd4\u8f83\u3002","title":"GameplayTagManager"},{"location":"UE4/ASC/GameplayTags/#gameplaytag","text":"GameplayTag \u9700\u8981\u5728 DefaultGameplayTags.ini \u4e2d\u5b9a\u4e49\u3002 UE4 \u7684\u7f16\u8f91\u5668\u5728\u9879\u76ee\u8bbe\u7f6e\u4e2d\u63d0\u4f9b\u4e86\u4e00\u4e2a\u754c\u9762\u53ef\u4ee5\u8ba9\u5f00\u53d1\u8005\u7ba1\u7406 GameplayTags \u800c\u4e0d\u9700\u8981\u624b\u52a8\u7f16\u8f91 DefaultGameplayTags.ini \u3002 GameplayTag \u7f16\u8f91\u5668\u53ef\u4ee5\u521b\u5efa\u3001\u91cd\u547d\u540d\u3001\u5220\u9664 GameplayTag \uff0c\u4e5f\u53ef\u4ee5\u67e5\u627e GameplayTag \u7684\u5f15\u7528\u3002 \u67e5\u627e GameplayTag \u7684\u5f15\u7528 \u67e5\u627e GameplayTag \u7684\u5f15\u7528\u53ea\u4f1a\u67e5\u627e\u84dd\u56fe\u4e2d\u7684\u5f15\u7528\u3002 GameplayTag \u7684\u91cd\u547d\u540d \u91cd\u547d\u540d GameplayTag \u5c06\u4f1a\u521b\u5efa\u4e00\u4e2a\u91cd\u5b9a\u5411\uff0c\u76f8\u5173\u8d44\u6e90\u4ecd\u7136\u5f15\u7528\u539f\u6765\u7684 GameplayTag \uff0c\u539f\u6765\u7684 GameplayTag \u5c06\u4f1a\u88ab\u5b9a\u5411\u5230\u65b0\u7684 GameplayTag \u3002 \u63a8\u8350\u521b\u5efa\u4e00\u4e2a\u65b0\u7684 GameplayTag , \u7136\u540e\u624b\u52a8\u66f4\u65b0\u6240\u6709\u5f15\u7528\u5230\u8fd9\u4e2a\u65b0 GameplayTag \uff0c\u7136\u540e\u5220\u9664\u65e7\u7684 GameplayTag \uff0c\u8fd9\u6837\u53ef\u4ee5\u907f\u514d\u91cd\u5b9a\u5411\u3002 \u53e6\u5916\uff0c\u5f53\u5f00\u542f Fast Replication \u540e\uff0c GameplayTag \u7f16\u8f91\u5668\u53ef\u914d\u7f6e\u8fdb\u4e00\u6b65\u4f18\u5316 GameplayTags \u7684\u7f51\u7edc\u590d\u5236\u3002","title":"GameplayTag \u7f16\u8f91\u5668"},{"location":"UE4/ASC/GameplayTags/#loosegameplaytags","text":"\u7531 GameplayEffect \u6dfb\u52a0\u7684 GameplayTag \u4f1a\u88ab\u590d\u5236\u3002 ASC \u4e5f\u53ef\u4ee5\u6dfb\u52a0\u4e0d\u4f1a\u88ab\u590d\u5236\u5e76\u4e14\u9700\u8981\u624b\u52a8\u7ba1\u7406\u7684 LooseGameplayTags LooseGameplayTag \u53ef\u4ee5\u4f7f\u7528 UAbilitySystemComponent::AddLooseGameplayTag() \u548c UAbilitySystemComponent::RemoveLooseGameplayTag()","title":"LooseGameplayTags"},{"location":"UE4/ASC/GameplayTags/#gameplaytag_1","text":"UPROPERTY(Meta = (Categories = \"XX\")) GameplayTags \u548c GameplayTagContainers \u5c5e\u6027\u6709\u53ef\u9009\u7684 UPROPERTY \u8bf4\u660e\u7b26\uff0c\u53ef\u4ee5\u7528\u6765\u5728\u84dd\u56fe\u4e2d\u5b9e\u73b0\u6807\u7b7e\u7684\u8fc7\u6ee4\uff0c\u4ec5\u5c55\u793a\u51fa\u7236\u6807\u7b7e\u4e3a XX \u7684 GameplayTags \u3002 UFUNCTION(Meta = (GameplayTagFilter = \"XX\")) \u5f53\u628a GameplayTag \u5f53\u4f5c\u51fd\u6570\u7684\u53c2\u6570\u65f6\uff0c\u53ef\u4ee5\u901a\u8fc7 Meta = (GameplayTagFilter = XX) \u5b8c\u6210\u8fc7\u6ee4\u3002 GameplayTagContainer \u53c2\u6570\u4e0d\u80fd\u8fc7\u6ee4","title":"GameplayTag \u8fc7\u6ee4"},{"location":"UE4/ASC/GameplayTags/#fgameplaytag_1","text":"ASC \u53ef\u4ee5\u4f7f\u7528\u679a\u4e3e EGameplayTagEventType \u6765\u6ce8\u518c\u4ee3\u7406\u76d1\u542c GameplayTag \u7684\u53d8\u5316\u3002 EGameplayTagEventType NewOrRemoved \uff1a Event only happens when tag is new or completely removed AnyCountChange \uff1a Event happens any time tag \u201ccount\u201d changes AbilitySystemComponent->RegisterGameplayTagEvent(FGameplayTag::RequestGameplayTag(FName(\"State.Debuff.Stun\")), EGameplayTagEventType::NewOrRemoved).AddUObject(this, &AGDPlayerState::StunTagChanged); virtual void StunTagChanged(const FGameplayTag CallbackTag, int32 NewCount);","title":"\u76d1\u542c FGameplayTag \u7684\u53d8\u5316"},{"location":"UE4/ASC/%E5%90%AF%E7%94%A8GAS/","text":"\u542f\u7528GAS # \u4f7f\u7528GAS\u7684\u57fa\u672c\u6b65\u9aa4\uff1a \u5728\u865a\u5e7b\u5f15\u64ce\u7f16\u8f91\u5668\u4e2d\u542f\u7528 GameplayAbilitySystem \u63d2\u4ef6 \u5728[ProjectName].Build.cs\u6587\u4ef6\u4e2d\u7684 PrivateDependencyModuleNames \uff0c\u6dfb\u52a0\u4f9d\u8d56\u6a21\u5757 GameplayTags GameplayAbilities GameplayTasks // Copyright Epic Games, Inc. All Rights Reserved. using UnrealBuildTool; public class GASTest : ModuleRules { public GASTest(ReadOnlyTargetRules Target) : base(Target) { PCHUsage = PCHUsageMode.UseExplicitOrSharedPCHs; PublicDependencyModuleNames.AddRange(new string[] { \"Core\", \"CoreUObject\", \"Engine\", \"InputCore\", \"HeadMountedDisplay\" }); PrivateDependencyModuleNames.AddRange(new string[] { \"GameplayAbilities\", \"GameplayTags\", \"GameplayTasks\" }); } } UAbilitySystemGlobals::InitGlobalData \u4ece4.24\u5f00\u59cb\uff0c\u5fc5\u987b\u8981\u8c03\u7528 UAbilitySystemGlobals::Get().InitGlobalData() \u624d\u80fd\u4f7f\u7528 TargetData\u3002","title":"\u542f\u7528GAS"},{"location":"UE4/ASC/%E5%90%AF%E7%94%A8GAS/#gas","text":"\u4f7f\u7528GAS\u7684\u57fa\u672c\u6b65\u9aa4\uff1a \u5728\u865a\u5e7b\u5f15\u64ce\u7f16\u8f91\u5668\u4e2d\u542f\u7528 GameplayAbilitySystem \u63d2\u4ef6 \u5728[ProjectName].Build.cs\u6587\u4ef6\u4e2d\u7684 PrivateDependencyModuleNames \uff0c\u6dfb\u52a0\u4f9d\u8d56\u6a21\u5757 GameplayTags GameplayAbilities GameplayTasks // Copyright Epic Games, Inc. All Rights Reserved. using UnrealBuildTool; public class GASTest : ModuleRules { public GASTest(ReadOnlyTargetRules Target) : base(Target) { PCHUsage = PCHUsageMode.UseExplicitOrSharedPCHs; PublicDependencyModuleNames.AddRange(new string[] { \"Core\", \"CoreUObject\", \"Engine\", \"InputCore\", \"HeadMountedDisplay\" }); PrivateDependencyModuleNames.AddRange(new string[] { \"GameplayAbilities\", \"GameplayTags\", \"GameplayTasks\" }); } } UAbilitySystemGlobals::InitGlobalData \u4ece4.24\u5f00\u59cb\uff0c\u5fc5\u987b\u8981\u8c03\u7528 UAbilitySystemGlobals::Get().InitGlobalData() \u624d\u80fd\u4f7f\u7528 TargetData\u3002","title":"\u542f\u7528GAS"}]}