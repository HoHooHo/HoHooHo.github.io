{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"\u68a6\u4e4b\u658b","title":"\u9996\u9875"},{"location":"Windows%E9%83%A8%E7%BD%B2mkdocs/","text":"Windows \u90e8\u7f72 mkdocs # \u5b89\u88c5 Python # \u4f7f\u7528 python3.x \u7248\u672c\uff0c\u786e\u4fdd\u52fe\u9009\u4e86 \u5b89\u88c5 pip \u5b89\u88c5 mkdocs # cmd \u6267\u884c\u547d\u4ee4 pip install mkdocs \u5b89\u88c5 mkdocs-bootswatch \u4e3b\u9898 # cmd \u6267\u884c\u547d\u4ee4 pip install mkdocs-bootswatch \u5b89\u88c5 markdown_katex \u6570\u5b66\u51fd\u6570\u6e32\u67d3\u5e93 # cmd \u6267\u884c\u547d\u4ee4 pip install markdown_katex pip install python-markdown-math \u542f\u52a8 # cmd \u6267\u884c\u547d\u4ee4 mkdocs new mkdocs serve mkdocs gh-deploy \u90e8\u7f72\u5230 Github # - markdown_katex: no_inline_svg: True insert_fonts_css: True - admonition","title":"Windows \u90e8\u7f72 mkdocs"},{"location":"Windows%E9%83%A8%E7%BD%B2mkdocs/#windows-mkdocs","text":"","title":"Windows \u90e8\u7f72 mkdocs"},{"location":"Windows%E9%83%A8%E7%BD%B2mkdocs/#python","text":"\u4f7f\u7528 python3.x \u7248\u672c\uff0c\u786e\u4fdd\u52fe\u9009\u4e86 \u5b89\u88c5 pip","title":"\u5b89\u88c5 Python"},{"location":"Windows%E9%83%A8%E7%BD%B2mkdocs/#mkdocs","text":"cmd \u6267\u884c\u547d\u4ee4 pip install mkdocs","title":"\u5b89\u88c5 mkdocs"},{"location":"Windows%E9%83%A8%E7%BD%B2mkdocs/#mkdocs-bootswatch","text":"cmd \u6267\u884c\u547d\u4ee4 pip install mkdocs-bootswatch","title":"\u5b89\u88c5 mkdocs-bootswatch \u4e3b\u9898"},{"location":"Windows%E9%83%A8%E7%BD%B2mkdocs/#markdown_katex","text":"cmd \u6267\u884c\u547d\u4ee4 pip install markdown_katex pip install python-markdown-math","title":"\u5b89\u88c5 markdown_katex \u6570\u5b66\u51fd\u6570\u6e32\u67d3\u5e93"},{"location":"Windows%E9%83%A8%E7%BD%B2mkdocs/#_1","text":"cmd \u6267\u884c\u547d\u4ee4 mkdocs new mkdocs serve mkdocs gh-deploy","title":"\u542f\u52a8"},{"location":"Windows%E9%83%A8%E7%BD%B2mkdocs/#github","text":"- markdown_katex: no_inline_svg: True insert_fonts_css: True - admonition","title":"\u90e8\u7f72\u5230 Github"},{"location":"markdown/","text":"Markdown \u6807\u9898 # # \u4e00\u7ea7\u6807\u9898 ## \u4e8c\u7ea7\u6807\u9898 ### \u4e09\u7ea7\u6807\u9898 #### \u56db\u7ea7\u6807\u9898 ##### \u4e94\u7ea7\u6807\u9898 ###### \u516d\u7ea7\u6807\u9898 Markdown \u6bb5\u843d # \u7ea2\u8272\u6587\u5b57 \u7eff\u8272\u6587\u5b57 \u84dd\u8272\u6587\u5b57 \u9ec4\u8272\u6587\u5b57 \u659c\u4f53\u6587\u672c \u659c\u4f53\u6587\u672c \u7c97\u4f53\u6587\u672c \u7c97\u4f53\u6587\u672c \u7c97\u659c\u4f53\u6587\u672c \u7c97\u659c\u4f53\u6587\u672c \u5206\u5272\u7ebf \u6d4b\u8bd5\u6587\u672c ~~\u6d4b\u8bd5\u6587\u672c~~ \u5e26\u4e0b\u5212\u7ebf\u6587\u672c Markdown \u5217\u8868 # \u65e0\u5e8f\u5217\u8868\u4f7f\u7528\u661f\u53f7(*)\u3001\u52a0\u53f7(+)\u6216\u662f\u51cf\u53f7(-)\u4f5c\u4e3a\u5217\u8868\u6807\u8bb0\uff0c\u8fd9\u4e9b\u6807\u8bb0\u540e\u9762\u8981\u6dfb\u52a0\u4e00\u4e2a\u7a7a\u683c\uff0c\u7136\u540e\u518d\u586b\u5199\u5185\u5bb9\u3002\u6709\u5e8f\u5217\u8868\u4f7f\u7528\u6570\u5b57\u5e76\u52a0\u4e0a . \u53f7\u6765\u8868\u793a \u7b2c\u4e00\u9879 \u7b2c\u4e8c\u9879 \u7b2c\u4e09\u9879 \u7b2c\u4e00\u9879 \u7b2c\u4e8c\u9879 \u7b2c\u4e09\u9879 \u7b2c\u4e00\u9879 \u7b2c\u4e8c\u9879 \u7b2c\u4e09\u9879 \u7b2c\u4e00\u9879 \u7b2c\u4e8c\u9879 \u7b2c\u4e09\u9879 \u5217\u8868\u5d4c\u5957\u53ea\u9700\u5728\u5b50\u5217\u8868\u4e2d\u7684\u9009\u9879\u524d\u9762\u6dfb\u52a0\u56db\u4e2a\u7a7a\u683c\u5373\u53ef\uff1a \u7b2c\u4e00\u9879\uff1a \u7b2c\u4e00\u9879\u5d4c\u5957\u7684\u7b2c\u4e00\u4e2a\u5143\u7d20 \u7b2c\u4e00\u9879\u5d4c\u5957\u7684\u7b2c\u4e8c\u4e2a\u5143\u7d20 \u7b2c\u4e8c\u9879\uff1a \u7b2c\u4e8c\u9879\u5d4c\u5957\u7684\u7b2c\u4e00\u4e2a\u5143\u7d20 \u7b2c\u4e8c\u9879\u5d4c\u5957\u7684\u7b2c\u4e8c\u4e2a\u5143\u7d20 Markdown \u533a\u5757 # \u533a\u5757\u5f15\u7528 \u83dc\u9e1f\u6559\u7a0b \u5b66\u7684\u4e0d\u4ec5\u662f\u6280\u672f\u66f4\u662f\u68a6\u60f3 \u6700\u5916\u5c42 \u7b2c\u4e00\u5c42\u5d4c\u5957 \u7b2c\u4e8c\u5c42\u5d4c\u5957 Markdown \u4ee3\u7801 # printf() \u51fd\u6570 int a = 0; int a = 0; $(document).ready(function () { alert('RUNOOB'); }); Markdown \u94fe\u63a5 # \u94fe\u63a5\u4f7f\u7528\u65b9\u6cd5\u5982\u4e0b\uff1a [\u94fe\u63a5\u540d\u79f0](\u94fe\u63a5\u5730\u5740) \u6216\u8005 <\u94fe\u63a5\u5730\u5740> Markdown \u56fe\u7247 # Markdown \u8868\u683c # Markdown \u5236\u4f5c\u8868\u683c\u4f7f\u7528 | \u6765\u5206\u9694\u4e0d\u540c\u7684\u5355\u5143\u683c\uff0c\u4f7f\u7528 - \u6765\u5206\u9694\u8868\u5934\u548c\u5176\u4ed6\u884c\u3002 \u6211\u4eec\u53ef\u4ee5\u8bbe\u7f6e\u8868\u683c\u7684\u5bf9\u9f50\u65b9\u5f0f\uff1a -: \u8bbe\u7f6e\u5185\u5bb9\u548c\u6807\u9898\u680f\u5c45\u53f3\u5bf9\u9f50\u3002 :- \u8bbe\u7f6e\u5185\u5bb9\u548c\u6807\u9898\u680f\u5c45\u5de6\u5bf9\u9f50\u3002 :-: \u8bbe\u7f6e\u5185\u5bb9\u548c\u6807\u9898\u680f\u5c45\u4e2d\u5bf9\u9f50\u3002 \u8868\u5934 \u8868\u5934 \u5355\u5143\u683c \u5355\u5143\u683c \u5355\u5143\u683c \u5355\u5143\u683c \u5de6\u5bf9\u9f50 \u53f3\u5bf9\u9f50 \u5c45\u4e2d\u5bf9\u9f50 \u5355\u5143\u683c \u5355\u5143\u683c \u5355\u5143\u683c \u5355\u5143\u683c \u5355\u5143\u683c \u5355\u5143\u683c Markdown \u9ad8\u7ea7\u6280\u5de7 # \u652f\u6301\u7684 HTML \u5143\u7d20\uff0c\u4e0d\u5728 Markdown \u6db5\u76d6\u8303\u56f4\u4e4b\u5185\u7684\u6807\u7b7e\uff0c\u90fd\u53ef\u4ee5\u76f4\u63a5\u5728\u6587\u6863\u91cc\u9762\u7528 HTML \u64b0\u5199\u3002 \u76ee\u524d\u652f\u6301\u7684 HTML \u5143\u7d20\u6709\uff1a<kbd> <b> <i> <em> <sup> <sub> <br>\u7b49 \u4f7f\u7528 Ctrl + Alt + Del \u91cd\u542f\u7535\u8111 \u652f\u6301\u8f6c\u4e49\u5b57\u7b26 \u6587\u672c\u52a0\u7c97 ** \u6b63\u5e38\u663e\u793a\u661f\u53f7 ** Markdown \u652f\u6301\u4ee5\u4e0b\u8fd9\u4e9b\u7b26\u53f7\u524d\u9762\u52a0\u4e0a\u53cd\u659c\u6760\u6765\u5e2e\u52a9\u63d2\u5165\u666e\u901a\u7684\u7b26\u53f7\uff1a \\ \u53cd\u659c\u7ebf ` \u53cd\u5f15\u53f7 * \u661f\u53f7 _ \u4e0b\u5212\u7ebf {} \u82b1\u62ec\u53f7 [] \u65b9\u62ec\u53f7 () \u5c0f\u62ec\u53f7 # \u4e95\u5b57\u53f7 + \u52a0\u53f7 - \u51cf\u53f7 . \u82f1\u6587\u53e5\u70b9 ! \u611f\u53f9\u53f7 Markdown \u6570\u5b66\u516c\u5f0f # \u5d4c\u5165\u4e86Katex\u7684\u8bdd\u53ef\u4ee5\u4f7f\u7528\u6570\u5b66\u516c\u5f0f f(x) = \\int_{-\\infty}^\\infty \\hat f(\\xi)\\,e^{2 \\pi i \\xi x} \\,d\\xi \\bar{v} = \\begin{pmatrix} \\color{red}x \\\\ \\color{green}y \\\\ \\color{blue}z \\end{pmatrix} https://katex.org/docs/supported.html https://katex.org/docs/support_table.html Markdown \u65b9\u6846 # summary \"!!! summary \"summary\"\" example \"!!! example \"example\"\" quote \"!!! quote \"quote\"\" tip \"!!! tip \"tip\"\" info \"!!! info \"info\"\" success \"!!! success \"success\"\" help \"!!! help \"help\"\" attention \"!!! attention \"attention\"\" warning \"!!! warning \"warning\"\" fail \"!!! fail \"fail\"\" danger \"!!! danger \"danger\"\" error \"!!! error \"error\"\" bug \"!!! bug \"bug\"\"","title":"markdown\u8bed\u6cd5"},{"location":"markdown/#markdown","text":"# \u4e00\u7ea7\u6807\u9898 ## \u4e8c\u7ea7\u6807\u9898 ### \u4e09\u7ea7\u6807\u9898 #### \u56db\u7ea7\u6807\u9898 ##### \u4e94\u7ea7\u6807\u9898 ###### \u516d\u7ea7\u6807\u9898","title":"Markdown \u6807\u9898"},{"location":"markdown/#markdown_1","text":"\u7ea2\u8272\u6587\u5b57 \u7eff\u8272\u6587\u5b57 \u84dd\u8272\u6587\u5b57 \u9ec4\u8272\u6587\u5b57 \u659c\u4f53\u6587\u672c \u659c\u4f53\u6587\u672c \u7c97\u4f53\u6587\u672c \u7c97\u4f53\u6587\u672c \u7c97\u659c\u4f53\u6587\u672c \u7c97\u659c\u4f53\u6587\u672c \u5206\u5272\u7ebf \u6d4b\u8bd5\u6587\u672c ~~\u6d4b\u8bd5\u6587\u672c~~ \u5e26\u4e0b\u5212\u7ebf\u6587\u672c","title":"Markdown \u6bb5\u843d"},{"location":"markdown/#markdown_2","text":"\u65e0\u5e8f\u5217\u8868\u4f7f\u7528\u661f\u53f7(*)\u3001\u52a0\u53f7(+)\u6216\u662f\u51cf\u53f7(-)\u4f5c\u4e3a\u5217\u8868\u6807\u8bb0\uff0c\u8fd9\u4e9b\u6807\u8bb0\u540e\u9762\u8981\u6dfb\u52a0\u4e00\u4e2a\u7a7a\u683c\uff0c\u7136\u540e\u518d\u586b\u5199\u5185\u5bb9\u3002\u6709\u5e8f\u5217\u8868\u4f7f\u7528\u6570\u5b57\u5e76\u52a0\u4e0a . \u53f7\u6765\u8868\u793a \u7b2c\u4e00\u9879 \u7b2c\u4e8c\u9879 \u7b2c\u4e09\u9879 \u7b2c\u4e00\u9879 \u7b2c\u4e8c\u9879 \u7b2c\u4e09\u9879 \u7b2c\u4e00\u9879 \u7b2c\u4e8c\u9879 \u7b2c\u4e09\u9879 \u7b2c\u4e00\u9879 \u7b2c\u4e8c\u9879 \u7b2c\u4e09\u9879 \u5217\u8868\u5d4c\u5957\u53ea\u9700\u5728\u5b50\u5217\u8868\u4e2d\u7684\u9009\u9879\u524d\u9762\u6dfb\u52a0\u56db\u4e2a\u7a7a\u683c\u5373\u53ef\uff1a \u7b2c\u4e00\u9879\uff1a \u7b2c\u4e00\u9879\u5d4c\u5957\u7684\u7b2c\u4e00\u4e2a\u5143\u7d20 \u7b2c\u4e00\u9879\u5d4c\u5957\u7684\u7b2c\u4e8c\u4e2a\u5143\u7d20 \u7b2c\u4e8c\u9879\uff1a \u7b2c\u4e8c\u9879\u5d4c\u5957\u7684\u7b2c\u4e00\u4e2a\u5143\u7d20 \u7b2c\u4e8c\u9879\u5d4c\u5957\u7684\u7b2c\u4e8c\u4e2a\u5143\u7d20","title":"Markdown \u5217\u8868"},{"location":"markdown/#markdown_3","text":"\u533a\u5757\u5f15\u7528 \u83dc\u9e1f\u6559\u7a0b \u5b66\u7684\u4e0d\u4ec5\u662f\u6280\u672f\u66f4\u662f\u68a6\u60f3 \u6700\u5916\u5c42 \u7b2c\u4e00\u5c42\u5d4c\u5957 \u7b2c\u4e8c\u5c42\u5d4c\u5957","title":"Markdown \u533a\u5757"},{"location":"markdown/#markdown_4","text":"printf() \u51fd\u6570 int a = 0; int a = 0; $(document).ready(function () { alert('RUNOOB'); });","title":"Markdown \u4ee3\u7801"},{"location":"markdown/#markdown_5","text":"\u94fe\u63a5\u4f7f\u7528\u65b9\u6cd5\u5982\u4e0b\uff1a [\u94fe\u63a5\u540d\u79f0](\u94fe\u63a5\u5730\u5740) \u6216\u8005 <\u94fe\u63a5\u5730\u5740>","title":"Markdown \u94fe\u63a5"},{"location":"markdown/#markdown_6","text":"","title":"Markdown \u56fe\u7247"},{"location":"markdown/#markdown_7","text":"Markdown \u5236\u4f5c\u8868\u683c\u4f7f\u7528 | \u6765\u5206\u9694\u4e0d\u540c\u7684\u5355\u5143\u683c\uff0c\u4f7f\u7528 - \u6765\u5206\u9694\u8868\u5934\u548c\u5176\u4ed6\u884c\u3002 \u6211\u4eec\u53ef\u4ee5\u8bbe\u7f6e\u8868\u683c\u7684\u5bf9\u9f50\u65b9\u5f0f\uff1a -: \u8bbe\u7f6e\u5185\u5bb9\u548c\u6807\u9898\u680f\u5c45\u53f3\u5bf9\u9f50\u3002 :- \u8bbe\u7f6e\u5185\u5bb9\u548c\u6807\u9898\u680f\u5c45\u5de6\u5bf9\u9f50\u3002 :-: \u8bbe\u7f6e\u5185\u5bb9\u548c\u6807\u9898\u680f\u5c45\u4e2d\u5bf9\u9f50\u3002 \u8868\u5934 \u8868\u5934 \u5355\u5143\u683c \u5355\u5143\u683c \u5355\u5143\u683c \u5355\u5143\u683c \u5de6\u5bf9\u9f50 \u53f3\u5bf9\u9f50 \u5c45\u4e2d\u5bf9\u9f50 \u5355\u5143\u683c \u5355\u5143\u683c \u5355\u5143\u683c \u5355\u5143\u683c \u5355\u5143\u683c \u5355\u5143\u683c","title":"Markdown \u8868\u683c"},{"location":"markdown/#markdown_8","text":"\u652f\u6301\u7684 HTML \u5143\u7d20\uff0c\u4e0d\u5728 Markdown \u6db5\u76d6\u8303\u56f4\u4e4b\u5185\u7684\u6807\u7b7e\uff0c\u90fd\u53ef\u4ee5\u76f4\u63a5\u5728\u6587\u6863\u91cc\u9762\u7528 HTML \u64b0\u5199\u3002 \u76ee\u524d\u652f\u6301\u7684 HTML \u5143\u7d20\u6709\uff1a<kbd> <b> <i> <em> <sup> <sub> <br>\u7b49 \u4f7f\u7528 Ctrl + Alt + Del \u91cd\u542f\u7535\u8111 \u652f\u6301\u8f6c\u4e49\u5b57\u7b26 \u6587\u672c\u52a0\u7c97 ** \u6b63\u5e38\u663e\u793a\u661f\u53f7 ** Markdown \u652f\u6301\u4ee5\u4e0b\u8fd9\u4e9b\u7b26\u53f7\u524d\u9762\u52a0\u4e0a\u53cd\u659c\u6760\u6765\u5e2e\u52a9\u63d2\u5165\u666e\u901a\u7684\u7b26\u53f7\uff1a \\ \u53cd\u659c\u7ebf ` \u53cd\u5f15\u53f7 * \u661f\u53f7 _ \u4e0b\u5212\u7ebf {} \u82b1\u62ec\u53f7 [] \u65b9\u62ec\u53f7 () \u5c0f\u62ec\u53f7 # \u4e95\u5b57\u53f7 + \u52a0\u53f7 - \u51cf\u53f7 . \u82f1\u6587\u53e5\u70b9 ! \u611f\u53f9\u53f7","title":"Markdown \u9ad8\u7ea7\u6280\u5de7"},{"location":"markdown/#markdown_9","text":"\u5d4c\u5165\u4e86Katex\u7684\u8bdd\u53ef\u4ee5\u4f7f\u7528\u6570\u5b66\u516c\u5f0f f(x) = \\int_{-\\infty}^\\infty \\hat f(\\xi)\\,e^{2 \\pi i \\xi x} \\,d\\xi \\bar{v} = \\begin{pmatrix} \\color{red}x \\\\ \\color{green}y \\\\ \\color{blue}z \\end{pmatrix} https://katex.org/docs/supported.html https://katex.org/docs/support_table.html","title":"Markdown \u6570\u5b66\u516c\u5f0f"},{"location":"markdown/#markdown_10","text":"summary \"!!! summary \"summary\"\" example \"!!! example \"example\"\" quote \"!!! quote \"quote\"\" tip \"!!! tip \"tip\"\" info \"!!! info \"info\"\" success \"!!! success \"success\"\" help \"!!! help \"help\"\" attention \"!!! attention \"attention\"\" warning \"!!! warning \"warning\"\" fail \"!!! fail \"fail\"\" danger \"!!! danger \"danger\"\" error \"!!! error \"error\"\" bug \"!!! bug \"bug\"\"","title":"Markdown \u65b9\u6846"},{"location":"Interview/C%2B%2B%E5%9F%BA%E7%A1%80/","text":"\u6784\u9020\u51fd\u6570\u548c\u6790\u6784\u51fd\u6570\u7684\u8c03\u7528\u987a\u5e8f # \u6784\u9020\u51fd\u6570 \u57fa\u7c7b\u7684\u6784\u9020\u51fd\u6570->\u6d3e\u751f\u7c7b\u7684\u6784\u9020\u51fd\u6570 \u6790\u6784\u51fd\u6570 \u6d3e\u751f\u7c7b\u7684\u6790\u6784\u9020\u51fd\u6570->\u57fa\u7c7b\u7684\u6790\u6784\u51fd\u6570 \u6784\u9020\u51fd\u6570\u548c\u6790\u6784\u51fd\u6570\u80fd\u5426\u4e3a\u865a\u51fd\u6570\uff1f \u4e3a\u4ec0\u4e48\uff1f # \u6784\u9020\u51fd\u6570\u4e0d\u80fd\u58f0\u660e\u4e3a\u865a\u51fd\u6570 \u865a\u51fd\u6570\u662f\u5728\u8fd0\u884c\u65f6\u901a\u8fc7\u865a\u51fd\u6570\u8868\u6765\u786e\u5b9a\u5176\u7c7b\u578b\u7684\uff0c\u865a\u51fd\u6570\u8868\u5b58\u653e\u5728\u5bf9\u8c61\u7684\u5185\u5b58\u7a7a\u95f4\u4e2d\u3002\u5728\u521b\u5efa\u4e00\u4e2a\u5bf9\u8c61\u65f6\uff0c\u7531\u4e8e\u5bf9\u8c61\u8fd8\u672a\u521b\u5efa\u6210\u529f\uff0c\u6ca1\u6709\u5185\u5b58\u7a7a\u95f4\uff0c\u66f4\u6ca1\u6709\u865a\u51fd\u6570\u8868\u7528\u6765\u8c03\u7528\u865a\u51fd\u6570\u3002 \u6790\u6784\u51fd\u6570\u6700\u597d\u58f0\u660e\u4e3a\u865a\u51fd\u6570 \u5f53\u6790\u6784\u4e00\u4e2a\u6307\u5411\u6d3e\u751f\u7c7b\u7684\u57fa\u7c7b\u6307\u9488\u65f6\uff0c\u5982\u679c\u57fa\u7c7b\u7684\u6790\u6784\u51fd\u6570\u4e0d\u662f\u865a\u51fd\u6570\uff0c\u5219\u4f1a\u5bfc\u81f4\u5185\u5b58\u6cc4\u9732\u3002 \u5f15\u7528\u4f5c\u4e3a\u51fd\u6570\u53c2\u6570\u7684\u4f18\u70b9 # \u503c\u4f20\u9012 \u5f62\u53c2\u662f\u5b9e\u53c2\u7684\u62f7\u8d1d\u526f\u672c\uff0c\u6539\u53d8\u5f62\u53c2\u7684\u503c\u5e76\u4e0d\u4f1a\u5f71\u54cd\u5916\u90e8\u5b9e\u53c2\u7684\u503c\u3002 \u5f15\u7528\u4f20\u9012 \u5f62\u53c2\u662f\u5b9e\u53c2\u7684\u201c\u522b\u540d\u201d\uff0c\u4e0d\u5b58\u5728\u62f7\u8d1d\u526f\u672c\u3002 static_cast\u3001dynamic_cast\u3001const_cast\u3001reinterpret_cast # static_cast \u7f16\u8bd1\u65f6\u671f\u7684\u9759\u6001\u7c7b\u578b\u68c0\u67e5\uff0c\u8f6c\u6362\u7684\u5b89\u5168\u6027\u8981\u5f00\u53d1\u4eba\u5458\u6765\u4fdd\u8bc1\uff0c\u4e00\u822c\u7528\u4e8e\u4e0a\u884c\u8f6c\u6362 dynamic_cast \u8fd0\u884c\u65f6\u8fdb\u884c\u7c7b\u578b\u5b89\u5168\u68c0\u67e5\uff0c\u4e00\u822c\u7528\u4e8e\u4e0b\u884c\u8f6c\u6362 const_cast \u53bb\u9664const\u5e38\u91cf\u5c5e\u6027\uff0c\u4f7f\u5176\u53ef\u4ee5\u4fee\u6539\u3002","title":"C++\u57fa\u7840"},{"location":"Interview/C%2B%2B%E5%9F%BA%E7%A1%80/#_1","text":"\u6784\u9020\u51fd\u6570 \u57fa\u7c7b\u7684\u6784\u9020\u51fd\u6570->\u6d3e\u751f\u7c7b\u7684\u6784\u9020\u51fd\u6570 \u6790\u6784\u51fd\u6570 \u6d3e\u751f\u7c7b\u7684\u6790\u6784\u9020\u51fd\u6570->\u57fa\u7c7b\u7684\u6790\u6784\u51fd\u6570","title":"\u6784\u9020\u51fd\u6570\u548c\u6790\u6784\u51fd\u6570\u7684\u8c03\u7528\u987a\u5e8f"},{"location":"Interview/C%2B%2B%E5%9F%BA%E7%A1%80/#_2","text":"\u6784\u9020\u51fd\u6570\u4e0d\u80fd\u58f0\u660e\u4e3a\u865a\u51fd\u6570 \u865a\u51fd\u6570\u662f\u5728\u8fd0\u884c\u65f6\u901a\u8fc7\u865a\u51fd\u6570\u8868\u6765\u786e\u5b9a\u5176\u7c7b\u578b\u7684\uff0c\u865a\u51fd\u6570\u8868\u5b58\u653e\u5728\u5bf9\u8c61\u7684\u5185\u5b58\u7a7a\u95f4\u4e2d\u3002\u5728\u521b\u5efa\u4e00\u4e2a\u5bf9\u8c61\u65f6\uff0c\u7531\u4e8e\u5bf9\u8c61\u8fd8\u672a\u521b\u5efa\u6210\u529f\uff0c\u6ca1\u6709\u5185\u5b58\u7a7a\u95f4\uff0c\u66f4\u6ca1\u6709\u865a\u51fd\u6570\u8868\u7528\u6765\u8c03\u7528\u865a\u51fd\u6570\u3002 \u6790\u6784\u51fd\u6570\u6700\u597d\u58f0\u660e\u4e3a\u865a\u51fd\u6570 \u5f53\u6790\u6784\u4e00\u4e2a\u6307\u5411\u6d3e\u751f\u7c7b\u7684\u57fa\u7c7b\u6307\u9488\u65f6\uff0c\u5982\u679c\u57fa\u7c7b\u7684\u6790\u6784\u51fd\u6570\u4e0d\u662f\u865a\u51fd\u6570\uff0c\u5219\u4f1a\u5bfc\u81f4\u5185\u5b58\u6cc4\u9732\u3002","title":"\u6784\u9020\u51fd\u6570\u548c\u6790\u6784\u51fd\u6570\u80fd\u5426\u4e3a\u865a\u51fd\u6570\uff1f \u4e3a\u4ec0\u4e48\uff1f"},{"location":"Interview/C%2B%2B%E5%9F%BA%E7%A1%80/#_3","text":"\u503c\u4f20\u9012 \u5f62\u53c2\u662f\u5b9e\u53c2\u7684\u62f7\u8d1d\u526f\u672c\uff0c\u6539\u53d8\u5f62\u53c2\u7684\u503c\u5e76\u4e0d\u4f1a\u5f71\u54cd\u5916\u90e8\u5b9e\u53c2\u7684\u503c\u3002 \u5f15\u7528\u4f20\u9012 \u5f62\u53c2\u662f\u5b9e\u53c2\u7684\u201c\u522b\u540d\u201d\uff0c\u4e0d\u5b58\u5728\u62f7\u8d1d\u526f\u672c\u3002","title":"\u5f15\u7528\u4f5c\u4e3a\u51fd\u6570\u53c2\u6570\u7684\u4f18\u70b9"},{"location":"Interview/C%2B%2B%E5%9F%BA%E7%A1%80/#static_castdynamic_castconst_castreinterpret_cast","text":"static_cast \u7f16\u8bd1\u65f6\u671f\u7684\u9759\u6001\u7c7b\u578b\u68c0\u67e5\uff0c\u8f6c\u6362\u7684\u5b89\u5168\u6027\u8981\u5f00\u53d1\u4eba\u5458\u6765\u4fdd\u8bc1\uff0c\u4e00\u822c\u7528\u4e8e\u4e0a\u884c\u8f6c\u6362 dynamic_cast \u8fd0\u884c\u65f6\u8fdb\u884c\u7c7b\u578b\u5b89\u5168\u68c0\u67e5\uff0c\u4e00\u822c\u7528\u4e8e\u4e0b\u884c\u8f6c\u6362 const_cast \u53bb\u9664const\u5e38\u91cf\u5c5e\u6027\uff0c\u4f7f\u5176\u53ef\u4ee5\u4fee\u6539\u3002","title":"static_cast\u3001dynamic_cast\u3001const_cast\u3001reinterpret_cast"},{"location":"Interview/C%2B%2B%E9%AB%98%E7%BA%A7/","text":"C++\u6587\u4ef6\u7f16\u8bd1\u56db\u4e2a\u9636\u6bb5 # \u9884\u5904\u7406\uff1a \u6839\u636e\u6587\u4ef6\u4e2d\u7684\u9884\u5904\u7406\u6307\u4ee4\u6765\u5904\u7406\u4ee3\u7801\u6587\u4ef6 \u9884\u7f16\u8bd1\u8fc7\u7a0b\u4e3b\u8981\u5904\u7406\u90a3\u4e9b\u6e90\u4ee3\u7801\u4e2d\u4ee5#\u5f00\u59cb\u7684\u9884\u7f16\u8bd1\u6307\u4ee4\uff0c\u4e3b\u8981\u5904\u7406\u89c4\u5219\u5982\u4e0b\uff1a \u5c06\u6240\u6709\u7684#define\u5220\u9664\uff0c\u5e76\u4e14\u5c55\u5f00\u6240\u6709\u7684\u5b8f\u5b9a\u4e49 \u5904\u7406\u6240\u6709\u6761\u4ef6\u7f16\u8bd1\u6307\u4ee4\uff0c\u5982#if\uff0c#ifdef\u7b49 \u5904\u7406#include\u9884\u7f16\u8bd1\u6307\u4ee4\uff0c\u5c06\u88ab\u5305\u542b\u7684\u6587\u4ef6\u63d2\u5165\u5230\u8be5\u9884\u7f16\u8bd1\u6307\u4ee4\u7684\u4f4d\u7f6e\u3002\u8be5\u8fc7\u7a0b\u9012\u5f52\u8fdb\u884c\uff0c\u53ca\u88ab\u5305\u542b\u7684\u6587\u4ef6\u53ef\u80fd\u8fd8\u5305\u542b\u5176\u4ed6\u6587\u4ef6 \u5220\u9664\u6240\u6709\u7684\u6ce8\u91ca//\u548c /**/ \u6dfb\u52a0\u884c\u53f7\u548c\u6587\u4ef6\u6807\u8bc6\uff0c\u5982#2 \u201chello.c\u201d 2,\u4ee5\u4fbf\u4e8e\u7f16\u8bd1\u65f6\u7f16\u8bd1\u5668\u4ea7\u751f\u8c03\u8bd5\u7528\u7684\u884c\u53f7\u4fe1\u606f\u53ca\u7528\u4e8e\u7f16\u8bd1\u65f6\u4ea7\u751f\u7f16\u8bd1\u9519\u8bef\u6216\u8b66\u544a\u65f6\u80fd\u591f\u663e\u793a\u884c\u53f7\u4fe1\u606f \u4fdd\u7559\u6240\u6709\u7684#pragma\u7f16\u8bd1\u5668\u6307\u4ee4\uff0c\u56e0\u4e3a\u7f16\u8bd1\u5668\u987b\u8981\u4f7f\u7528\u5b83\u4eec\uff1b \u7f16\u8bd1 \u628a\u9884\u5904\u7406\u5b8c\u7684\u6587\u4ef6\u8fdb\u884c\u4e00\u7cfb\u5217\u8bcd\u6cd5\u5206\u6790\uff0c\u8bed\u6cd5\u5206\u6790\uff0c\u8bed\u4e49\u5206\u6790\u53ca\u4f18\u5316\u540e\u751f\u6210\u76f8\u5e94\u7684\u6c47\u7f16\u4ee3\u7801\u6587\u4ef6 \u6c47\u7f16 \u6c47\u7f16\u5668\u628a\u6c47\u7f16\u4ee3\u7801\u8f6c\u53d8\u6210\u76ee\u6807\u673a\u5668\u6307\u4ee4 \u94fe\u63a5 \u94fe\u63a5\u5668\u5c06\u5404\u4e2a\u76ee\u6807\u6587\u4ef6\u7ec4\u88c5\u5728\u4e00\u8d77\uff0c\u89e3\u51b3\u7b26\u53f7\u4f9d\u8d56\u3001\u5e93\u4f9d\u8d56\u5173\u7cfb\uff0c\u5e76\u751f\u6210\u53ef\u6267\u884c\u6587\u4ef6\u3002 C++\u5185\u5b58\u533a\u57df\u76845\u4e2a\u533a\u57df # \u6808 \u7f16\u8bd1\u5668\u81ea\u52a8\u5206\u914d\u91ca\u653e\uff0c\u4e3b\u8981\u5b58\u653e\u51fd\u6570\u7684\u53c2\u6570\u503c\uff0c\u5c40\u90e8\u53d8\u91cf\u503c\u7b49 \u5806 \u7531\u7a0b\u5e8f\u5458\u5206\u914d\u91ca\u653e \u5168\u5c40/\u9759\u6001\u533a \u5b58\u653e\u5168\u5c40\u53d8\u91cf\u548c\u9759\u6001\u53d8\u91cf\uff1b\u7a0b\u5e8f\u7ed3\u675f\u65f6\u7531\u7cfb\u7edf\u91ca\u653e \u5e38\u91cf\u533a \u8fd9\u662f\u4e00\u5757\u6bd4\u8f83\u7279\u6b8a\u7684\u5b58\u50a8\u533a\uff0c\u91cc\u9762\u5b58\u653e\u7684\u662f\u5e38\u91cf\uff0c\u4e0d\u5141\u8bb8\u4fee\u6539 \u7a0b\u5e8f\u4ee3\u7801\u533a \u5b58\u653e\u51fd\u6570\u4f53\u7684\u4e8c\u8fdb\u5236\u4ee3\u7801 extern\u201cC\u201d\u7684\u4f5c\u7528 # extern \u201cC\u201d \u544a\u8bc9 C++ \u7f16\u8bd1\u5668\u7528 C\u89c4\u5219 \u7f16\u8bd1\u6307\u5b9a\u7684\u4ee3\u7801 C++\u9700\u8981\u652f\u6301\u91cd\u8f7d\uff0c\u5355\u7eaf\u7684\u51fd\u6570\u540d\u65e0\u6cd5\u533a\u5206\u51fa\u5177\u4f53\u7684\u51fd\u6570\uff0c\u6240\u4ee5\u5728\u7f16\u8bd1\u9636\u6bb5\u5c31\u9700\u8981\u5c06\u5f62\u53c2\u5217\u8868\u4f5c\u4e3a\u9644\u52a0\u9879\u589e\u52a0\u5230\u51fd\u6570\u7b26\u53f7\u4e2d","title":"C++\u9ad8\u7ea7"},{"location":"Interview/C%2B%2B%E9%AB%98%E7%BA%A7/#c","text":"\u9884\u5904\u7406\uff1a \u6839\u636e\u6587\u4ef6\u4e2d\u7684\u9884\u5904\u7406\u6307\u4ee4\u6765\u5904\u7406\u4ee3\u7801\u6587\u4ef6 \u9884\u7f16\u8bd1\u8fc7\u7a0b\u4e3b\u8981\u5904\u7406\u90a3\u4e9b\u6e90\u4ee3\u7801\u4e2d\u4ee5#\u5f00\u59cb\u7684\u9884\u7f16\u8bd1\u6307\u4ee4\uff0c\u4e3b\u8981\u5904\u7406\u89c4\u5219\u5982\u4e0b\uff1a \u5c06\u6240\u6709\u7684#define\u5220\u9664\uff0c\u5e76\u4e14\u5c55\u5f00\u6240\u6709\u7684\u5b8f\u5b9a\u4e49 \u5904\u7406\u6240\u6709\u6761\u4ef6\u7f16\u8bd1\u6307\u4ee4\uff0c\u5982#if\uff0c#ifdef\u7b49 \u5904\u7406#include\u9884\u7f16\u8bd1\u6307\u4ee4\uff0c\u5c06\u88ab\u5305\u542b\u7684\u6587\u4ef6\u63d2\u5165\u5230\u8be5\u9884\u7f16\u8bd1\u6307\u4ee4\u7684\u4f4d\u7f6e\u3002\u8be5\u8fc7\u7a0b\u9012\u5f52\u8fdb\u884c\uff0c\u53ca\u88ab\u5305\u542b\u7684\u6587\u4ef6\u53ef\u80fd\u8fd8\u5305\u542b\u5176\u4ed6\u6587\u4ef6 \u5220\u9664\u6240\u6709\u7684\u6ce8\u91ca//\u548c /**/ \u6dfb\u52a0\u884c\u53f7\u548c\u6587\u4ef6\u6807\u8bc6\uff0c\u5982#2 \u201chello.c\u201d 2,\u4ee5\u4fbf\u4e8e\u7f16\u8bd1\u65f6\u7f16\u8bd1\u5668\u4ea7\u751f\u8c03\u8bd5\u7528\u7684\u884c\u53f7\u4fe1\u606f\u53ca\u7528\u4e8e\u7f16\u8bd1\u65f6\u4ea7\u751f\u7f16\u8bd1\u9519\u8bef\u6216\u8b66\u544a\u65f6\u80fd\u591f\u663e\u793a\u884c\u53f7\u4fe1\u606f \u4fdd\u7559\u6240\u6709\u7684#pragma\u7f16\u8bd1\u5668\u6307\u4ee4\uff0c\u56e0\u4e3a\u7f16\u8bd1\u5668\u987b\u8981\u4f7f\u7528\u5b83\u4eec\uff1b \u7f16\u8bd1 \u628a\u9884\u5904\u7406\u5b8c\u7684\u6587\u4ef6\u8fdb\u884c\u4e00\u7cfb\u5217\u8bcd\u6cd5\u5206\u6790\uff0c\u8bed\u6cd5\u5206\u6790\uff0c\u8bed\u4e49\u5206\u6790\u53ca\u4f18\u5316\u540e\u751f\u6210\u76f8\u5e94\u7684\u6c47\u7f16\u4ee3\u7801\u6587\u4ef6 \u6c47\u7f16 \u6c47\u7f16\u5668\u628a\u6c47\u7f16\u4ee3\u7801\u8f6c\u53d8\u6210\u76ee\u6807\u673a\u5668\u6307\u4ee4 \u94fe\u63a5 \u94fe\u63a5\u5668\u5c06\u5404\u4e2a\u76ee\u6807\u6587\u4ef6\u7ec4\u88c5\u5728\u4e00\u8d77\uff0c\u89e3\u51b3\u7b26\u53f7\u4f9d\u8d56\u3001\u5e93\u4f9d\u8d56\u5173\u7cfb\uff0c\u5e76\u751f\u6210\u53ef\u6267\u884c\u6587\u4ef6\u3002","title":"C++\u6587\u4ef6\u7f16\u8bd1\u56db\u4e2a\u9636\u6bb5"},{"location":"Interview/C%2B%2B%E9%AB%98%E7%BA%A7/#c5","text":"\u6808 \u7f16\u8bd1\u5668\u81ea\u52a8\u5206\u914d\u91ca\u653e\uff0c\u4e3b\u8981\u5b58\u653e\u51fd\u6570\u7684\u53c2\u6570\u503c\uff0c\u5c40\u90e8\u53d8\u91cf\u503c\u7b49 \u5806 \u7531\u7a0b\u5e8f\u5458\u5206\u914d\u91ca\u653e \u5168\u5c40/\u9759\u6001\u533a \u5b58\u653e\u5168\u5c40\u53d8\u91cf\u548c\u9759\u6001\u53d8\u91cf\uff1b\u7a0b\u5e8f\u7ed3\u675f\u65f6\u7531\u7cfb\u7edf\u91ca\u653e \u5e38\u91cf\u533a \u8fd9\u662f\u4e00\u5757\u6bd4\u8f83\u7279\u6b8a\u7684\u5b58\u50a8\u533a\uff0c\u91cc\u9762\u5b58\u653e\u7684\u662f\u5e38\u91cf\uff0c\u4e0d\u5141\u8bb8\u4fee\u6539 \u7a0b\u5e8f\u4ee3\u7801\u533a \u5b58\u653e\u51fd\u6570\u4f53\u7684\u4e8c\u8fdb\u5236\u4ee3\u7801","title":"C++\u5185\u5b58\u533a\u57df\u76845\u4e2a\u533a\u57df"},{"location":"Interview/C%2B%2B%E9%AB%98%E7%BA%A7/#externc","text":"extern \u201cC\u201d \u544a\u8bc9 C++ \u7f16\u8bd1\u5668\u7528 C\u89c4\u5219 \u7f16\u8bd1\u6307\u5b9a\u7684\u4ee3\u7801 C++\u9700\u8981\u652f\u6301\u91cd\u8f7d\uff0c\u5355\u7eaf\u7684\u51fd\u6570\u540d\u65e0\u6cd5\u533a\u5206\u51fa\u5177\u4f53\u7684\u51fd\u6570\uff0c\u6240\u4ee5\u5728\u7f16\u8bd1\u9636\u6bb5\u5c31\u9700\u8981\u5c06\u5f62\u53c2\u5217\u8868\u4f5c\u4e3a\u9644\u52a0\u9879\u589e\u52a0\u5230\u51fd\u6570\u7b26\u53f7\u4e2d","title":"extern\u201cC\u201d\u7684\u4f5c\u7528"},{"location":"Note/AppleWWDRCA%E8%AF%81%E4%B9%A6/","text":"AppleWWDRCA\uff08Apple Worldwide Developer Relations Certification Authority\uff09\u8bc1\u4e66 # iOS\u5f00\u53d1\u8005\u8bc1\u4e66\u4e0d\u53d7\u4fe1\u4efb \u5f53\u6211\u4eec\u81ea\u5df1\u7684\u5f00\u53d1\u8005\u8bc1\u4e66\u6ca1\u95ee\u9898\u65f6\uff0c\u5374\u51fa\u73b0\u4e86 \u4e0d\u53d7\u4fe1\u4efb\u7684\u63d0\u793a\u65f6\uff0c\u5f88\u6709\u53ef\u80fd\u662f\u7f3a\u5c11\u4e86 AppleWWDRCA\u8bc1\u4e66\u3002 AppleWWDRCA\u8bc1\u4e66 \u76ee\u524d\u9700\u8981 2\u4e2a AppleWWDRCA\u8bc1\u4e66\u3002 2023\u5e742\u67088\u53f7\u5230\u671f\u7684 http://developer.apple.com/certificationauthority/AppleWWDRCA.cer 2030\u5e742\u670820\u53f7\u5230\u671f https://www.apple.com/certificateauthority/AppleWWDRCAG3.cer","title":"AppleWWDRCA\u8bc1\u4e66"},{"location":"Note/AppleWWDRCA%E8%AF%81%E4%B9%A6/#applewwdrcaapple-worldwide-developer-relations-certification-authority","text":"iOS\u5f00\u53d1\u8005\u8bc1\u4e66\u4e0d\u53d7\u4fe1\u4efb \u5f53\u6211\u4eec\u81ea\u5df1\u7684\u5f00\u53d1\u8005\u8bc1\u4e66\u6ca1\u95ee\u9898\u65f6\uff0c\u5374\u51fa\u73b0\u4e86 \u4e0d\u53d7\u4fe1\u4efb\u7684\u63d0\u793a\u65f6\uff0c\u5f88\u6709\u53ef\u80fd\u662f\u7f3a\u5c11\u4e86 AppleWWDRCA\u8bc1\u4e66\u3002 AppleWWDRCA\u8bc1\u4e66 \u76ee\u524d\u9700\u8981 2\u4e2a AppleWWDRCA\u8bc1\u4e66\u3002 2023\u5e742\u67088\u53f7\u5230\u671f\u7684 http://developer.apple.com/certificationauthority/AppleWWDRCA.cer 2030\u5e742\u670820\u53f7\u5230\u671f https://www.apple.com/certificateauthority/AppleWWDRCAG3.cer","title":"AppleWWDRCA\uff08Apple Worldwide Developer Relations Certification Authority\uff09\u8bc1\u4e66"},{"location":"Note/Mac%E5%8D%B8%E8%BD%BDJDK/","text":"\u5728\u547d\u4ee4\u884c\u4e2d\u4f9d\u6b21\u8f93\u5165\u4ee5\u4e0b\u547d\u4ee4 # sudo rm -fr /Library/Internet\\ Plug-Ins/JavaAppletPlugin.plugin sudo rm -fr /Library/PreferencesPanes/JavaControlPanel.prefpane sudo rm -rf /Library/Java/JavaVirtualMachines/xxx.jdk \u6ce8\u610f\u7248\u672c\u53f7 xxx.jdk \u4e2d\u7684 xxx\u662f\u4f60\u7535\u8111\u5b89\u88c5\u7684JDK\u7248\u672c","title":"Mac\u5378\u8f7dJDK"},{"location":"Note/Mac%E5%8D%B8%E8%BD%BDJDK/#_1","text":"sudo rm -fr /Library/Internet\\ Plug-Ins/JavaAppletPlugin.plugin sudo rm -fr /Library/PreferencesPanes/JavaControlPanel.prefpane sudo rm -rf /Library/Java/JavaVirtualMachines/xxx.jdk \u6ce8\u610f\u7248\u672c\u53f7 xxx.jdk \u4e2d\u7684 xxx\u662f\u4f60\u7535\u8111\u5b89\u88c5\u7684JDK\u7248\u672c","title":"\u5728\u547d\u4ee4\u884c\u4e2d\u4f9d\u6b21\u8f93\u5165\u4ee5\u4e0b\u547d\u4ee4"},{"location":"Note/Mac%E5%AE%89%E8%A3%85Homebrew/","text":"1\u3001\u5b98\u7f51\u811a\u672c # /bin/bash -c \"$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install.sh)\" \u4e0d\u63a8\u8350 \u7531\u4e8e\u56fd\u5185\u8bbf\u95ee http://raw.githubusercontent.com \u4e0d\u7a33\u5b9a\uff0c\u5f88\u53ef\u80fd\u4e0b\u8f7d\u5f88\u6162\uff0c\u751a\u81f3\u5931\u8d25\u3002 2\u3001\u955c\u50cf\u811a\u672c # /usr/bin/ruby -e \"$(curl -fsSL https://cdn.jsdelivr.net/gh/ineo6/homebrew-install/install)\" \u63a8\u8350 \u8fd9\u662f\u4e2d\u79d1\u5927\u7684\u955c\u50cf\u811a\u672c\uff0c\u901f\u5ea6\u5f88\u5feb\u3002 \u73af\u5883\u53d8\u91cf \u5b89\u88c5\u5b8c Homebrew \u65f6\uff0c\u5982\u679c\u9700\u8981\u8bbe\u7f6e\u73af\u5883\u53d8\u91cf\u4f1a\u6709\u76f8\u5e94\u7684log\uff0c\u5728log\u4e2d\u590d\u5236\u5176\u547d\u4ee4\u6267\u884c\u5373\u53ef\u3002","title":"Mac\u5b89\u88c5Homebrew"},{"location":"Note/Mac%E5%AE%89%E8%A3%85Homebrew/#1","text":"/bin/bash -c \"$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install.sh)\" \u4e0d\u63a8\u8350 \u7531\u4e8e\u56fd\u5185\u8bbf\u95ee http://raw.githubusercontent.com \u4e0d\u7a33\u5b9a\uff0c\u5f88\u53ef\u80fd\u4e0b\u8f7d\u5f88\u6162\uff0c\u751a\u81f3\u5931\u8d25\u3002","title":"1\u3001\u5b98\u7f51\u811a\u672c"},{"location":"Note/Mac%E5%AE%89%E8%A3%85Homebrew/#2","text":"/usr/bin/ruby -e \"$(curl -fsSL https://cdn.jsdelivr.net/gh/ineo6/homebrew-install/install)\" \u63a8\u8350 \u8fd9\u662f\u4e2d\u79d1\u5927\u7684\u955c\u50cf\u811a\u672c\uff0c\u901f\u5ea6\u5f88\u5feb\u3002 \u73af\u5883\u53d8\u91cf \u5b89\u88c5\u5b8c Homebrew \u65f6\uff0c\u5982\u679c\u9700\u8981\u8bbe\u7f6e\u73af\u5883\u53d8\u91cf\u4f1a\u6709\u76f8\u5e94\u7684log\uff0c\u5728log\u4e2d\u590d\u5236\u5176\u547d\u4ee4\u6267\u884c\u5373\u53ef\u3002","title":"2\u3001\u955c\u50cf\u811a\u672c"},{"location":"OpenGL/Pipeline/","text":"Pipeline # OpenGL ES 3.2 pipeline # \u6e32\u67d3\u7ba1\u7ebf\u5404\u9636\u6bb5\u7684\u5de5\u4f5c\u5185\u5bb9 \u56fe\u4e2d\u7684\u56fe\u5143\u88c5\u914d\u5b9e\u9645\u4e0a\u662f \u65e9\u671f\u56fe\u5143\u88c5\u914d OpenGL \u57fa\u672c\u56fe\u5143 # Shader # none (Default) same as in in For parameter passed into a function out For values passed out of a function inout Function parameters passed in and out \u53c2\u8003 # Rendering_Pipeline_Overview OpenGL 4.5 Reference Guide OpenGL ES 3.2 Reference Guide","title":"\u6e32\u67d3\u7ba1\u7ebf"},{"location":"OpenGL/Pipeline/#pipeline","text":"","title":"Pipeline"},{"location":"OpenGL/Pipeline/#opengl-es-32-pipeline","text":"\u6e32\u67d3\u7ba1\u7ebf\u5404\u9636\u6bb5\u7684\u5de5\u4f5c\u5185\u5bb9 \u56fe\u4e2d\u7684\u56fe\u5143\u88c5\u914d\u5b9e\u9645\u4e0a\u662f \u65e9\u671f\u56fe\u5143\u88c5\u914d","title":"OpenGL ES 3.2 pipeline"},{"location":"OpenGL/Pipeline/#opengl","text":"","title":"OpenGL \u57fa\u672c\u56fe\u5143"},{"location":"OpenGL/Pipeline/#shader","text":"none (Default) same as in in For parameter passed into a function out For values passed out of a function inout Function parameters passed in and out","title":"Shader"},{"location":"OpenGL/Pipeline/#_1","text":"Rendering_Pipeline_Overview OpenGL 4.5 Reference Guide OpenGL ES 3.2 Reference Guide","title":"\u53c2\u8003"},{"location":"OpenGL/VAO_VBO_EBO/","text":"VBO # \u9876\u70b9\u7f13\u51b2\u5bf9\u8c61(Vertex Buffer Object\u3001VBO)\uff1a\u7528\u4e8e\u5b58\u50a8\u9876\u70b9\u7684\u5404\u7c7b\u5c5e\u6027\u4fe1\u606f\uff08\u5982\u9876\u70b9\u5750\u6807\u3001\u9876\u70b9\u6cd5\u5411\u91cf\u3001\u9876\u70b9\u989c\u8272\u7b49\uff09\u3002\u5728\u6e32\u67d3\u65f6\uff0c\u53ef\u4ee5\u76f4\u63a5\u4eceVBO\u4e2d\u8bfb\u53d6\u9876\u70b9\u7684\u5404\u7c7b\u5c5e\u6027\u6570\u636e\uff0c\u7531\u4e8eVBO\u5728\u663e\u5b58\u4e2d\u800c\u4e0d\u662f\u5728\u5185\u5b58\u4e2d\uff0c\u5904\u7406\u6548\u7387\u66f4\u9ad8\u3002\u6bcf\u4e2aVBO\u5728OpenGL\u4e2d\u6709\u552f\u4e00\u6807\u8bc6ID\uff0c\u901a\u8fc7\u8fd9\u4e2aID\u53ef\u4ee5\u5bf9\u7279\u5b9a\u7684VBO\u5185\u7684\u6570\u636e\u8fdb\u884c\u5b58\u53d6\u64cd\u4f5c\u3002 EBO # \u7d22\u5f15\u7f13\u51b2\u5bf9\u8c61(Element Buffer Object\uff0cEBO\u6216Index Buffer Object\uff0cIBO)\uff1a\u5f53\u9700\u8981\u4f7f\u7528\u91cd\u590d\u7684\u9876\u70b9\u65f6\uff0c\u53ef\u4ee5\u901a\u8fc7EBO\u8282\u7701\u5185\u5b58\uff0c\u63d0\u9ad8\u6267\u884c\u6548\u7387\u3002EBO\u4e2d\u5b58\u50a8\u7684\u5185\u5bb9\u5c31\u662f\u9876\u70b9\u4f4d\u7f6e\u7684\u7d22\u5f15\uff0cEBO\u8ddfVBO\u7c7b\u4f3c\uff0c\u53ea\u4e0d\u8fc7EBO\u4fdd\u5b58\u7684\u662f\u9876\u70b9\u7684\u7d22\u5f15\u3002 VAO # \u9876\u70b9\u6570\u7ec4\u5bf9\u8c61(Vertex Array Object\u3001VAO)\uff1a\u53ef\u4ee5\u50cfVBO\u90a3\u6837\u88ab\u7ed1\u5b9a\uff0c\u4efb\u4f55\u968f\u540e\u7684\u9876\u70b9\u5c5e\u6027\u8bbe\u7f6e\u90fd\u4f1a\u50a8\u5b58\u5728\u8fd9\u4e2aVAO\u4e2d\uff0c\u4e4b\u540e\u5728\u7ed8\u5236\u7269\u4f53\u7684\u65f6\u5019\u53ea\u9700\u8981\u7ed1\u5b9a\u76f8\u5e94\u7684VAO\u5c31\u53ef\u4ee5\u3002\u5728\u4e0d\u540c\u9876\u70b9\u6570\u636e\u548c\u5c5e\u6027\u914d\u7f6e\u4e4b\u95f4\u5207\u6362\u65f6\uff0c\u53ea\u9700\u7ed1\u5b9a\u4e0d\u540c\u7684VAO\u5c31\u53ef\u4ee5\u3002 \u4e00\u4e2aVAO\u4f1a\u50a8\u5b58\u4ee5\u4e0b\u8fd9\u4e9b\u5185\u5bb9\uff1a glEnableVertexAttribArray\u548cglDisableVertexAttribArray\u7684\u8c03\u7528\uff1b \u901a\u8fc7glVertexAttribPointer\u8bbe\u7f6e\u7684\u9876\u70b9\u5c5e\u6027\u914d\u7f6e\uff1b \u901a\u8fc7glVertexAttribPointer\u8c03\u7528\u4e0e\u9876\u70b9\u5c5e\u6027\u5173\u8054\u7684VBO\uff1b \u5f53\u76ee\u6807\u662fGL_ELEMENT_ARRAY_BUFFER\u7684\u65f6\u5019\uff0cVAO\u4f1a\u50a8\u5b58glBindBuffer\u7684\u51fd\u6570\u8c03\u7528\uff1b \u8fd9\u610f\u5473\u7740\u5b83\u4e5f\u4f1a\u50a8\u5b58\u89e3\u7ed1\u8c03\u7528\uff0c\u6240\u4ee5\u786e\u4fdd\u5728\u89e3\u7ed1VAO\u4e4b\u524d\u6ca1\u6709\u89e3\u7ed1EBO\uff0c\u5426\u5219\u5b83\u5c31\u6ca1\u6709\u8fd9\u4e2aEBO\u914d\u7f6e\u4e86\u3002 \u603b\u7ed3 # VBO \u5b58\u50a8\u9876\u70b9\u6570\u636e EBO \u5b58\u50a8\u9876\u70b9\u7d22\u5f15 VAO \u5b58\u50a8\u7f13\u51b2\u533a\u548c\u9876\u70b9\u5c5e\u6027\u72b6\u6001 Back // set up vertex data (and buffer(s)) and configure vertex attributes float vertices[] = { 0.5f, 0.5f, 0.0f, // top right 0.5f, -0.5f, 0.0f, // bottom right -0.5f, -0.5f, 0.0f, // bottom left -0.5f, 0.5f, 0.0f // top left }; unsigned int indices[] = { // note that we start from 0! 0, 1, 3, // first Triangle 1, 2, 3 // second Triangle }; unsigned int VBO, VAO, EBO; glGenVertexArrays(1, &VAO); glGenBuffers(1, &VBO); glGenBuffers(1, &EBO); // bind the Vertex Array Object first, then bind and set vertex buffer(s), and then configure vertex attributes(s). glBindVertexArray(VAO); glBindBuffer(GL_ARRAY_BUFFER, VBO); glBufferData(GL_ARRAY_BUFFER, sizeof(vertices), vertices, GL_STATIC_DRAW); glBindBuffer(GL_ELEMENT_ARRAY_BUFFER, EBO); glBufferData(GL_ELEMENT_ARRAY_BUFFER, sizeof(indices), indices, GL_STATIC_DRAW); glVertexAttribPointer(0, 3, GL_FLOAT, GL_FALSE, 3 * sizeof(float), (void*)0); glEnableVertexAttribArray(0); // note that this is allowed, the call to glVertexAttribPointer registered VBO as the vertex attribute's bound vertex buffer object so afterwards we can safely unbind glBindBuffer(GL_ARRAY_BUFFER, 0); // remember: do NOT unbind the EBO while a VAO is active as the bound element buffer object IS stored in the VAO; keep the EBO bound. //glBindBuffer(GL_ELEMENT_ARRAY_BUFFER, 0); // You can unbind the VAO afterwards so other VAO calls won't accidentally modify this VAO, but this rarely happens. Modifying other // VAOs requires a call to glBindVertexArray anyways so we generally don't unbind VAOs (nor VBOs) when it's not directly necessary. glBindVertexArray(0); // ... \u7701\u7565\u90e8\u5206\u4ee3\u7801 // render loop // ----------- glBindVertexArray(VAO); // seeing as we only have a single VAO there's no need to bind it every time, but we'll do so to keep things a bit more organized //glDrawArrays(GL_TRIANGLES, 0, 6); glDrawElements(GL_TRIANGLES, 6, GL_UNSIGNED_INT, 0); // glBindVertexArray(0); // no need to unbind it every time glSwapBuffers();","title":"VAO\u3001VBO\u3001EBO"},{"location":"OpenGL/VAO_VBO_EBO/#vbo","text":"\u9876\u70b9\u7f13\u51b2\u5bf9\u8c61(Vertex Buffer Object\u3001VBO)\uff1a\u7528\u4e8e\u5b58\u50a8\u9876\u70b9\u7684\u5404\u7c7b\u5c5e\u6027\u4fe1\u606f\uff08\u5982\u9876\u70b9\u5750\u6807\u3001\u9876\u70b9\u6cd5\u5411\u91cf\u3001\u9876\u70b9\u989c\u8272\u7b49\uff09\u3002\u5728\u6e32\u67d3\u65f6\uff0c\u53ef\u4ee5\u76f4\u63a5\u4eceVBO\u4e2d\u8bfb\u53d6\u9876\u70b9\u7684\u5404\u7c7b\u5c5e\u6027\u6570\u636e\uff0c\u7531\u4e8eVBO\u5728\u663e\u5b58\u4e2d\u800c\u4e0d\u662f\u5728\u5185\u5b58\u4e2d\uff0c\u5904\u7406\u6548\u7387\u66f4\u9ad8\u3002\u6bcf\u4e2aVBO\u5728OpenGL\u4e2d\u6709\u552f\u4e00\u6807\u8bc6ID\uff0c\u901a\u8fc7\u8fd9\u4e2aID\u53ef\u4ee5\u5bf9\u7279\u5b9a\u7684VBO\u5185\u7684\u6570\u636e\u8fdb\u884c\u5b58\u53d6\u64cd\u4f5c\u3002","title":"VBO"},{"location":"OpenGL/VAO_VBO_EBO/#ebo","text":"\u7d22\u5f15\u7f13\u51b2\u5bf9\u8c61(Element Buffer Object\uff0cEBO\u6216Index Buffer Object\uff0cIBO)\uff1a\u5f53\u9700\u8981\u4f7f\u7528\u91cd\u590d\u7684\u9876\u70b9\u65f6\uff0c\u53ef\u4ee5\u901a\u8fc7EBO\u8282\u7701\u5185\u5b58\uff0c\u63d0\u9ad8\u6267\u884c\u6548\u7387\u3002EBO\u4e2d\u5b58\u50a8\u7684\u5185\u5bb9\u5c31\u662f\u9876\u70b9\u4f4d\u7f6e\u7684\u7d22\u5f15\uff0cEBO\u8ddfVBO\u7c7b\u4f3c\uff0c\u53ea\u4e0d\u8fc7EBO\u4fdd\u5b58\u7684\u662f\u9876\u70b9\u7684\u7d22\u5f15\u3002","title":"EBO"},{"location":"OpenGL/VAO_VBO_EBO/#vao","text":"\u9876\u70b9\u6570\u7ec4\u5bf9\u8c61(Vertex Array Object\u3001VAO)\uff1a\u53ef\u4ee5\u50cfVBO\u90a3\u6837\u88ab\u7ed1\u5b9a\uff0c\u4efb\u4f55\u968f\u540e\u7684\u9876\u70b9\u5c5e\u6027\u8bbe\u7f6e\u90fd\u4f1a\u50a8\u5b58\u5728\u8fd9\u4e2aVAO\u4e2d\uff0c\u4e4b\u540e\u5728\u7ed8\u5236\u7269\u4f53\u7684\u65f6\u5019\u53ea\u9700\u8981\u7ed1\u5b9a\u76f8\u5e94\u7684VAO\u5c31\u53ef\u4ee5\u3002\u5728\u4e0d\u540c\u9876\u70b9\u6570\u636e\u548c\u5c5e\u6027\u914d\u7f6e\u4e4b\u95f4\u5207\u6362\u65f6\uff0c\u53ea\u9700\u7ed1\u5b9a\u4e0d\u540c\u7684VAO\u5c31\u53ef\u4ee5\u3002 \u4e00\u4e2aVAO\u4f1a\u50a8\u5b58\u4ee5\u4e0b\u8fd9\u4e9b\u5185\u5bb9\uff1a glEnableVertexAttribArray\u548cglDisableVertexAttribArray\u7684\u8c03\u7528\uff1b \u901a\u8fc7glVertexAttribPointer\u8bbe\u7f6e\u7684\u9876\u70b9\u5c5e\u6027\u914d\u7f6e\uff1b \u901a\u8fc7glVertexAttribPointer\u8c03\u7528\u4e0e\u9876\u70b9\u5c5e\u6027\u5173\u8054\u7684VBO\uff1b \u5f53\u76ee\u6807\u662fGL_ELEMENT_ARRAY_BUFFER\u7684\u65f6\u5019\uff0cVAO\u4f1a\u50a8\u5b58glBindBuffer\u7684\u51fd\u6570\u8c03\u7528\uff1b \u8fd9\u610f\u5473\u7740\u5b83\u4e5f\u4f1a\u50a8\u5b58\u89e3\u7ed1\u8c03\u7528\uff0c\u6240\u4ee5\u786e\u4fdd\u5728\u89e3\u7ed1VAO\u4e4b\u524d\u6ca1\u6709\u89e3\u7ed1EBO\uff0c\u5426\u5219\u5b83\u5c31\u6ca1\u6709\u8fd9\u4e2aEBO\u914d\u7f6e\u4e86\u3002","title":"VAO"},{"location":"OpenGL/VAO_VBO_EBO/#_1","text":"VBO \u5b58\u50a8\u9876\u70b9\u6570\u636e EBO \u5b58\u50a8\u9876\u70b9\u7d22\u5f15 VAO \u5b58\u50a8\u7f13\u51b2\u533a\u548c\u9876\u70b9\u5c5e\u6027\u72b6\u6001 Back // set up vertex data (and buffer(s)) and configure vertex attributes float vertices[] = { 0.5f, 0.5f, 0.0f, // top right 0.5f, -0.5f, 0.0f, // bottom right -0.5f, -0.5f, 0.0f, // bottom left -0.5f, 0.5f, 0.0f // top left }; unsigned int indices[] = { // note that we start from 0! 0, 1, 3, // first Triangle 1, 2, 3 // second Triangle }; unsigned int VBO, VAO, EBO; glGenVertexArrays(1, &VAO); glGenBuffers(1, &VBO); glGenBuffers(1, &EBO); // bind the Vertex Array Object first, then bind and set vertex buffer(s), and then configure vertex attributes(s). glBindVertexArray(VAO); glBindBuffer(GL_ARRAY_BUFFER, VBO); glBufferData(GL_ARRAY_BUFFER, sizeof(vertices), vertices, GL_STATIC_DRAW); glBindBuffer(GL_ELEMENT_ARRAY_BUFFER, EBO); glBufferData(GL_ELEMENT_ARRAY_BUFFER, sizeof(indices), indices, GL_STATIC_DRAW); glVertexAttribPointer(0, 3, GL_FLOAT, GL_FALSE, 3 * sizeof(float), (void*)0); glEnableVertexAttribArray(0); // note that this is allowed, the call to glVertexAttribPointer registered VBO as the vertex attribute's bound vertex buffer object so afterwards we can safely unbind glBindBuffer(GL_ARRAY_BUFFER, 0); // remember: do NOT unbind the EBO while a VAO is active as the bound element buffer object IS stored in the VAO; keep the EBO bound. //glBindBuffer(GL_ELEMENT_ARRAY_BUFFER, 0); // You can unbind the VAO afterwards so other VAO calls won't accidentally modify this VAO, but this rarely happens. Modifying other // VAOs requires a call to glBindVertexArray anyways so we generally don't unbind VAOs (nor VBOs) when it's not directly necessary. glBindVertexArray(0); // ... \u7701\u7565\u90e8\u5206\u4ee3\u7801 // render loop // ----------- glBindVertexArray(VAO); // seeing as we only have a single VAO there's no need to bind it every time, but we'll do so to keep things a bit more organized //glDrawArrays(GL_TRIANGLES, 0, 6); glDrawElements(GL_TRIANGLES, 6, GL_UNSIGNED_INT, 0); // glBindVertexArray(0); // no need to unbind it every time glSwapBuffers();","title":"\u603b\u7ed3"},{"location":"OpenGL/%E5%85%89%E6%BA%90/","text":"\u5149\u6e90 # \u53c2\u8003 https://learnopengl-cn.github.io/02%20Lighting/05%20Light%20casters/ \u5b9a\u5411\u5149\u6e90(Directional Light) # \u5f53\u4e00\u4e2a\u5149\u6e90\u5904\u4e8e\u5f88\u8fdc\u7684\u5730\u65b9\u65f6\uff0c\u6765\u81ea\u5149\u6e90\u7684\u6bcf\u6761\u5149\u7ebf\u5c31\u4f1a\u8fd1\u4f3c\u4e8e\u4e92\u76f8\u5e73\u884c\u3002\u4e0d\u8bba\u7269\u4f53\u548c\u89c2\u5bdf\u8005\u5728\u4ec0\u4e48\u4f4d\u7f6e\uff0c\u770b\u8d77\u6765\u597d\u50cf\u6240\u6709\u7684\u5149\u90fd\u6765\u81ea\u4e8e\u540c\u4e00\u4e2a\u65b9\u5411\u3002\u5f53\u6211\u4eec\u4f7f\u7528\u4e00\u4e2a\u5047\u8bbe\u5149\u6e90\u5904\u4e8e\u65e0\u9650\u8fdc\u5904\u7684\u6a21\u578b\u65f6\uff0c\u5b83\u5c31\u88ab\u79f0\u4e3a\u5b9a\u5411\u5149\uff0c\u56e0\u4e3a\u6240\u6709\u7684\u5149\u7ebf\u90fd\u662f\u5e73\u884c\u7684\uff0c\u6240\u4ee5\u7269\u4f53\u4e0e\u5149\u6e90\u7684\u76f8\u5bf9\u4f4d\u7f6e\u5c31\u4e0d\u91cd\u8981\u4e86\u3002\u9002\u7528\u4e8e\u6a21\u62df\u592a\u9633\u5149\u3002 Back \u6211\u4eec\u53ef\u4ee5\u5b9a\u4e49\u4e00\u4e2a\u65b9\u5411\u5411\u91cf\u800c\u4e0d\u662f\u4f4d\u7f6e\u5411\u91cf\u6765\u6a21\u62df\u4e00\u4e2a\u5b9a\u5411\u5149 struct Light { // vec3 position; // \u4f7f\u7528\u5b9a\u5411\u5149\u5c31\u4e0d\u518d\u9700\u8981\u4e86 vec3 direction; vec3 ambient; vec3 diffuse; vec3 specular; }; ... void main() { vec3 lightDir = normalize(-light.direction); ... } \u6ce8\u610f \u6211\u4eec\u76ee\u524d\u4f7f\u7528\u7684\u5149\u7167\u8ba1\u7b97\u9700\u8981\u4e00\u4e2a\u4ece\u7247\u6bb5\u81f3\u5149\u6e90\u7684\u5149\u7ebf\u65b9\u5411\uff0c\u4f46\u4eba\u4eec\u66f4\u4e60\u60ef\u5b9a\u4e49\u5b9a\u5411\u5149\u4e3a\u4e00\u4e2a\u4ece\u5149\u6e90\u51fa\u53d1\u7684\u5168\u5c40\u65b9\u5411\u3002\u6240\u4ee5\u6211\u4eec\u9700\u8981\u5bf9\u5168\u5c40\u5149\u7167\u65b9\u5411\u5411\u91cf\u53d6\u53cd\u6765\u6539\u53d8\u5b83\u7684\u65b9\u5411\u3002 \u70b9\u5149\u6e90(Point Light) # \u70b9\u5149\u6e90\u662f\u5904\u4e8e\u4e16\u754c\u4e2d\u67d0\u4e00\u4e2a\u4f4d\u7f6e\u7684\u5149\u6e90\uff0c\u5b83\u4f1a\u671d\u7740\u6240\u6709\u65b9\u5411\u53d1\u5149\uff0c\u4f46\u5149\u7ebf\u4f1a\u968f\u7740\u8ddd\u79bb\u9010\u6e10\u8870\u51cf\u3002\u9002\u7528\u4e8e\u6a21\u62df\u706f\u6ce1\u3002 \u8870\u51cf # \u8870\u51cf(Attenuation)\uff1a\u968f\u7740\u5149\u7ebf\u4f20\u64ad\u8ddd\u79bb\u7684\u589e\u957f\u9010\u6e10\u524a\u51cf\u5149\u7684\u5f3a\u5ea6\u3002 \u5728\u73b0\u5b9e\u4e16\u754c\u4e2d\uff0c\u706f\u6ce1\u5728\u8fd1\u5904\u901a\u5e38\u4f1a\u975e\u5e38\u4eae\uff0c\u4f46\u968f\u7740\u8ddd\u79bb\u7684\u589e\u52a0\u5149\u6e90\u7684\u4eae\u5ea6\u4e00\u5f00\u59cb\u4f1a\u4e0b\u964d\u975e\u5e38\u5feb\uff0c\u4f46\u5728\u8fdc\u5904\u65f6\u5269\u4f59\u7684\u5149\u5f3a\u5ea6\u5c31\u4f1a\u4e0b\u964d\u7684\u975e\u5e38\u7f13\u6162\u4e86\u3002 \u8870\u51cf\u516c\u5f0f F_{att} = \\frac{1.0}{K_c + K_l * d + K_q * d^2} d\uff1a\u7247\u6bb5\u5230\u5149\u6e90\u7684\u8ddd\u79bb K_c \uff1a\u5e38\u6570\u9879\u3002\u901a\u5e38\u4e3a1.0\uff0c\u5b83\u7684\u4e3b\u8981\u4f5c\u7528\u662f\u4fdd\u8bc1\u5206\u6bcd\u6c38\u8fdc\u5927\u4e8e1\uff0c\u5426\u5219\u5728\u67d0\u4e9b\u8ddd\u79bb\u4e0a\u5b83\u53cd\u800c\u4f1a\u589e\u52a0\u5f3a\u5ea6\u3002 K_l \uff1a\u4e00\u6b21\u9879\u3002\u4e0e\u8ddd\u79bb\u503c\u76f8\u4e58\uff0c\u4fdd\u8bc1\u5149\u4ee5\u7ebf\u6027\u7684\u65b9\u5f0f\u51cf\u5c11\u5f3a\u5ea6\u3002 K_q \uff1a\u4e8c\u6b21\u9879\u3002\u4e0e\u8ddd\u79bb\u7684\u5e73\u65b9\u76f8\u4e58\uff0c\u5728\u8ddd\u79bb\u6bd4\u8f83\u5c0f\u7684\u65f6\u5019\u5f71\u54cd\u4f1a\u6bd4\u4e00\u6b21\u9879\u5c0f\u5f88\u591a\uff0c\u4f46\u5f53\u8ddd\u79bb\u503c\u6bd4\u8f83\u5927\u7684\u65f6\u5019\u5b83\u5c31\u4f1a\u6bd4\u4e00\u6b21\u9879\u66f4\u5927\u4e86\u3002 Back \u4e0b\u56fe\u53ef\u4ee5\u770b\u5230\u5149\u5728\u8fd1\u8ddd\u79bb\u7684\u65f6\u5019\u6709\u7740\u6700\u9ad8\u7684\u5f3a\u5ea6\uff0c\u4f46\u968f\u7740\u8ddd\u79bb\u589e\u957f\uff0c\u5b83\u7684\u5f3a\u5ea6\u660e\u663e\u51cf\u5f31\uff0c\u5e76\u7f13\u6162\u5730\u5728\u8ddd\u79bb\u5927\u7ea6100\u7684\u65f6\u5019\u5f3a\u5ea6\u63a5\u8fd10 struct Light { vec3 position; vec3 ambient; vec3 diffuse; vec3 specular; float constant; float linear; float quadratic; }; //...\u7701\u7565\u90e8\u5206\u4ee3\u7801 void main() { // ambient vec3 ambient = light.ambient * texture(material.diffuse, TexCoords).rgb; // diffuse vec3 norm = normalize(Normal); vec3 lightDir = normalize(light.position - FragPos); float diff = max(dot(norm, lightDir), 0.0); vec3 diffuse = light.diffuse * diff * texture(material.diffuse, TexCoords).rgb; // specular vec3 viewDir = normalize(viewPos - FragPos); vec3 reflectDir = reflect(-lightDir, norm); float spec = pow(max(dot(viewDir, reflectDir), 0.0), material.shininess); vec3 specular = light.specular * spec * texture(material.specular, TexCoords).rgb; // attenuation float distance = length(light.position - FragPos); float attenuation = 1.0 / (light.constant + light.linear * distance + light.quadratic * (distance * distance)); ambient *= attenuation; diffuse *= attenuation; specular *= attenuation; vec3 result = ambient + diffuse + specular; FragColor = vec4(result, 1.0); } \u5e38\u7528\u6570\u503c # Ogre3D\u7684Wiki \u8ddd\u79bb \u5e38\u6570\u9879 \u4e00\u6b21\u9879 \u4e8c\u6b21\u9879 7 1.0 0.7 1.8 13 1.0 0.35 0.44 20 1.0 0.22 0.20 32 1.0 0.14 0.07 50 1.0 0.09 0.032 65 1.0 0.07 0.017 100 1.0 0.045 0.0075 160 1.0 0.027 0.0028 200 1.0 0.022 0.0019 325 1.0 0.014 0.0007 600 1.0 0.007 0.0002 3250 1.0 0.0014 0.000007 \u805a\u5149\u6e90(Spot Light) # \u805a\u5149\u6e90\u662f\u4ece\u9525\u5f62\u7a7a\u95f4\u4e2d\u7684\u4e00\u4e2a\u5355\u72ec\u7684\u70b9\u5904\u53d1\u51fa\u5149\u7167\u7684\u5149\u6e90\u3002\u9002\u7528\u4e8e\u6a21\u62df\u624b\u7535\u7b52\u3002 OpenGL\u4e2d\u805a\u5149\u662f\u7528\u4e00\u4e2a\u4e16\u754c\u7a7a\u95f4\u4f4d\u7f6e\u3001\u4e00\u4e2a\u65b9\u5411\u548c\u4e00\u4e2a\u5207\u5149\u89d2(Cutoff Angle)\u6765\u8868\u793a\u7684\uff0c\u5207\u5149\u89d2\u6307\u5b9a\u4e86\u805a\u5149\u7684\u534a\u5f84\uff08\u5706\u9525\u7684\u534a\u5f84\uff09\u3002 Back LightDir \uff1a\u4ece\u7247\u6bb5\u6307\u5411\u5149\u6e90\u7684\u5411\u91cf\u3002 SpotDir \uff1a\u805a\u5149\u6240\u6307\u5411\u7684\u65b9\u5411\u3002 Phi \\phi \uff1a\u6307\u5b9a\u4e86\u805a\u5149\u534a\u5f84\u7684\u5207\u5149\u89d2\u3002\u843d\u5728\u8fd9\u4e2a\u89d2\u5ea6\u4e4b\u5916\u7684\u7269\u4f53\u90fd\u4e0d\u4f1a\u88ab\u8fd9\u4e2a\u805a\u5149\u6240\u7167\u4eae\u3002 Theta \\theta \uff1a\u5411\u91cf \\bar{LightDir} \u548c \\bar{SpotDir} \u4e4b\u95f4\u7684\u5939\u89d2\u3002\u5728\u805a\u5149\u6e90\u5185\u90e8\u7684\u8bdd \\theta \u503c\u5e94\u8be5\u6bd4 \\phi \u503c\u5c0f\u3002 \u6240\u4ee5\u6211\u4eec\u8981\u505a\u7684\u5c31\u662f\u8ba1\u7b97\u5411\u91cf \\bar{LightDir} \u548c \\bar{SpotDir} \u7684\u70b9\u79ef\uff0c\u5e76\u5c06\u5b83\u4e0e\u5207\u5149\u89d2 \\phi \u5bf9\u6bd4\u3002 \u5e73\u6ed1/\u8f6f\u5316\u8fb9\u7f18 # \u4e3a\u4e86\u521b\u5efa\u4e00\u79cd\u770b\u8d77\u6765\u8fb9\u7f18\u5e73\u6ed1\u7684\u805a\u5149\uff0c\u6211\u4eec\u9700\u8981\u6a21\u62df\u805a\u5149\u6e90\u6709\u4e00\u4e2a\u5185\u5706\u9525(Inner Cone)\u548c\u4e00\u4e2a\u5916\u5706\u9525(Outer Cone),\u8ba9\u5149\u4ece\u5185\u5706\u9525\u9010\u6e10\u51cf\u6697\uff0c\u76f4\u5230\u5916\u5706\u9525\u7684\u8fb9\u754c\u3002 \u5982\u679c\u7247\u6bb5\u5728 \u5185\u5706\u9525\u4e4b\u5185\uff0c\u5b83\u7684\u5f3a\u5ea6\u662f 1.0 \u5982\u679c\u7247\u6bb5\u5728 \u5916\u5706\u9525\u4e4b\u5916\uff0c\u5b83\u7684\u5f3a\u5ea6\u662f 0.0 \u5982\u679c\u7247\u6bb5\u5728 \u5185\u5916\u5706\u9525\u4e4b\u95f4\uff0c\u5b83\u7684\u5f3a\u5ea6\u662f 0.0 ~ 1.0 \u5f3a\u5ea6\u516c\u5f0f I = \\frac{cos\\theta - cos\\gamma}{cos\\phi - cos\\gamma} \\theta \uff1a\u5411\u91cf \\bar{LightDir} \u548c \\bar{SpotDir} \u4e4b\u95f4\u7684\u5939\u89d2 \\phi \uff1a\u805a\u5149\u534a\u5f84\u7684 \u5185\u5207\u5149\u89d2 \\gamma \uff1a\u805a\u5149\u534a\u5f84\u7684 \u5916\u5207\u5149\u89d2 I \uff1a\u5728\u5f53\u524d\u7247\u6bb5\u805a\u5149\u7684\u5f3a\u5ea6 struct Light { vec3 position; vec3 direction; float cutOff; float outerCutOff; vec3 ambient; vec3 diffuse; vec3 specular; float constant; float linear; float quadratic; }; //... \u7701\u7565\u90e8\u5206\u4ee3\u7801 void main() { // ambient vec3 ambient = light.ambient * texture(material.diffuse, TexCoords).rgb; // diffuse vec3 norm = normalize(Normal); vec3 lightDir = normalize(light.position - FragPos); float diff = max(dot(norm, lightDir), 0.0); vec3 diffuse = light.diffuse * diff * texture(material.diffuse, TexCoords).rgb; // specular vec3 viewDir = normalize(viewPos - FragPos); vec3 reflectDir = reflect(-lightDir, norm); float spec = pow(max(dot(viewDir, reflectDir), 0.0), material.shininess); vec3 specular = light.specular * spec * texture(material.specular, TexCoords).rgb; // spotlight (soft edges) float theta = dot(lightDir, normalize(-light.direction)); float epsilon = (light.cutOff - light.outerCutOff); float intensity = clamp((theta - light.outerCutOff) / epsilon, 0.0, 1.0); diffuse *= intensity; specular *= intensity; // attenuation float distance = length(light.position - FragPos); float attenuation = 1.0 / (light.constant + light.linear * distance + light.quadratic * (distance * distance)); ambient *= attenuation; diffuse *= attenuation; specular *= attenuation; vec3 result = ambient + diffuse + specular; FragColor = vec4(result, 1.0); } \u591a\u5149\u6e90 Shader # #version 330 core out vec4 FragColor; struct Material { sampler2D diffuse; sampler2D specular; float shininess; }; struct DirLight { vec3 direction; vec3 ambient; vec3 diffuse; vec3 specular; }; struct PointLight { vec3 position; float constant; float linear; float quadratic; vec3 ambient; vec3 diffuse; vec3 specular; }; struct SpotLight { vec3 position; vec3 direction; float cutOff; float outerCutOff; float constant; float linear; float quadratic; vec3 ambient; vec3 diffuse; vec3 specular; }; #define NR_POINT_LIGHTS 4 in vec3 FragPos; in vec3 Normal; in vec2 TexCoords; uniform vec3 viewPos; uniform DirLight dirLight; uniform PointLight pointLights[NR_POINT_LIGHTS]; uniform SpotLight spotLight; uniform Material material; // function prototypes vec3 CalcDirLight(DirLight light, vec3 normal, vec3 viewDir); vec3 CalcPointLight(PointLight light, vec3 normal, vec3 fragPos, vec3 viewDir); vec3 CalcSpotLight(SpotLight light, vec3 normal, vec3 fragPos, vec3 viewDir); void main() { // properties vec3 norm = normalize(Normal); vec3 viewDir = normalize(viewPos - FragPos); // == ===================================================== // Our lighting is set up in 3 phases: directional, point lights and an optional flashlight // For each phase, a calculate function is defined that calculates the corresponding color // per lamp. In the main() function we take all the calculated colors and sum them up for // this fragment's final color. // == ===================================================== // phase 1: directional lighting vec3 result = CalcDirLight(dirLight, norm, viewDir); // phase 2: point lights for(int i = 0; i < NR_POINT_LIGHTS; i++) result += CalcPointLight(pointLights[i], norm, FragPos, viewDir); // phase 3: spot light result += CalcSpotLight(spotLight, norm, FragPos, viewDir); FragColor = vec4(result, 1.0); } // calculates the color when using a directional light. vec3 CalcDirLight(DirLight light, vec3 normal, vec3 viewDir) { vec3 lightDir = normalize(-light.direction); // diffuse shading float diff = max(dot(normal, lightDir), 0.0); // specular shading vec3 reflectDir = reflect(-lightDir, normal); float spec = pow(max(dot(viewDir, reflectDir), 0.0), material.shininess); // combine results vec3 ambient = light.ambient * vec3(texture(material.diffuse, TexCoords)); vec3 diffuse = light.diffuse * diff * vec3(texture(material.diffuse, TexCoords)); vec3 specular = light.specular * spec * vec3(texture(material.specular, TexCoords)); return (ambient + diffuse + specular); } // calculates the color when using a point light. vec3 CalcPointLight(PointLight light, vec3 normal, vec3 fragPos, vec3 viewDir) { vec3 lightDir = normalize(light.position - fragPos); // diffuse shading float diff = max(dot(normal, lightDir), 0.0); // specular shading vec3 reflectDir = reflect(-lightDir, normal); float spec = pow(max(dot(viewDir, reflectDir), 0.0), material.shininess); // attenuation float distance = length(light.position - fragPos); float attenuation = 1.0 / (light.constant + light.linear * distance + light.quadratic * (distance * distance)); // combine results vec3 ambient = light.ambient * vec3(texture(material.diffuse, TexCoords)); vec3 diffuse = light.diffuse * diff * vec3(texture(material.diffuse, TexCoords)); vec3 specular = light.specular * spec * vec3(texture(material.specular, TexCoords)); ambient *= attenuation; diffuse *= attenuation; specular *= attenuation; return (ambient + diffuse + specular); } // calculates the color when using a spot light. vec3 CalcSpotLight(SpotLight light, vec3 normal, vec3 fragPos, vec3 viewDir) { vec3 lightDir = normalize(light.position - fragPos); // diffuse shading float diff = max(dot(normal, lightDir), 0.0); // specular shading vec3 reflectDir = reflect(-lightDir, normal); float spec = pow(max(dot(viewDir, reflectDir), 0.0), material.shininess); // attenuation float distance = length(light.position - fragPos); float attenuation = 1.0 / (light.constant + light.linear * distance + light.quadratic * (distance * distance)); // spotlight intensity float theta = dot(lightDir, normalize(-light.direction)); float epsilon = light.cutOff - light.outerCutOff; float intensity = clamp((theta - light.outerCutOff) / epsilon, 0.0, 1.0); // combine results vec3 ambient = light.ambient * vec3(texture(material.diffuse, TexCoords)); vec3 diffuse = light.diffuse * diff * vec3(texture(material.diffuse, TexCoords)); vec3 specular = light.specular * spec * vec3(texture(material.specular, TexCoords)); ambient *= attenuation * intensity; diffuse *= attenuation * intensity; specular *= attenuation * intensity; return (ambient + diffuse + specular); }","title":"\u5149\u6e90"},{"location":"OpenGL/%E5%85%89%E6%BA%90/#_1","text":"\u53c2\u8003 https://learnopengl-cn.github.io/02%20Lighting/05%20Light%20casters/","title":"\u5149\u6e90"},{"location":"OpenGL/%E5%85%89%E6%BA%90/#directional-light","text":"\u5f53\u4e00\u4e2a\u5149\u6e90\u5904\u4e8e\u5f88\u8fdc\u7684\u5730\u65b9\u65f6\uff0c\u6765\u81ea\u5149\u6e90\u7684\u6bcf\u6761\u5149\u7ebf\u5c31\u4f1a\u8fd1\u4f3c\u4e8e\u4e92\u76f8\u5e73\u884c\u3002\u4e0d\u8bba\u7269\u4f53\u548c\u89c2\u5bdf\u8005\u5728\u4ec0\u4e48\u4f4d\u7f6e\uff0c\u770b\u8d77\u6765\u597d\u50cf\u6240\u6709\u7684\u5149\u90fd\u6765\u81ea\u4e8e\u540c\u4e00\u4e2a\u65b9\u5411\u3002\u5f53\u6211\u4eec\u4f7f\u7528\u4e00\u4e2a\u5047\u8bbe\u5149\u6e90\u5904\u4e8e\u65e0\u9650\u8fdc\u5904\u7684\u6a21\u578b\u65f6\uff0c\u5b83\u5c31\u88ab\u79f0\u4e3a\u5b9a\u5411\u5149\uff0c\u56e0\u4e3a\u6240\u6709\u7684\u5149\u7ebf\u90fd\u662f\u5e73\u884c\u7684\uff0c\u6240\u4ee5\u7269\u4f53\u4e0e\u5149\u6e90\u7684\u76f8\u5bf9\u4f4d\u7f6e\u5c31\u4e0d\u91cd\u8981\u4e86\u3002\u9002\u7528\u4e8e\u6a21\u62df\u592a\u9633\u5149\u3002 Back \u6211\u4eec\u53ef\u4ee5\u5b9a\u4e49\u4e00\u4e2a\u65b9\u5411\u5411\u91cf\u800c\u4e0d\u662f\u4f4d\u7f6e\u5411\u91cf\u6765\u6a21\u62df\u4e00\u4e2a\u5b9a\u5411\u5149 struct Light { // vec3 position; // \u4f7f\u7528\u5b9a\u5411\u5149\u5c31\u4e0d\u518d\u9700\u8981\u4e86 vec3 direction; vec3 ambient; vec3 diffuse; vec3 specular; }; ... void main() { vec3 lightDir = normalize(-light.direction); ... } \u6ce8\u610f \u6211\u4eec\u76ee\u524d\u4f7f\u7528\u7684\u5149\u7167\u8ba1\u7b97\u9700\u8981\u4e00\u4e2a\u4ece\u7247\u6bb5\u81f3\u5149\u6e90\u7684\u5149\u7ebf\u65b9\u5411\uff0c\u4f46\u4eba\u4eec\u66f4\u4e60\u60ef\u5b9a\u4e49\u5b9a\u5411\u5149\u4e3a\u4e00\u4e2a\u4ece\u5149\u6e90\u51fa\u53d1\u7684\u5168\u5c40\u65b9\u5411\u3002\u6240\u4ee5\u6211\u4eec\u9700\u8981\u5bf9\u5168\u5c40\u5149\u7167\u65b9\u5411\u5411\u91cf\u53d6\u53cd\u6765\u6539\u53d8\u5b83\u7684\u65b9\u5411\u3002","title":"\u5b9a\u5411\u5149\u6e90(Directional Light)"},{"location":"OpenGL/%E5%85%89%E6%BA%90/#point-light","text":"\u70b9\u5149\u6e90\u662f\u5904\u4e8e\u4e16\u754c\u4e2d\u67d0\u4e00\u4e2a\u4f4d\u7f6e\u7684\u5149\u6e90\uff0c\u5b83\u4f1a\u671d\u7740\u6240\u6709\u65b9\u5411\u53d1\u5149\uff0c\u4f46\u5149\u7ebf\u4f1a\u968f\u7740\u8ddd\u79bb\u9010\u6e10\u8870\u51cf\u3002\u9002\u7528\u4e8e\u6a21\u62df\u706f\u6ce1\u3002","title":"\u70b9\u5149\u6e90(Point Light)"},{"location":"OpenGL/%E5%85%89%E6%BA%90/#_2","text":"\u8870\u51cf(Attenuation)\uff1a\u968f\u7740\u5149\u7ebf\u4f20\u64ad\u8ddd\u79bb\u7684\u589e\u957f\u9010\u6e10\u524a\u51cf\u5149\u7684\u5f3a\u5ea6\u3002 \u5728\u73b0\u5b9e\u4e16\u754c\u4e2d\uff0c\u706f\u6ce1\u5728\u8fd1\u5904\u901a\u5e38\u4f1a\u975e\u5e38\u4eae\uff0c\u4f46\u968f\u7740\u8ddd\u79bb\u7684\u589e\u52a0\u5149\u6e90\u7684\u4eae\u5ea6\u4e00\u5f00\u59cb\u4f1a\u4e0b\u964d\u975e\u5e38\u5feb\uff0c\u4f46\u5728\u8fdc\u5904\u65f6\u5269\u4f59\u7684\u5149\u5f3a\u5ea6\u5c31\u4f1a\u4e0b\u964d\u7684\u975e\u5e38\u7f13\u6162\u4e86\u3002 \u8870\u51cf\u516c\u5f0f F_{att} = \\frac{1.0}{K_c + K_l * d + K_q * d^2} d\uff1a\u7247\u6bb5\u5230\u5149\u6e90\u7684\u8ddd\u79bb K_c \uff1a\u5e38\u6570\u9879\u3002\u901a\u5e38\u4e3a1.0\uff0c\u5b83\u7684\u4e3b\u8981\u4f5c\u7528\u662f\u4fdd\u8bc1\u5206\u6bcd\u6c38\u8fdc\u5927\u4e8e1\uff0c\u5426\u5219\u5728\u67d0\u4e9b\u8ddd\u79bb\u4e0a\u5b83\u53cd\u800c\u4f1a\u589e\u52a0\u5f3a\u5ea6\u3002 K_l \uff1a\u4e00\u6b21\u9879\u3002\u4e0e\u8ddd\u79bb\u503c\u76f8\u4e58\uff0c\u4fdd\u8bc1\u5149\u4ee5\u7ebf\u6027\u7684\u65b9\u5f0f\u51cf\u5c11\u5f3a\u5ea6\u3002 K_q \uff1a\u4e8c\u6b21\u9879\u3002\u4e0e\u8ddd\u79bb\u7684\u5e73\u65b9\u76f8\u4e58\uff0c\u5728\u8ddd\u79bb\u6bd4\u8f83\u5c0f\u7684\u65f6\u5019\u5f71\u54cd\u4f1a\u6bd4\u4e00\u6b21\u9879\u5c0f\u5f88\u591a\uff0c\u4f46\u5f53\u8ddd\u79bb\u503c\u6bd4\u8f83\u5927\u7684\u65f6\u5019\u5b83\u5c31\u4f1a\u6bd4\u4e00\u6b21\u9879\u66f4\u5927\u4e86\u3002 Back \u4e0b\u56fe\u53ef\u4ee5\u770b\u5230\u5149\u5728\u8fd1\u8ddd\u79bb\u7684\u65f6\u5019\u6709\u7740\u6700\u9ad8\u7684\u5f3a\u5ea6\uff0c\u4f46\u968f\u7740\u8ddd\u79bb\u589e\u957f\uff0c\u5b83\u7684\u5f3a\u5ea6\u660e\u663e\u51cf\u5f31\uff0c\u5e76\u7f13\u6162\u5730\u5728\u8ddd\u79bb\u5927\u7ea6100\u7684\u65f6\u5019\u5f3a\u5ea6\u63a5\u8fd10 struct Light { vec3 position; vec3 ambient; vec3 diffuse; vec3 specular; float constant; float linear; float quadratic; }; //...\u7701\u7565\u90e8\u5206\u4ee3\u7801 void main() { // ambient vec3 ambient = light.ambient * texture(material.diffuse, TexCoords).rgb; // diffuse vec3 norm = normalize(Normal); vec3 lightDir = normalize(light.position - FragPos); float diff = max(dot(norm, lightDir), 0.0); vec3 diffuse = light.diffuse * diff * texture(material.diffuse, TexCoords).rgb; // specular vec3 viewDir = normalize(viewPos - FragPos); vec3 reflectDir = reflect(-lightDir, norm); float spec = pow(max(dot(viewDir, reflectDir), 0.0), material.shininess); vec3 specular = light.specular * spec * texture(material.specular, TexCoords).rgb; // attenuation float distance = length(light.position - FragPos); float attenuation = 1.0 / (light.constant + light.linear * distance + light.quadratic * (distance * distance)); ambient *= attenuation; diffuse *= attenuation; specular *= attenuation; vec3 result = ambient + diffuse + specular; FragColor = vec4(result, 1.0); }","title":"\u8870\u51cf"},{"location":"OpenGL/%E5%85%89%E6%BA%90/#_3","text":"Ogre3D\u7684Wiki \u8ddd\u79bb \u5e38\u6570\u9879 \u4e00\u6b21\u9879 \u4e8c\u6b21\u9879 7 1.0 0.7 1.8 13 1.0 0.35 0.44 20 1.0 0.22 0.20 32 1.0 0.14 0.07 50 1.0 0.09 0.032 65 1.0 0.07 0.017 100 1.0 0.045 0.0075 160 1.0 0.027 0.0028 200 1.0 0.022 0.0019 325 1.0 0.014 0.0007 600 1.0 0.007 0.0002 3250 1.0 0.0014 0.000007","title":"\u5e38\u7528\u6570\u503c"},{"location":"OpenGL/%E5%85%89%E6%BA%90/#spot-light","text":"\u805a\u5149\u6e90\u662f\u4ece\u9525\u5f62\u7a7a\u95f4\u4e2d\u7684\u4e00\u4e2a\u5355\u72ec\u7684\u70b9\u5904\u53d1\u51fa\u5149\u7167\u7684\u5149\u6e90\u3002\u9002\u7528\u4e8e\u6a21\u62df\u624b\u7535\u7b52\u3002 OpenGL\u4e2d\u805a\u5149\u662f\u7528\u4e00\u4e2a\u4e16\u754c\u7a7a\u95f4\u4f4d\u7f6e\u3001\u4e00\u4e2a\u65b9\u5411\u548c\u4e00\u4e2a\u5207\u5149\u89d2(Cutoff Angle)\u6765\u8868\u793a\u7684\uff0c\u5207\u5149\u89d2\u6307\u5b9a\u4e86\u805a\u5149\u7684\u534a\u5f84\uff08\u5706\u9525\u7684\u534a\u5f84\uff09\u3002 Back LightDir \uff1a\u4ece\u7247\u6bb5\u6307\u5411\u5149\u6e90\u7684\u5411\u91cf\u3002 SpotDir \uff1a\u805a\u5149\u6240\u6307\u5411\u7684\u65b9\u5411\u3002 Phi \\phi \uff1a\u6307\u5b9a\u4e86\u805a\u5149\u534a\u5f84\u7684\u5207\u5149\u89d2\u3002\u843d\u5728\u8fd9\u4e2a\u89d2\u5ea6\u4e4b\u5916\u7684\u7269\u4f53\u90fd\u4e0d\u4f1a\u88ab\u8fd9\u4e2a\u805a\u5149\u6240\u7167\u4eae\u3002 Theta \\theta \uff1a\u5411\u91cf \\bar{LightDir} \u548c \\bar{SpotDir} \u4e4b\u95f4\u7684\u5939\u89d2\u3002\u5728\u805a\u5149\u6e90\u5185\u90e8\u7684\u8bdd \\theta \u503c\u5e94\u8be5\u6bd4 \\phi \u503c\u5c0f\u3002 \u6240\u4ee5\u6211\u4eec\u8981\u505a\u7684\u5c31\u662f\u8ba1\u7b97\u5411\u91cf \\bar{LightDir} \u548c \\bar{SpotDir} \u7684\u70b9\u79ef\uff0c\u5e76\u5c06\u5b83\u4e0e\u5207\u5149\u89d2 \\phi \u5bf9\u6bd4\u3002","title":"\u805a\u5149\u6e90(Spot Light)"},{"location":"OpenGL/%E5%85%89%E6%BA%90/#_4","text":"\u4e3a\u4e86\u521b\u5efa\u4e00\u79cd\u770b\u8d77\u6765\u8fb9\u7f18\u5e73\u6ed1\u7684\u805a\u5149\uff0c\u6211\u4eec\u9700\u8981\u6a21\u62df\u805a\u5149\u6e90\u6709\u4e00\u4e2a\u5185\u5706\u9525(Inner Cone)\u548c\u4e00\u4e2a\u5916\u5706\u9525(Outer Cone),\u8ba9\u5149\u4ece\u5185\u5706\u9525\u9010\u6e10\u51cf\u6697\uff0c\u76f4\u5230\u5916\u5706\u9525\u7684\u8fb9\u754c\u3002 \u5982\u679c\u7247\u6bb5\u5728 \u5185\u5706\u9525\u4e4b\u5185\uff0c\u5b83\u7684\u5f3a\u5ea6\u662f 1.0 \u5982\u679c\u7247\u6bb5\u5728 \u5916\u5706\u9525\u4e4b\u5916\uff0c\u5b83\u7684\u5f3a\u5ea6\u662f 0.0 \u5982\u679c\u7247\u6bb5\u5728 \u5185\u5916\u5706\u9525\u4e4b\u95f4\uff0c\u5b83\u7684\u5f3a\u5ea6\u662f 0.0 ~ 1.0 \u5f3a\u5ea6\u516c\u5f0f I = \\frac{cos\\theta - cos\\gamma}{cos\\phi - cos\\gamma} \\theta \uff1a\u5411\u91cf \\bar{LightDir} \u548c \\bar{SpotDir} \u4e4b\u95f4\u7684\u5939\u89d2 \\phi \uff1a\u805a\u5149\u534a\u5f84\u7684 \u5185\u5207\u5149\u89d2 \\gamma \uff1a\u805a\u5149\u534a\u5f84\u7684 \u5916\u5207\u5149\u89d2 I \uff1a\u5728\u5f53\u524d\u7247\u6bb5\u805a\u5149\u7684\u5f3a\u5ea6 struct Light { vec3 position; vec3 direction; float cutOff; float outerCutOff; vec3 ambient; vec3 diffuse; vec3 specular; float constant; float linear; float quadratic; }; //... \u7701\u7565\u90e8\u5206\u4ee3\u7801 void main() { // ambient vec3 ambient = light.ambient * texture(material.diffuse, TexCoords).rgb; // diffuse vec3 norm = normalize(Normal); vec3 lightDir = normalize(light.position - FragPos); float diff = max(dot(norm, lightDir), 0.0); vec3 diffuse = light.diffuse * diff * texture(material.diffuse, TexCoords).rgb; // specular vec3 viewDir = normalize(viewPos - FragPos); vec3 reflectDir = reflect(-lightDir, norm); float spec = pow(max(dot(viewDir, reflectDir), 0.0), material.shininess); vec3 specular = light.specular * spec * texture(material.specular, TexCoords).rgb; // spotlight (soft edges) float theta = dot(lightDir, normalize(-light.direction)); float epsilon = (light.cutOff - light.outerCutOff); float intensity = clamp((theta - light.outerCutOff) / epsilon, 0.0, 1.0); diffuse *= intensity; specular *= intensity; // attenuation float distance = length(light.position - FragPos); float attenuation = 1.0 / (light.constant + light.linear * distance + light.quadratic * (distance * distance)); ambient *= attenuation; diffuse *= attenuation; specular *= attenuation; vec3 result = ambient + diffuse + specular; FragColor = vec4(result, 1.0); }","title":"\u5e73\u6ed1/\u8f6f\u5316\u8fb9\u7f18"},{"location":"OpenGL/%E5%85%89%E6%BA%90/#shader","text":"#version 330 core out vec4 FragColor; struct Material { sampler2D diffuse; sampler2D specular; float shininess; }; struct DirLight { vec3 direction; vec3 ambient; vec3 diffuse; vec3 specular; }; struct PointLight { vec3 position; float constant; float linear; float quadratic; vec3 ambient; vec3 diffuse; vec3 specular; }; struct SpotLight { vec3 position; vec3 direction; float cutOff; float outerCutOff; float constant; float linear; float quadratic; vec3 ambient; vec3 diffuse; vec3 specular; }; #define NR_POINT_LIGHTS 4 in vec3 FragPos; in vec3 Normal; in vec2 TexCoords; uniform vec3 viewPos; uniform DirLight dirLight; uniform PointLight pointLights[NR_POINT_LIGHTS]; uniform SpotLight spotLight; uniform Material material; // function prototypes vec3 CalcDirLight(DirLight light, vec3 normal, vec3 viewDir); vec3 CalcPointLight(PointLight light, vec3 normal, vec3 fragPos, vec3 viewDir); vec3 CalcSpotLight(SpotLight light, vec3 normal, vec3 fragPos, vec3 viewDir); void main() { // properties vec3 norm = normalize(Normal); vec3 viewDir = normalize(viewPos - FragPos); // == ===================================================== // Our lighting is set up in 3 phases: directional, point lights and an optional flashlight // For each phase, a calculate function is defined that calculates the corresponding color // per lamp. In the main() function we take all the calculated colors and sum them up for // this fragment's final color. // == ===================================================== // phase 1: directional lighting vec3 result = CalcDirLight(dirLight, norm, viewDir); // phase 2: point lights for(int i = 0; i < NR_POINT_LIGHTS; i++) result += CalcPointLight(pointLights[i], norm, FragPos, viewDir); // phase 3: spot light result += CalcSpotLight(spotLight, norm, FragPos, viewDir); FragColor = vec4(result, 1.0); } // calculates the color when using a directional light. vec3 CalcDirLight(DirLight light, vec3 normal, vec3 viewDir) { vec3 lightDir = normalize(-light.direction); // diffuse shading float diff = max(dot(normal, lightDir), 0.0); // specular shading vec3 reflectDir = reflect(-lightDir, normal); float spec = pow(max(dot(viewDir, reflectDir), 0.0), material.shininess); // combine results vec3 ambient = light.ambient * vec3(texture(material.diffuse, TexCoords)); vec3 diffuse = light.diffuse * diff * vec3(texture(material.diffuse, TexCoords)); vec3 specular = light.specular * spec * vec3(texture(material.specular, TexCoords)); return (ambient + diffuse + specular); } // calculates the color when using a point light. vec3 CalcPointLight(PointLight light, vec3 normal, vec3 fragPos, vec3 viewDir) { vec3 lightDir = normalize(light.position - fragPos); // diffuse shading float diff = max(dot(normal, lightDir), 0.0); // specular shading vec3 reflectDir = reflect(-lightDir, normal); float spec = pow(max(dot(viewDir, reflectDir), 0.0), material.shininess); // attenuation float distance = length(light.position - fragPos); float attenuation = 1.0 / (light.constant + light.linear * distance + light.quadratic * (distance * distance)); // combine results vec3 ambient = light.ambient * vec3(texture(material.diffuse, TexCoords)); vec3 diffuse = light.diffuse * diff * vec3(texture(material.diffuse, TexCoords)); vec3 specular = light.specular * spec * vec3(texture(material.specular, TexCoords)); ambient *= attenuation; diffuse *= attenuation; specular *= attenuation; return (ambient + diffuse + specular); } // calculates the color when using a spot light. vec3 CalcSpotLight(SpotLight light, vec3 normal, vec3 fragPos, vec3 viewDir) { vec3 lightDir = normalize(light.position - fragPos); // diffuse shading float diff = max(dot(normal, lightDir), 0.0); // specular shading vec3 reflectDir = reflect(-lightDir, normal); float spec = pow(max(dot(viewDir, reflectDir), 0.0), material.shininess); // attenuation float distance = length(light.position - fragPos); float attenuation = 1.0 / (light.constant + light.linear * distance + light.quadratic * (distance * distance)); // spotlight intensity float theta = dot(lightDir, normalize(-light.direction)); float epsilon = light.cutOff - light.outerCutOff; float intensity = clamp((theta - light.outerCutOff) / epsilon, 0.0, 1.0); // combine results vec3 ambient = light.ambient * vec3(texture(material.diffuse, TexCoords)); vec3 diffuse = light.diffuse * diff * vec3(texture(material.diffuse, TexCoords)); vec3 specular = light.specular * spec * vec3(texture(material.specular, TexCoords)); ambient *= attenuation * intensity; diffuse *= attenuation * intensity; specular *= attenuation * intensity; return (ambient + diffuse + specular); }","title":"\u591a\u5149\u6e90 Shader"},{"location":"OpenGL/%E5%85%89%E7%85%A7/","text":"\u5149\u7167 # \u53c2\u8003 https://learnopengl-cn.github.io/02%20Lighting/02%20Basic%20Lighting/ \u73b0\u5b9e\u4e16\u754c\u7684\u5149\u7167\u662f\u6781\u5176\u590d\u6742\u7684\uff0c\u800c\u4e14\u4f1a\u53d7\u5230\u8bf8\u591a\u56e0\u7d20\u7684\u5f71\u54cd\uff0c\u8fd9\u662f\u6211\u4eec\u6709\u9650\u7684\u8ba1\u7b97\u80fd\u529b\u6240\u65e0\u6cd5\u6a21\u62df\u7684\u3002\u56e0\u6b64OpenGL\u7684\u5149\u7167\u4f7f\u7528\u7684\u662f\u7b80\u5316\u7684\u6a21\u578b\uff0c\u5bf9\u73b0\u5b9e\u7684\u60c5\u51b5\u8fdb\u884c\u8fd1\u4f3c\uff0c\u8fd9\u6837\u5904\u7406\u8d77\u6765\u4f1a\u66f4\u5bb9\u6613\u4e00\u4e9b\uff0c\u800c\u4e14\u770b\u8d77\u6765\u4e5f\u5dee\u4e0d\u591a\u4e00\u6837\u3002 \u8fd9\u4e9b\u5149\u7167\u6a21\u578b\u90fd\u662f\u57fa\u4e8e\u6211\u4eec\u5bf9\u5149\u7684\u7269\u7406\u7279\u6027\u7684\u7406\u89e3\u3002\u5176\u4e2d\u4e00\u4e2a\u6a21\u578b\u88ab\u79f0\u4e3a\u51af\u6c0f\u5149\u7167\u6a21\u578b(Phong Lighting Model)\u3002 \u51af\u6c0f\u5149\u7167\u6a21\u578b\u7684\u4e3b\u8981\u7ed3\u6784\u75313\u4e2a\u5206\u91cf\u7ec4\u6210\uff1a\u73af\u5883(Ambient)\u3001\u6f2b\u53cd\u5c04(Diffuse)\u548c\u955c\u9762(Specular)\u5149\u7167 \u73af\u5883\u5149\u7167(Ambient Lighting)\uff1a\u5373\u4f7f\u5728\u9ed1\u6697\u7684\u60c5\u51b5\u4e0b\uff0c\u4e16\u754c\u4e0a\u901a\u5e38\u4e5f\u4ecd\u7136\u6709\u4e00\u4e9b\u5149\u4eae\uff08\u6708\u4eae\u3001\u8fdc\u5904\u7684\u5149\uff09\uff0c\u6240\u4ee5\u7269\u4f53\u51e0\u4e4e\u6c38\u8fdc\u4e0d\u4f1a\u662f\u5b8c\u5168\u9ed1\u6697\u7684\u3002\u4e3a\u4e86\u6a21\u62df\u8fd9\u4e2a\uff0c\u6211\u4eec\u4f1a\u4f7f\u7528\u4e00\u4e2a\u73af\u5883\u5149\u7167\u5e38\u91cf\uff0c\u5b83\u6c38\u8fdc\u4f1a\u7ed9\u7269\u4f53\u4e00\u4e9b\u989c\u8272\u3002 \u6f2b\u53cd\u5c04\u5149\u7167(Diffuse Lighting)\uff1a\u6a21\u62df\u5149\u6e90\u5bf9\u7269\u4f53\u7684\u65b9\u5411\u6027\u5f71\u54cd(Directional Impact)\u3002\u5b83\u662f\u51af\u6c0f\u5149\u7167\u6a21\u578b\u4e2d\u89c6\u89c9\u4e0a\u6700\u663e\u8457\u7684\u5206\u91cf\u3002\u7269\u4f53\u7684\u67d0\u4e00\u90e8\u5206\u8d8a\u662f\u6b63\u5bf9\u7740\u5149\u6e90\uff0c\u5b83\u5c31\u4f1a\u8d8a\u4eae\u3002 \u955c\u9762\u5149\u7167(Specular Lighting)\uff1a\u6a21\u62df\u6709\u5149\u6cfd\u7269\u4f53\u4e0a\u9762\u51fa\u73b0\u7684\u4eae\u70b9\u3002\u955c\u9762\u5149\u7167\u7684\u989c\u8272\u76f8\u6bd4\u4e8e\u7269\u4f53\u7684\u989c\u8272\u4f1a\u66f4\u503e\u5411\u4e8e\u5149\u7684\u989c\u8272\u3002 \u73af\u5883\u5149\u7167(Ambient Lighting) # void main() { float ambientStrength = 0.1; //\u73af\u5883\u56e0\u5b50 vec3 ambient = ambientStrength * lightColor; vec3 result = ambient * objectColor; FragColor = vec4(result, 1.0); } \u6f2b\u53cd\u5c04\u5149\u7167(Diffuse Lighting) # \u6f2b\u53cd\u5c04\u5149\u7167\u4f7f\u7269\u4f53\u4e0a\u4e0e\u5149\u7ebf\u65b9\u5411\u8d8a\u63a5\u8fd1\u7684\u7247\u6bb5(\u5149\u7ebf\u548c\u7247\u6bb5\u7684\u89d2\u5ea6\u8d8a\u5c0f)\u8d8a\u80fd\u4ece\u5149\u6e90\u5904\u83b7\u5f97\u66f4\u591a\u7684\u4eae\u5ea6\uff0c\u5982\u679c\u5149\u7ebf\u5782\u76f4\u4e8e\u7269\u4f53\u8868\u9762\uff0c\u8fd9\u675f\u5149\u5bf9\u7269\u4f53\u7684\u5f71\u54cd\u4f1a\u6700\u5927\u5316\uff08\u5373\u8fbe\u5230\u6700\u4eae\uff09\u3002\u4e3a\u4e86\u80fd\u591f\u66f4\u597d\u7684\u7406\u89e3\u6f2b\u53cd\u5c04\u5149\u7167\uff0c\u8bf7\u770b\u4e0b\u56fe\uff1a Back \u6cd5\u5411\u91cf(Normal Vector) # \u4e3a\u4e86\u6d4b\u91cf\u5149\u7ebf\u548c\u7247\u6bb5\u7684\u89d2\u5ea6\uff0c\u6211\u4eec\u4f7f\u7528\u6cd5\u5411\u91cf(Normal Vector)\uff0c\u5b83\u662f\u4e00\u4e2a\u5782\u76f4\u4e8e\u9876\u70b9\u8868\u9762\u7684\uff08\u5355\u4f4d\uff09\u5411\u91cf\uff08\u4e0a\u56fe\u4e2d\u4ee5\u9ec4\u8272\u7bad\u5934\u8868\u793a\uff09\uff0c\u8fd9\u4e24\u4e2a\u5411\u91cf\u4e4b\u95f4\u7684\u89d2\u5ea6\u5f88\u5bb9\u6613\u5c31\u80fd\u591f\u901a\u8fc7\u70b9\u4e58\u8ba1\u7b97\u51fa\u6765\u3002\u53ef\u4ee5\u4f7f\u7528\u6cd5\u7ebf\u8d34\u56fe\u6765\u5b58\u50a8\u9876\u70b9\u7684\u6cd5\u7ebf\u3002 \u5411\u91cf\u5939\u89d2 \\bar{L} : \u5149\u7167\u5411\u91cf \\bar{N} : \u6cd5\u7ebf\u5411\u91cf || \\bar{L} ||: \u5149\u7167\u5411\u91cf\u7684\u6a21 || \\bar{N} ||: \u6cd5\u7ebf\u5411\u91cf\u7684\u6a21 \\cos \\theta = \\frac{\\bar{L} \\cdot \\bar{N}}{||\\bar{L}|| \\cdot ||\\bar{N}||} \u6ce8\uff1a\u53ef\u4ee5\u5c06 \\bar{L} \u548c \\bar{N} \u8f6c\u6362\u4e3a\u5355\u4f4d\u5411\u91cf\uff0c\u8fd9\u6837 || \\bar{L} ||\u548c|| \\bar{N} || \u5747\u4e3a1 //\u4e24\u4e2a\u5411\u91cf\u4e4b\u95f4\u7684\u89d2\u5ea6\u5927\u4e8e90\u5ea6\u65f6\uff0c\u70b9\u4e58\u7ed3\u679c\u4e3a\u8d1f\u6570\uff0c\u5bfc\u81f4\u6f2b\u53cd\u5c04\u5206\u91cf\u4e3a\u8d1f\u6570\u3002\u8d1f\u6570\u989c\u8272\u7684\u5149\u7167\u6ca1\u6709\u610f\u4e49\u3002 float diff = max(dot(norm, lightDir), 0.0); vec3 diffuse = diff * lightColor; vec3 result = (ambient + diffuse) * objectColor; FragColor = vec4(result, 1.0); \u6cd5\u7ebf\u77e9\u9635(Normal Matrix) # \u5f53\u5e94\u7528\u4e00\u4e2a\u4e0d\u7b49\u6bd4\u7f29\u653e\u65f6\uff0c\u6cd5\u5411\u91cf\u5c31\u4e0d\u4f1a\u518d\u5782\u76f4\u4e8e\u5bf9\u5e94\u7684\u8868\u9762\uff0c\u8fd9\u6837\u5149\u7167\u5c31\u4f1a\u88ab\u7834\u574f\u3002\u4fee\u590d\u8fd9\u4e2a\u884c\u4e3a\u7684\u8bc0\u7a8d\u662f\u4f7f\u7528\u4e00\u4e2a\u4e3a\u6cd5\u5411\u91cf\u4e13\u95e8\u5b9a\u5236\u7684\u6a21\u578b\u77e9\u9635\u3002\u8fd9\u4e2a\u77e9\u9635\u79f0\u4e4b\u4e3a \u6cd5\u7ebf\u77e9\u9635(Normal Matrix) \u3002\u5b83\u4f7f\u7528\u4e86\u4e00\u4e9b\u7ebf\u6027\u4ee3\u6570\u7684\u64cd\u4f5c\u6765\u79fb\u9664\u5bf9\u6cd5\u5411\u91cf\u9519\u8bef\u7f29\u653e\u7684\u5f71\u54cd\u3002 \u6cd5\u7ebf\u77e9\u9635\u88ab\u5b9a\u4e49\u4e3a\u300c\u6a21\u578b\u77e9\u9635\u7684\u9006\u77e9\u9635\u7684\u8f6c\u7f6e\u77e9\u9635\u300d Back \u6ce8\u610f \u5373\u4f7f\u662f\u5bf9\u4e8e\u7740\u8272\u5668\u6765\u8bf4\uff0c\u9006\u77e9\u9635\u4e5f\u662f\u4e00\u4e2a\u5f00\u9500\u6bd4\u8f83\u5927\u7684\u8fd0\u7b97\uff0c\u56e0\u6b64\uff0c\u5e94\u8be5\u907f\u514d\u5728\u7740\u8272\u5668\u4e2d\u8fdb\u884c\u9006\u77e9\u9635\u8fd0\u7b97\uff0c\u5728\u7ed8\u5236\u4e4b\u524d\u6700\u597d\u7528CPU\u8ba1\u7b97\u51fa\u6cd5\u7ebf\u77e9\u9635\uff0c\u7136\u540e\u901a\u8fc7uniform\u628a\u503c\u4f20\u9012\u7ed9\u7740\u8272\u5668\u3002 \u955c\u9762\u5149\u7167(Specular Lighting) # \u548c\u6f2b\u53cd\u5c04\u5149\u7167\u4e00\u6837\uff0c\u955c\u9762\u5149\u7167\u4e5f\u662f\u5149\u7684\u65b9\u5411\u5411\u91cf\u548c\u7269\u4f53\u7684\u6cd5\u5411\u91cf\u6765\u51b3\u5b9a\u7684\u3002\u955c\u9762\u5149\u7167\u662f\u57fa\u4e8e\u5149\u7684\u53cd\u5c04\u7279\u6027\uff08\u53cd\u5c04\u89d2\u7b49\u4e8e\u5165\u5c04\u89d2\uff09\u3002 \u4f46\u662f\u5b83\u4e5f\u4f9d\u8d56\u4e8e\u89c2\u5bdf\u65b9\u5411\uff0c\u53cd\u5c04\u5411\u91cf\u548c\u89c6\u7ebf\u65b9\u5411\u7684\u5939\u89d2\u8d8a\u5c0f\uff0c\u955c\u9762\u5149\u7684\u5f71\u54cd\u5c31\u4f1a\u8d8a\u5927\uff08\u5f62\u6210\u9ad8\u5149\uff09\u3002 Back float specularStrength = 0.5; vec3 viewDir = normalize(viewPos - FragPos); vec3 reflectDir = reflect(-lightDir, norm); //32\u6b21\u5e42\u3002\u8fd9\u4e2a32\u662f\u9ad8\u5149\u7684\u53cd\u5149\u5ea6(Shininess)\u3002 //\u4e00\u4e2a\u7269\u4f53\u7684\u53cd\u5149\u5ea6\u8d8a\u9ad8\uff0c\u53cd\u5c04\u5149\u7684\u80fd\u529b\u8d8a\u5f3a\uff0c\u6563\u5c04\u5f97\u8d8a\u5c11\uff0c\u9ad8\u5149\u70b9\u5c31\u4f1a\u8d8a\u5c0f\u3002 float spec = pow(max(dot(viewDir, reflectDir), 0.0), 32); vec3 specular = specularStrength * spec * lightColor; vec3 result = (ambient + diffuse + specular) * objectColor; FragColor = vec4(result, 1.0); \u4e0d\u540c \u53cd\u5149\u5ea6 \u7684\u89c6\u89c9\u6548\u679c\u5f71\u54cd Demo # //fragment shader #version 330 core out vec4 FragColor; in vec3 Normal; in vec3 FragPos; uniform vec3 lightPos; uniform vec3 viewPos; uniform vec3 lightColor; uniform vec3 objectColor; void main() { // ambient float ambientStrength = 0.1; vec3 ambient = ambientStrength * lightColor; // diffuse vec3 norm = normalize(Normal); vec3 lightDir = normalize(lightPos - FragPos); float diff = max(dot(norm, lightDir), 0.0); vec3 diffuse = diff * lightColor; // specular float specularStrength = 0.5; vec3 viewDir = normalize(viewPos - FragPos); vec3 reflectDir = reflect(-lightDir, norm); float spec = pow(max(dot(viewDir, reflectDir), 0.0), 32); vec3 specular = specularStrength * spec * lightColor; vec3 result = (ambient + diffuse + specular) * objectColor; FragColor = vec4(result, 1.0); } \u9ad8\u7ea7\u5149\u7167 # \u51af\u6c0f\u5149\u7167\u4e0d\u4ec5\u5bf9\u771f\u5b9e\u5149\u7167\u6709\u5f88\u597d\u7684\u8fd1\u4f3c\uff0c\u800c\u4e14\u6027\u80fd\u4e5f\u5f88\u9ad8\u3002\u4f46\u662f\u5b83\u7684\u955c\u9762\u53cd\u5c04\u4f1a\u5728\u4e00\u4e9b\u60c5\u51b5\u4e0b\u51fa\u73b0\u95ee\u9898\uff0c\u5f53\u89c2\u5bdf\u5411\u91cf\u548c\u53cd\u5c04\u5411\u91cf\u95f4\u7684\u5939\u89d2\u5927\u4e8e90\u5ea6\u65f6\u3002\u70b9\u4e58\u7684\u7ed3\u679c\u4e3a\u8d1f\u6570\uff0c\u955c\u9762\u5149\u5206\u91cf\u4f1a\u53d8\u4e3a0.0\u3002\u5b9e\u9645\u4e0a\u5728\u8003\u8651\u955c\u9762\u9ad8\u5149\u65f6\uff0c\u6211\u4eec\u6d4b\u91cf\u7684\u89d2\u5ea6\u5e76\u4e0d\u662f\u5149\u6e90\u4e0e\u6cd5\u7ebf\u7684\u5939\u89d2\uff0c\u800c\u662f\u89c6\u7ebf\u4e0e\u53cd\u5c04\u5149\u7ebf\u5411\u91cf\u7684\u5939\u89d2\u3002 Back Blinn-Phong\u7740\u8272\u6a21\u578b # Blinn-Phong\u6a21\u578b\u4e0e\u51af\u6c0f\u6a21\u578b\u975e\u5e38\u76f8\u4f3c\uff0c\u4f46\u662f\u5b83\u5bf9\u955c\u9762\u5149\u6a21\u578b\u7684\u5904\u7406\u4e0a\u6709\u4e00\u4e9b\u4e0d\u540c\uff0cBlinn-Phong\u6a21\u578b\u4e0d\u518d\u4f9d\u8d56\u4e8e\u53cd\u5c04\u5411\u91cf\uff0c\u800c\u662f\u91c7\u7528\u4e86\u6240\u8c13\u7684\u534a\u7a0b\u5411\u91cf(Halfway Vector)\uff0c\u5373\u5149\u7ebf\u4e0e\u89c6\u7ebf\u5939\u89d2\u4e00\u534a\u65b9\u5411\u4e0a\u7684\u4e00\u4e2a\u5355\u4f4d\u5411\u91cf\uff0c\u8fd9\u6837\u4e0d\u7ba1\u4ec0\u4e48\u60c5\u51b5\uff0c\u534a\u7a0b\u5411\u91cf\u4e0e\u8868\u9762\u6cd5\u7ebf\u4e4b\u95f4\u7684\u5939\u89d2\u90fd\u4e0d\u4f1a\u8d85\u8fc790\u5ea6\uff08\u9664\u975e\u5149\u6e90\u5728\u8868\u9762\u4ee5\u4e0b\uff09\u3002\u5f53\u534a\u7a0b\u5411\u91cf\u4e0e\u6cd5\u7ebf\u5411\u91cf\u8d8a\u63a5\u8fd1\u65f6\uff0c\u955c\u9762\u5149\u5206\u91cf\u5c31\u8d8a\u5927\u3002\u5b83\u4ea7\u751f\u7684\u6548\u679c\u4f1a\u4e0e\u51af\u6c0f\u5149\u7167\u6709\u4e9b\u8bb8\u4e0d\u540c\uff0c\u4f46\u662f\u5927\u90e8\u5206\u60c5\u51b5\u4e0b\u770b\u8d77\u6765\u4f1a\u66f4\u81ea\u7136\u4e00\u70b9\uff0c\u7279\u522b\u662f\u4f4e\u9ad8\u5149\u7684\u533a\u57df\u3002Blinn-Phong\u7740\u8272\u6a21\u578b\u6b63\u662f\u65e9\u671f\u56fa\u5b9a\u6e32\u67d3\u7ba1\u7ebf\u65f6\u4ee3\u65f6OpenGL\u6240\u91c7\u7528\u7684\u5149\u7167\u6a21\u578b\u3002 Back \u516c\u5f0f \\bar{H} = \\frac{\\bar{L} + \\bar{V}}{||\\bar{L} + \\bar{V}||} \u5bf9\u5e94\u7684GLSL\u4ee3\u7801 vec3 lightDir = normalize(lightPos - FragPos); vec3 viewDir = normalize(viewPos - FragPos); vec3 halfwayDir = normalize(lightDir + viewDir); float spec = pow(max(dot(normal, halfwayDir), 0.0), shininess); vec3 specular = lightColor * spec; \u5149\u7167\u5bf9\u6bd4 \u51af\u6c0f\u6a21\u578b \u4e0e Blinn-Phong\u6a21\u578b \u6709\u4e00\u4e9b\u7ec6\u5fae\u7684\u5dee\u522b \u534a\u7a0b\u5411\u91cf\u4e0e\u8868\u9762\u6cd5\u7ebf\u7684\u5939\u89d2\u901a\u5e38\u4f1a\u5c0f\u4e8e\u89c2\u5bdf\u4e0e\u53cd\u5c04\u5411\u91cf\u7684\u5939\u89d2\u3002\u6240\u4ee5\uff0c\u5982\u679c\u8981\u83b7\u5f97\u548c\u51af\u6c0f\u7740\u8272\u7c7b\u4f3c\u7684\u6548\u679c\uff0c\u5c31\u5fc5\u987b\u5728\u4f7f\u7528Blinn-Phong\u6a21\u578b\u65f6\u5c06\u955c\u9762\u53cd\u5149\u5ea6\u8bbe\u7f6e\u66f4\u9ad8\u4e00\u70b9\u3002\u901a\u5e38\u4f1a\u9009\u62e9\u51af\u6c0f\u7740\u8272\u65f6\u53cd\u5149\u5ea6\u5206\u91cf\u76842\u52304\u500d\u3002","title":"\u5149\u7167"},{"location":"OpenGL/%E5%85%89%E7%85%A7/#_1","text":"\u53c2\u8003 https://learnopengl-cn.github.io/02%20Lighting/02%20Basic%20Lighting/ \u73b0\u5b9e\u4e16\u754c\u7684\u5149\u7167\u662f\u6781\u5176\u590d\u6742\u7684\uff0c\u800c\u4e14\u4f1a\u53d7\u5230\u8bf8\u591a\u56e0\u7d20\u7684\u5f71\u54cd\uff0c\u8fd9\u662f\u6211\u4eec\u6709\u9650\u7684\u8ba1\u7b97\u80fd\u529b\u6240\u65e0\u6cd5\u6a21\u62df\u7684\u3002\u56e0\u6b64OpenGL\u7684\u5149\u7167\u4f7f\u7528\u7684\u662f\u7b80\u5316\u7684\u6a21\u578b\uff0c\u5bf9\u73b0\u5b9e\u7684\u60c5\u51b5\u8fdb\u884c\u8fd1\u4f3c\uff0c\u8fd9\u6837\u5904\u7406\u8d77\u6765\u4f1a\u66f4\u5bb9\u6613\u4e00\u4e9b\uff0c\u800c\u4e14\u770b\u8d77\u6765\u4e5f\u5dee\u4e0d\u591a\u4e00\u6837\u3002 \u8fd9\u4e9b\u5149\u7167\u6a21\u578b\u90fd\u662f\u57fa\u4e8e\u6211\u4eec\u5bf9\u5149\u7684\u7269\u7406\u7279\u6027\u7684\u7406\u89e3\u3002\u5176\u4e2d\u4e00\u4e2a\u6a21\u578b\u88ab\u79f0\u4e3a\u51af\u6c0f\u5149\u7167\u6a21\u578b(Phong Lighting Model)\u3002 \u51af\u6c0f\u5149\u7167\u6a21\u578b\u7684\u4e3b\u8981\u7ed3\u6784\u75313\u4e2a\u5206\u91cf\u7ec4\u6210\uff1a\u73af\u5883(Ambient)\u3001\u6f2b\u53cd\u5c04(Diffuse)\u548c\u955c\u9762(Specular)\u5149\u7167 \u73af\u5883\u5149\u7167(Ambient Lighting)\uff1a\u5373\u4f7f\u5728\u9ed1\u6697\u7684\u60c5\u51b5\u4e0b\uff0c\u4e16\u754c\u4e0a\u901a\u5e38\u4e5f\u4ecd\u7136\u6709\u4e00\u4e9b\u5149\u4eae\uff08\u6708\u4eae\u3001\u8fdc\u5904\u7684\u5149\uff09\uff0c\u6240\u4ee5\u7269\u4f53\u51e0\u4e4e\u6c38\u8fdc\u4e0d\u4f1a\u662f\u5b8c\u5168\u9ed1\u6697\u7684\u3002\u4e3a\u4e86\u6a21\u62df\u8fd9\u4e2a\uff0c\u6211\u4eec\u4f1a\u4f7f\u7528\u4e00\u4e2a\u73af\u5883\u5149\u7167\u5e38\u91cf\uff0c\u5b83\u6c38\u8fdc\u4f1a\u7ed9\u7269\u4f53\u4e00\u4e9b\u989c\u8272\u3002 \u6f2b\u53cd\u5c04\u5149\u7167(Diffuse Lighting)\uff1a\u6a21\u62df\u5149\u6e90\u5bf9\u7269\u4f53\u7684\u65b9\u5411\u6027\u5f71\u54cd(Directional Impact)\u3002\u5b83\u662f\u51af\u6c0f\u5149\u7167\u6a21\u578b\u4e2d\u89c6\u89c9\u4e0a\u6700\u663e\u8457\u7684\u5206\u91cf\u3002\u7269\u4f53\u7684\u67d0\u4e00\u90e8\u5206\u8d8a\u662f\u6b63\u5bf9\u7740\u5149\u6e90\uff0c\u5b83\u5c31\u4f1a\u8d8a\u4eae\u3002 \u955c\u9762\u5149\u7167(Specular Lighting)\uff1a\u6a21\u62df\u6709\u5149\u6cfd\u7269\u4f53\u4e0a\u9762\u51fa\u73b0\u7684\u4eae\u70b9\u3002\u955c\u9762\u5149\u7167\u7684\u989c\u8272\u76f8\u6bd4\u4e8e\u7269\u4f53\u7684\u989c\u8272\u4f1a\u66f4\u503e\u5411\u4e8e\u5149\u7684\u989c\u8272\u3002","title":"\u5149\u7167"},{"location":"OpenGL/%E5%85%89%E7%85%A7/#ambient-lighting","text":"void main() { float ambientStrength = 0.1; //\u73af\u5883\u56e0\u5b50 vec3 ambient = ambientStrength * lightColor; vec3 result = ambient * objectColor; FragColor = vec4(result, 1.0); }","title":"\u73af\u5883\u5149\u7167(Ambient Lighting)"},{"location":"OpenGL/%E5%85%89%E7%85%A7/#diffuse-lighting","text":"\u6f2b\u53cd\u5c04\u5149\u7167\u4f7f\u7269\u4f53\u4e0a\u4e0e\u5149\u7ebf\u65b9\u5411\u8d8a\u63a5\u8fd1\u7684\u7247\u6bb5(\u5149\u7ebf\u548c\u7247\u6bb5\u7684\u89d2\u5ea6\u8d8a\u5c0f)\u8d8a\u80fd\u4ece\u5149\u6e90\u5904\u83b7\u5f97\u66f4\u591a\u7684\u4eae\u5ea6\uff0c\u5982\u679c\u5149\u7ebf\u5782\u76f4\u4e8e\u7269\u4f53\u8868\u9762\uff0c\u8fd9\u675f\u5149\u5bf9\u7269\u4f53\u7684\u5f71\u54cd\u4f1a\u6700\u5927\u5316\uff08\u5373\u8fbe\u5230\u6700\u4eae\uff09\u3002\u4e3a\u4e86\u80fd\u591f\u66f4\u597d\u7684\u7406\u89e3\u6f2b\u53cd\u5c04\u5149\u7167\uff0c\u8bf7\u770b\u4e0b\u56fe\uff1a Back","title":"\u6f2b\u53cd\u5c04\u5149\u7167(Diffuse Lighting)"},{"location":"OpenGL/%E5%85%89%E7%85%A7/#normal-vector","text":"\u4e3a\u4e86\u6d4b\u91cf\u5149\u7ebf\u548c\u7247\u6bb5\u7684\u89d2\u5ea6\uff0c\u6211\u4eec\u4f7f\u7528\u6cd5\u5411\u91cf(Normal Vector)\uff0c\u5b83\u662f\u4e00\u4e2a\u5782\u76f4\u4e8e\u9876\u70b9\u8868\u9762\u7684\uff08\u5355\u4f4d\uff09\u5411\u91cf\uff08\u4e0a\u56fe\u4e2d\u4ee5\u9ec4\u8272\u7bad\u5934\u8868\u793a\uff09\uff0c\u8fd9\u4e24\u4e2a\u5411\u91cf\u4e4b\u95f4\u7684\u89d2\u5ea6\u5f88\u5bb9\u6613\u5c31\u80fd\u591f\u901a\u8fc7\u70b9\u4e58\u8ba1\u7b97\u51fa\u6765\u3002\u53ef\u4ee5\u4f7f\u7528\u6cd5\u7ebf\u8d34\u56fe\u6765\u5b58\u50a8\u9876\u70b9\u7684\u6cd5\u7ebf\u3002 \u5411\u91cf\u5939\u89d2 \\bar{L} : \u5149\u7167\u5411\u91cf \\bar{N} : \u6cd5\u7ebf\u5411\u91cf || \\bar{L} ||: \u5149\u7167\u5411\u91cf\u7684\u6a21 || \\bar{N} ||: \u6cd5\u7ebf\u5411\u91cf\u7684\u6a21 \\cos \\theta = \\frac{\\bar{L} \\cdot \\bar{N}}{||\\bar{L}|| \\cdot ||\\bar{N}||} \u6ce8\uff1a\u53ef\u4ee5\u5c06 \\bar{L} \u548c \\bar{N} \u8f6c\u6362\u4e3a\u5355\u4f4d\u5411\u91cf\uff0c\u8fd9\u6837 || \\bar{L} ||\u548c|| \\bar{N} || \u5747\u4e3a1 //\u4e24\u4e2a\u5411\u91cf\u4e4b\u95f4\u7684\u89d2\u5ea6\u5927\u4e8e90\u5ea6\u65f6\uff0c\u70b9\u4e58\u7ed3\u679c\u4e3a\u8d1f\u6570\uff0c\u5bfc\u81f4\u6f2b\u53cd\u5c04\u5206\u91cf\u4e3a\u8d1f\u6570\u3002\u8d1f\u6570\u989c\u8272\u7684\u5149\u7167\u6ca1\u6709\u610f\u4e49\u3002 float diff = max(dot(norm, lightDir), 0.0); vec3 diffuse = diff * lightColor; vec3 result = (ambient + diffuse) * objectColor; FragColor = vec4(result, 1.0);","title":"\u6cd5\u5411\u91cf(Normal Vector)"},{"location":"OpenGL/%E5%85%89%E7%85%A7/#normal-matrix","text":"\u5f53\u5e94\u7528\u4e00\u4e2a\u4e0d\u7b49\u6bd4\u7f29\u653e\u65f6\uff0c\u6cd5\u5411\u91cf\u5c31\u4e0d\u4f1a\u518d\u5782\u76f4\u4e8e\u5bf9\u5e94\u7684\u8868\u9762\uff0c\u8fd9\u6837\u5149\u7167\u5c31\u4f1a\u88ab\u7834\u574f\u3002\u4fee\u590d\u8fd9\u4e2a\u884c\u4e3a\u7684\u8bc0\u7a8d\u662f\u4f7f\u7528\u4e00\u4e2a\u4e3a\u6cd5\u5411\u91cf\u4e13\u95e8\u5b9a\u5236\u7684\u6a21\u578b\u77e9\u9635\u3002\u8fd9\u4e2a\u77e9\u9635\u79f0\u4e4b\u4e3a \u6cd5\u7ebf\u77e9\u9635(Normal Matrix) \u3002\u5b83\u4f7f\u7528\u4e86\u4e00\u4e9b\u7ebf\u6027\u4ee3\u6570\u7684\u64cd\u4f5c\u6765\u79fb\u9664\u5bf9\u6cd5\u5411\u91cf\u9519\u8bef\u7f29\u653e\u7684\u5f71\u54cd\u3002 \u6cd5\u7ebf\u77e9\u9635\u88ab\u5b9a\u4e49\u4e3a\u300c\u6a21\u578b\u77e9\u9635\u7684\u9006\u77e9\u9635\u7684\u8f6c\u7f6e\u77e9\u9635\u300d Back \u6ce8\u610f \u5373\u4f7f\u662f\u5bf9\u4e8e\u7740\u8272\u5668\u6765\u8bf4\uff0c\u9006\u77e9\u9635\u4e5f\u662f\u4e00\u4e2a\u5f00\u9500\u6bd4\u8f83\u5927\u7684\u8fd0\u7b97\uff0c\u56e0\u6b64\uff0c\u5e94\u8be5\u907f\u514d\u5728\u7740\u8272\u5668\u4e2d\u8fdb\u884c\u9006\u77e9\u9635\u8fd0\u7b97\uff0c\u5728\u7ed8\u5236\u4e4b\u524d\u6700\u597d\u7528CPU\u8ba1\u7b97\u51fa\u6cd5\u7ebf\u77e9\u9635\uff0c\u7136\u540e\u901a\u8fc7uniform\u628a\u503c\u4f20\u9012\u7ed9\u7740\u8272\u5668\u3002","title":"\u6cd5\u7ebf\u77e9\u9635(Normal Matrix)"},{"location":"OpenGL/%E5%85%89%E7%85%A7/#specular-lighting","text":"\u548c\u6f2b\u53cd\u5c04\u5149\u7167\u4e00\u6837\uff0c\u955c\u9762\u5149\u7167\u4e5f\u662f\u5149\u7684\u65b9\u5411\u5411\u91cf\u548c\u7269\u4f53\u7684\u6cd5\u5411\u91cf\u6765\u51b3\u5b9a\u7684\u3002\u955c\u9762\u5149\u7167\u662f\u57fa\u4e8e\u5149\u7684\u53cd\u5c04\u7279\u6027\uff08\u53cd\u5c04\u89d2\u7b49\u4e8e\u5165\u5c04\u89d2\uff09\u3002 \u4f46\u662f\u5b83\u4e5f\u4f9d\u8d56\u4e8e\u89c2\u5bdf\u65b9\u5411\uff0c\u53cd\u5c04\u5411\u91cf\u548c\u89c6\u7ebf\u65b9\u5411\u7684\u5939\u89d2\u8d8a\u5c0f\uff0c\u955c\u9762\u5149\u7684\u5f71\u54cd\u5c31\u4f1a\u8d8a\u5927\uff08\u5f62\u6210\u9ad8\u5149\uff09\u3002 Back float specularStrength = 0.5; vec3 viewDir = normalize(viewPos - FragPos); vec3 reflectDir = reflect(-lightDir, norm); //32\u6b21\u5e42\u3002\u8fd9\u4e2a32\u662f\u9ad8\u5149\u7684\u53cd\u5149\u5ea6(Shininess)\u3002 //\u4e00\u4e2a\u7269\u4f53\u7684\u53cd\u5149\u5ea6\u8d8a\u9ad8\uff0c\u53cd\u5c04\u5149\u7684\u80fd\u529b\u8d8a\u5f3a\uff0c\u6563\u5c04\u5f97\u8d8a\u5c11\uff0c\u9ad8\u5149\u70b9\u5c31\u4f1a\u8d8a\u5c0f\u3002 float spec = pow(max(dot(viewDir, reflectDir), 0.0), 32); vec3 specular = specularStrength * spec * lightColor; vec3 result = (ambient + diffuse + specular) * objectColor; FragColor = vec4(result, 1.0); \u4e0d\u540c \u53cd\u5149\u5ea6 \u7684\u89c6\u89c9\u6548\u679c\u5f71\u54cd","title":"\u955c\u9762\u5149\u7167(Specular Lighting)"},{"location":"OpenGL/%E5%85%89%E7%85%A7/#demo","text":"//fragment shader #version 330 core out vec4 FragColor; in vec3 Normal; in vec3 FragPos; uniform vec3 lightPos; uniform vec3 viewPos; uniform vec3 lightColor; uniform vec3 objectColor; void main() { // ambient float ambientStrength = 0.1; vec3 ambient = ambientStrength * lightColor; // diffuse vec3 norm = normalize(Normal); vec3 lightDir = normalize(lightPos - FragPos); float diff = max(dot(norm, lightDir), 0.0); vec3 diffuse = diff * lightColor; // specular float specularStrength = 0.5; vec3 viewDir = normalize(viewPos - FragPos); vec3 reflectDir = reflect(-lightDir, norm); float spec = pow(max(dot(viewDir, reflectDir), 0.0), 32); vec3 specular = specularStrength * spec * lightColor; vec3 result = (ambient + diffuse + specular) * objectColor; FragColor = vec4(result, 1.0); }","title":"Demo"},{"location":"OpenGL/%E5%85%89%E7%85%A7/#_2","text":"\u51af\u6c0f\u5149\u7167\u4e0d\u4ec5\u5bf9\u771f\u5b9e\u5149\u7167\u6709\u5f88\u597d\u7684\u8fd1\u4f3c\uff0c\u800c\u4e14\u6027\u80fd\u4e5f\u5f88\u9ad8\u3002\u4f46\u662f\u5b83\u7684\u955c\u9762\u53cd\u5c04\u4f1a\u5728\u4e00\u4e9b\u60c5\u51b5\u4e0b\u51fa\u73b0\u95ee\u9898\uff0c\u5f53\u89c2\u5bdf\u5411\u91cf\u548c\u53cd\u5c04\u5411\u91cf\u95f4\u7684\u5939\u89d2\u5927\u4e8e90\u5ea6\u65f6\u3002\u70b9\u4e58\u7684\u7ed3\u679c\u4e3a\u8d1f\u6570\uff0c\u955c\u9762\u5149\u5206\u91cf\u4f1a\u53d8\u4e3a0.0\u3002\u5b9e\u9645\u4e0a\u5728\u8003\u8651\u955c\u9762\u9ad8\u5149\u65f6\uff0c\u6211\u4eec\u6d4b\u91cf\u7684\u89d2\u5ea6\u5e76\u4e0d\u662f\u5149\u6e90\u4e0e\u6cd5\u7ebf\u7684\u5939\u89d2\uff0c\u800c\u662f\u89c6\u7ebf\u4e0e\u53cd\u5c04\u5149\u7ebf\u5411\u91cf\u7684\u5939\u89d2\u3002 Back","title":"\u9ad8\u7ea7\u5149\u7167"},{"location":"OpenGL/%E5%85%89%E7%85%A7/#blinn-phong","text":"Blinn-Phong\u6a21\u578b\u4e0e\u51af\u6c0f\u6a21\u578b\u975e\u5e38\u76f8\u4f3c\uff0c\u4f46\u662f\u5b83\u5bf9\u955c\u9762\u5149\u6a21\u578b\u7684\u5904\u7406\u4e0a\u6709\u4e00\u4e9b\u4e0d\u540c\uff0cBlinn-Phong\u6a21\u578b\u4e0d\u518d\u4f9d\u8d56\u4e8e\u53cd\u5c04\u5411\u91cf\uff0c\u800c\u662f\u91c7\u7528\u4e86\u6240\u8c13\u7684\u534a\u7a0b\u5411\u91cf(Halfway Vector)\uff0c\u5373\u5149\u7ebf\u4e0e\u89c6\u7ebf\u5939\u89d2\u4e00\u534a\u65b9\u5411\u4e0a\u7684\u4e00\u4e2a\u5355\u4f4d\u5411\u91cf\uff0c\u8fd9\u6837\u4e0d\u7ba1\u4ec0\u4e48\u60c5\u51b5\uff0c\u534a\u7a0b\u5411\u91cf\u4e0e\u8868\u9762\u6cd5\u7ebf\u4e4b\u95f4\u7684\u5939\u89d2\u90fd\u4e0d\u4f1a\u8d85\u8fc790\u5ea6\uff08\u9664\u975e\u5149\u6e90\u5728\u8868\u9762\u4ee5\u4e0b\uff09\u3002\u5f53\u534a\u7a0b\u5411\u91cf\u4e0e\u6cd5\u7ebf\u5411\u91cf\u8d8a\u63a5\u8fd1\u65f6\uff0c\u955c\u9762\u5149\u5206\u91cf\u5c31\u8d8a\u5927\u3002\u5b83\u4ea7\u751f\u7684\u6548\u679c\u4f1a\u4e0e\u51af\u6c0f\u5149\u7167\u6709\u4e9b\u8bb8\u4e0d\u540c\uff0c\u4f46\u662f\u5927\u90e8\u5206\u60c5\u51b5\u4e0b\u770b\u8d77\u6765\u4f1a\u66f4\u81ea\u7136\u4e00\u70b9\uff0c\u7279\u522b\u662f\u4f4e\u9ad8\u5149\u7684\u533a\u57df\u3002Blinn-Phong\u7740\u8272\u6a21\u578b\u6b63\u662f\u65e9\u671f\u56fa\u5b9a\u6e32\u67d3\u7ba1\u7ebf\u65f6\u4ee3\u65f6OpenGL\u6240\u91c7\u7528\u7684\u5149\u7167\u6a21\u578b\u3002 Back \u516c\u5f0f \\bar{H} = \\frac{\\bar{L} + \\bar{V}}{||\\bar{L} + \\bar{V}||} \u5bf9\u5e94\u7684GLSL\u4ee3\u7801 vec3 lightDir = normalize(lightPos - FragPos); vec3 viewDir = normalize(viewPos - FragPos); vec3 halfwayDir = normalize(lightDir + viewDir); float spec = pow(max(dot(normal, halfwayDir), 0.0), shininess); vec3 specular = lightColor * spec; \u5149\u7167\u5bf9\u6bd4 \u51af\u6c0f\u6a21\u578b \u4e0e Blinn-Phong\u6a21\u578b \u6709\u4e00\u4e9b\u7ec6\u5fae\u7684\u5dee\u522b \u534a\u7a0b\u5411\u91cf\u4e0e\u8868\u9762\u6cd5\u7ebf\u7684\u5939\u89d2\u901a\u5e38\u4f1a\u5c0f\u4e8e\u89c2\u5bdf\u4e0e\u53cd\u5c04\u5411\u91cf\u7684\u5939\u89d2\u3002\u6240\u4ee5\uff0c\u5982\u679c\u8981\u83b7\u5f97\u548c\u51af\u6c0f\u7740\u8272\u7c7b\u4f3c\u7684\u6548\u679c\uff0c\u5c31\u5fc5\u987b\u5728\u4f7f\u7528Blinn-Phong\u6a21\u578b\u65f6\u5c06\u955c\u9762\u53cd\u5149\u5ea6\u8bbe\u7f6e\u66f4\u9ad8\u4e00\u70b9\u3002\u901a\u5e38\u4f1a\u9009\u62e9\u51af\u6c0f\u7740\u8272\u65f6\u53cd\u5149\u5ea6\u5206\u91cf\u76842\u52304\u500d\u3002","title":"Blinn-Phong\u7740\u8272\u6a21\u578b"},{"location":"OpenGL/%E5%87%A0%E4%BD%95%E7%9D%80%E8%89%B2%E5%99%A8/","text":"\u51e0\u4f55\u7740\u8272\u5668 # \u51e0\u4f55\u7740\u8272\u5668(Geometry Shader)\u662f\u53ef\u9009\u7684 \u51e0\u4f55\u7740\u8272\u5668\u7684\u8f93\u5165\u662f\u4e00\u4e2a\u56fe\u5143\uff08\u5982\u70b9\u6216\u4e09\u89d2\u5f62\uff09\u7684\u4e00\u7ec4\u9876\u70b9\u3002 \u51e0\u4f55\u7740\u8272\u5668\u53ef\u4ee5\u5bf9\u9876\u70b9\u968f\u610f\u53d8\u6362 \u5b83\u80fd\u591f\u5c06\uff08\u8fd9\u4e00\u7ec4\uff09\u9876\u70b9\u53d8\u6362\u4e3a\u5b8c\u5168\u4e0d\u540c\u7684\u56fe\u5143\uff0c\u5e76\u4e14\u8fd8\u80fd\u751f\u6210\u6bd4\u539f\u6765\u66f4\u591a\u7684\u9876\u70b9\u3002 \u5982\uff1a #version 330 core layout (points) in; layout (line_strip, max_vertices = 2) out; void main() { gl_Position = gl_in[0].gl_Position + vec4(-0.1, 0.0, 0.0, 0.0); EmitVertex(); gl_Position = gl_in[0].gl_Position + vec4( 0.1, 0.0, 0.0, 0.0); EmitVertex(); EndPrimitive(); } \u6ce8 \u6bcf\u6b21\u8c03\u7528 EmitVertex() \u65f6\uff0cgl_Position \u4e2d\u7684\u5411\u91cf\u5c31\u4f1a\u88ab\u6dfb\u52a0\u5230\u56fe\u5143\u4e2d \u5f53 \u8c03\u7528 EndPrimitive() \u65f6\uff0c\u6240\u6709\u53d1\u5c04\u51fa\u7684(Emitted)\u9876\u70b9\u90fd\u4f1a\u5408\u6210\u4e3a\u6307\u5b9a\u7684\u8f93\u51fa\u6e32\u67d3\u56fe\u5143 \u5728 N\u4e2a EmitVertex() \u8c03\u7528\u4e4b\u540e\uff0c\u91cd\u590d\u8c03\u7528 EndPrimitive() \u80fd\u591f\u751f\u6210\u591a\u4e2a\u56fe\u5143 \u5728\u51e0\u4f55\u7740\u8272\u5668\u7684\u9876\u90e8\uff1a \u9700\u8981\u58f0\u660e\u4ece\u9876\u70b9\u7740\u8272\u5668\u8f93\u5165\u7684\u56fe\u5143\u7c7b\u578b \u5728 in \u5173\u952e\u5b57\u524d\u58f0\u660e\u4e00\u4e2a\u5e03\u5c40\u4fee\u9970\u7b26(Layout Qualifier) \u62ec\u53f7\u5185\u7684\u6570\u5b57\u8868\u793a\u7684\u662f\u4e00\u4e2a\u56fe\u5143\u6240\u5305\u542b\u7684\u6700\u5c0f\u9876\u70b9\u6570\u3002 \u8fd8\u9700\u8981\u6307\u5b9a\u51e0\u4f55\u7740\u8272\u5668\u8f93\u51fa\u7684\u56fe\u5143\u7c7b\u578b \u5728 out \u5173\u952e\u5b57\u524d\u9762\u52a0\u4e00\u4e2a\u5e03\u5c40\u4fee\u9970\u7b26(Layout Qualifier) \u62ec\u53f7\u5185\u7684\u6570\u5b57\u8868\u793a\u7684\u662f\u5b83\u6700\u5927\u80fd\u591f\u8f93\u51fa\u7684\u9876\u70b9\u6570\u91cf\uff08\u5982\u679c\u8d85\u8fc7\u4e86\u8fd9\u4e2a\u503c\uff0cOpenGL\u5c06\u4e0d\u4f1a\u7ed8\u5236\u591a\u51fa\u7684\u9876\u70b9\uff09 \u5e03\u5c40\u4fee\u9970\u7b26 points \uff1aGL_POINTS lines \uff1aGL_LINES \u6216 GL_LINE_STRIP lines_adjacency \uff1aGL_LINES_ADJACENCY \u6216 GL_LINE_STRIP_ADJACENCY triangles \uff1aGL_TRIANGLES\u3001GL_TRIANGLE_STRIP \u6216 GL_TRIANGLE_FAN triangles_adjacency \uff1aGL_TRIANGLES_ADJACENC Y \u6216GL_TRIANGLE_STRIP_ADJACENC","title":"\u51e0\u4f55\u7740\u8272\u5668"},{"location":"OpenGL/%E5%87%A0%E4%BD%95%E7%9D%80%E8%89%B2%E5%99%A8/#_1","text":"\u51e0\u4f55\u7740\u8272\u5668(Geometry Shader)\u662f\u53ef\u9009\u7684 \u51e0\u4f55\u7740\u8272\u5668\u7684\u8f93\u5165\u662f\u4e00\u4e2a\u56fe\u5143\uff08\u5982\u70b9\u6216\u4e09\u89d2\u5f62\uff09\u7684\u4e00\u7ec4\u9876\u70b9\u3002 \u51e0\u4f55\u7740\u8272\u5668\u53ef\u4ee5\u5bf9\u9876\u70b9\u968f\u610f\u53d8\u6362 \u5b83\u80fd\u591f\u5c06\uff08\u8fd9\u4e00\u7ec4\uff09\u9876\u70b9\u53d8\u6362\u4e3a\u5b8c\u5168\u4e0d\u540c\u7684\u56fe\u5143\uff0c\u5e76\u4e14\u8fd8\u80fd\u751f\u6210\u6bd4\u539f\u6765\u66f4\u591a\u7684\u9876\u70b9\u3002 \u5982\uff1a #version 330 core layout (points) in; layout (line_strip, max_vertices = 2) out; void main() { gl_Position = gl_in[0].gl_Position + vec4(-0.1, 0.0, 0.0, 0.0); EmitVertex(); gl_Position = gl_in[0].gl_Position + vec4( 0.1, 0.0, 0.0, 0.0); EmitVertex(); EndPrimitive(); } \u6ce8 \u6bcf\u6b21\u8c03\u7528 EmitVertex() \u65f6\uff0cgl_Position \u4e2d\u7684\u5411\u91cf\u5c31\u4f1a\u88ab\u6dfb\u52a0\u5230\u56fe\u5143\u4e2d \u5f53 \u8c03\u7528 EndPrimitive() \u65f6\uff0c\u6240\u6709\u53d1\u5c04\u51fa\u7684(Emitted)\u9876\u70b9\u90fd\u4f1a\u5408\u6210\u4e3a\u6307\u5b9a\u7684\u8f93\u51fa\u6e32\u67d3\u56fe\u5143 \u5728 N\u4e2a EmitVertex() \u8c03\u7528\u4e4b\u540e\uff0c\u91cd\u590d\u8c03\u7528 EndPrimitive() \u80fd\u591f\u751f\u6210\u591a\u4e2a\u56fe\u5143 \u5728\u51e0\u4f55\u7740\u8272\u5668\u7684\u9876\u90e8\uff1a \u9700\u8981\u58f0\u660e\u4ece\u9876\u70b9\u7740\u8272\u5668\u8f93\u5165\u7684\u56fe\u5143\u7c7b\u578b \u5728 in \u5173\u952e\u5b57\u524d\u58f0\u660e\u4e00\u4e2a\u5e03\u5c40\u4fee\u9970\u7b26(Layout Qualifier) \u62ec\u53f7\u5185\u7684\u6570\u5b57\u8868\u793a\u7684\u662f\u4e00\u4e2a\u56fe\u5143\u6240\u5305\u542b\u7684\u6700\u5c0f\u9876\u70b9\u6570\u3002 \u8fd8\u9700\u8981\u6307\u5b9a\u51e0\u4f55\u7740\u8272\u5668\u8f93\u51fa\u7684\u56fe\u5143\u7c7b\u578b \u5728 out \u5173\u952e\u5b57\u524d\u9762\u52a0\u4e00\u4e2a\u5e03\u5c40\u4fee\u9970\u7b26(Layout Qualifier) \u62ec\u53f7\u5185\u7684\u6570\u5b57\u8868\u793a\u7684\u662f\u5b83\u6700\u5927\u80fd\u591f\u8f93\u51fa\u7684\u9876\u70b9\u6570\u91cf\uff08\u5982\u679c\u8d85\u8fc7\u4e86\u8fd9\u4e2a\u503c\uff0cOpenGL\u5c06\u4e0d\u4f1a\u7ed8\u5236\u591a\u51fa\u7684\u9876\u70b9\uff09 \u5e03\u5c40\u4fee\u9970\u7b26 points \uff1aGL_POINTS lines \uff1aGL_LINES \u6216 GL_LINE_STRIP lines_adjacency \uff1aGL_LINES_ADJACENCY \u6216 GL_LINE_STRIP_ADJACENCY triangles \uff1aGL_TRIANGLES\u3001GL_TRIANGLE_STRIP \u6216 GL_TRIANGLE_FAN triangles_adjacency \uff1aGL_TRIANGLES_ADJACENC Y \u6216GL_TRIANGLE_STRIP_ADJACENC","title":"\u51e0\u4f55\u7740\u8272\u5668"},{"location":"OpenGL/%E6%9D%90%E8%B4%A8/","text":"\u6750\u8d28 # \u53c2\u8003 https://learnopengl-cn.github.io/02%20Lighting/03%20Materials/ \u6839\u636e \u4e0a\u8282\u5149\u7167 \u7684\u5185\u5bb9\uff0c\u53ef\u4ee5\u7528\u8fd9\u4e09\u4e2a\u5206\u91cf\u6765\u5b9a\u4e49\u4e00\u4e2a\u6750\u8d28\u989c\u8272(Material Color)\uff1a - \u73af\u5883\u5149\u7167(Ambient Lighting) - \u6f2b\u53cd\u5c04\u5149\u7167(Diffuse Lighting) - \u955c\u9762\u5149\u7167(Specular Lighting) \u901a\u8fc7\u4e3a\u6bcf\u4e2a\u5206\u91cf\u6307\u5b9a\u4e00\u4e2a\u989c\u8272\uff0c\u6211\u4eec\u5c31\u80fd\u591f\u7cbe\u786e\u63a7\u5236\u7269\u4f53\u7684\u989c\u8272\u4e86\u3002 \u73b0\u5728\uff0c\u6211\u4eec\u518d\u6dfb\u52a0\u53cd\u5149\u5ea6(Shininess)\u8fd9\u4e2a\u5206\u91cf\u5230\u4e0a\u8ff0\u7684\u4e09\u4e2a\u989c\u8272\u4e2d\uff0c\u8fd9\u6837\u5c31\u6709\u4e86\u6211\u4eec\u9700\u8981\u7684\u6240\u6709\u7684\u6750\u8d28\u5c5e\u6027\u4e86\uff1a #version 330 core struct Material { vec3 ambient; vec3 diffuse; vec3 specular; float shininess; }; uniform Material material; \u5e38\u7528\u6750\u8d28\u5c5e\u6027 # Name Ambient Diffuse Specular Shininess emerald(\u7956\u6bcd\u7eff) (0.0215, 0.1745, 0.0215) (0.07568, 0.61424, 0.07568) (0.633, 0.727811, 0.633) 0.6 jade(\u7fe1\u7fe0\u7eff) (0.135, 0.2225, 0.1575) (0.54, 0.89, 0.63) (0.316228, 0.316228, 0.316228) 0.1 obsidian(\u9ed1\u66dc\u77f3) (0.05375, 0.05, 0.06625) (0.18275, 0.17, 0.22525) (0.332741, 0.328634, 0.346435) 0.3 pearl(\u73cd\u73e0\u767d) (0.25, 0.20725, 0.20725) (1, 0.829, 0.829) (0.296648, 0.296648, 0.296648) 0.088 ruby(\u7ea2\u5b9d\u77f3) (0.1745, 0.01175, 0.01175) (0.61424, 0.04136, 0.04136) (0.727811, 0.626959, 0.626959) 0.6 turquoise(\u9752\u7eff\u8272) (0.1, 0.18725, 0.1745) (0.396, 0.74151, 0.69102) (0.297254, 0.30829, 0.306678) 0.1 brass(\u9ec4\u94dc) (0.329412, 0.223529, 0.027451) (0.780392, 0.568627, 0.113725) (0.992157, 0.941176, 0.807843) 0.21794872 bronze(\u9752\u94dc) (0.2125, 0.1275, 0.054) (0.714, 0.4284, 0.18144) (0.393548, 0.271906, 0.166721) 0.2 chrome(\u94ec\u5408\u91d1) (0.25, 0.25, 0.25) (0.4, 0.4, 0.4) (0.774597, 0.774597, 0.774597) 0.6 copper(\u7d2b\u94dc\u8272) (0.19125, 0.0735, 0.0225) (0.7038, 0.27048, 0.0828) (0.256777, 0.137622, 0.086014) 0.1 gold(\u91d1\u8272) (0.24725, 0.1995, 0.0745) (0.75164, 0.60648, 0.22648) (0.628281, 0.555802, 0.366065) 0.4 silver(\u94f6\u8272) (0.19225, 0.19225, 0.19225) (0.50754, 0.50754, 0.50754) (0.508273, 0.508273, 0.508273) 0.4 black plastic(\u9ed1\u5851\u6599) (0.0, 0.0, 0.0) (0.01, 0.01, 0.01) (0.50, 0.50, 0.50) 0.25 cyan plastic(\u9752\u5851\u6599) (0.0, 0.1, 0.06) (0.0, 0.50980392, 0.50980392) (0.50196078, 0.50196078, 0.50196078) 0.25 green plastic(\u7eff\u5851\u6599) (0.0, 0.0, 0.0) (0.1, 0.35, 0.1) (0.45, 0.55, 0.45) 0.25 red plastic(\u7ea2\u5851\u6599) (0.0, 0.0, 0.0) (0.5, 0.0, 0.0) (0.7, 0.6, 0.6) 0.25 white plastic(\u767d\u5851\u6599) (0.0, 0.0, 0.0) (0.55, 0.55, 0.55) (0.70, 0.70, 0.70) 0.25 yellow plastic(\u9ec4\u5851\u6599) (0.0, 0.0, 0.0) (0.5, 0.5, 0.0) (0.60, 0.60, 0.50) 0.25 black rubber(\u9ed1\u6a61\u80f6) (0.02, 0.02, 0.02) (0.01, 0.01, 0.01) (0.4, 0.4, 0.4) 0.078125 cyan rubber(\u9752\u6a61\u80f6) (0.0, 0.05, 0.05) (0.4, 0.5, 0.5) (0.04, 0.7, 0.7) 0.078125 green rubber(\u7eff\u6a61\u80f6) (0.0, 0.05, 0.0) (0.4, 0.5, 0.4) (0.04, 0.7, 0.04) 0.078125 red rubber(\u7ea2\u6a61\u80f6) (0.05, 0.0, 0.0) (0.5, 0.4, 0.4) (0.7, 0.04, 0.04) 0.078125 white rubber(\u767d\u6a61\u80f6) (0.05, 0.05, 0.05) (0.5, 0.5, 0.5) (0.7, 0.7, 0.7) 0.078125 yellow rubber(\u9ec4\u6a61\u80f6) (0.05, 0.05, 0.0) (0.5, 0.5, 0.4) (0.7, 0.7, 0.04) 0.078125 \u8bbe\u7f6e\u6750\u8d28 # void main() { // \u73af\u5883\u5149 vec3 ambient = lightColor * material.ambient; // \u6f2b\u53cd\u5c04 vec3 norm = normalize(Normal); vec3 lightDir = normalize(lightPos - FragPos); float diff = max(dot(norm, lightDir), 0.0); vec3 diffuse = lightColor * (diff * material.diffuse); // \u955c\u9762\u5149 vec3 viewDir = normalize(viewPos - FragPos); vec3 reflectDir = reflect(-lightDir, norm); float spec = pow(max(dot(viewDir, reflectDir), 0.0), material.shininess); vec3 specular = lightColor * (spec * material.specular); vec3 result = ambient + diffuse + specular; FragColor = vec4(result, 1.0); } lightingShader.setVec3(\"material.ambient\", 1.0f, 0.5f, 0.31f); lightingShader.setVec3(\"material.diffuse\", 1.0f, 0.5f, 0.31f); lightingShader.setVec3(\"material.specular\", 0.5f, 0.5f, 0.5f); lightingShader.setFloat(\"material.shininess\", 32.0f); \u5149\u7684\u5c5e\u6027 # \u5149\u6e90\u5bf9\u73af\u5883\u5149\u3001\u6f2b\u53cd\u5c04\u548c\u955c\u9762\u5149\u5206\u91cf\u5e94\u8be5\u5177\u6709\u7740\u4e0d\u540c\u7684\u5f3a\u5ea6\uff0c\u5426\u5219\u5c31\u4f1a\u50cf\u4e0a\u56fe\u4e00\u6837 \u7269\u4f53\u8fc7\u4e8e\u660e\u4eae\u3002 \u53ef\u4ee5\u521b\u5efa\u4e00\u4e9b\u5149\u7167\u5c5e\u6027\u6765\u5f71\u54cd\u6bcf\u4e2a\u5355\u72ec\u7684\u5149\u7167\u5206\u91cf struct Light { vec3 position; vec3 ambient; vec3 diffuse; vec3 specular; }; uniform Light light; vec3 ambient = light.ambient * material.ambient; vec3 diffuse = light.diffuse * (diff * material.diffuse); vec3 specular = light.specular * (spec * material.specular); lightingShader.setVec3(\"light.ambient\", 0.2f, 0.2f, 0.2f); lightingShader.setVec3(\"light.diffuse\", 0.5f, 0.5f, 0.5f); // \u5c06\u5149\u7167\u8c03\u6697\u4e86\u4e00\u4e9b\u4ee5\u642d\u914d\u573a\u666f lightingShader.setVec3(\"light.specular\", 1.0f, 1.0f, 1.0f); \u6750\u8d28\u8d34\u56fe # \u6211\u4eec\u8fd8\u53ef\u4ee5\u901a\u8fc7\u6750\u8d28\u8d34\u56fe\u66f4\u7cbe\u786e\u7684\u63a7\u5236\u5bf9\u7269\u4f53\u7684\u6bcf\u4e2a\u7247\u6bb5\u8bbe\u7f6e\u53cd\u5c04\u989c\u8272\u3002 \u56e0\u4e3a\u73af\u5883\u5149\u989c\u8272\u5728\u51e0\u4e4e\u6240\u6709\u60c5\u51b5\u4e0b\u90fd\u7b49\u4e8e\u6f2b\u53cd\u5c04\u989c\u8272\uff0c\u6240\u4ee5\u4e0d\u9700\u8981\u5c06\u5b83\u4eec\u5206\u5f00\u50a8\u5b58 struct Material { sampler2D diffuse; sampler2D specular; float shininess; }; vec3 ambient = light.ambient * vec3(texture(material.diffuse, TexCoords)); vec3 diffuse = light.diffuse * diff * vec3(texture(material.diffuse, TexCoords)); vec3 specular = light.specular * spec * vec3(texture(material.specular, TexCoords)); FragColor = vec4(ambient + diffuse + specular, 1.0);","title":"\u6750\u8d28"},{"location":"OpenGL/%E6%9D%90%E8%B4%A8/#_1","text":"\u53c2\u8003 https://learnopengl-cn.github.io/02%20Lighting/03%20Materials/ \u6839\u636e \u4e0a\u8282\u5149\u7167 \u7684\u5185\u5bb9\uff0c\u53ef\u4ee5\u7528\u8fd9\u4e09\u4e2a\u5206\u91cf\u6765\u5b9a\u4e49\u4e00\u4e2a\u6750\u8d28\u989c\u8272(Material Color)\uff1a - \u73af\u5883\u5149\u7167(Ambient Lighting) - \u6f2b\u53cd\u5c04\u5149\u7167(Diffuse Lighting) - \u955c\u9762\u5149\u7167(Specular Lighting) \u901a\u8fc7\u4e3a\u6bcf\u4e2a\u5206\u91cf\u6307\u5b9a\u4e00\u4e2a\u989c\u8272\uff0c\u6211\u4eec\u5c31\u80fd\u591f\u7cbe\u786e\u63a7\u5236\u7269\u4f53\u7684\u989c\u8272\u4e86\u3002 \u73b0\u5728\uff0c\u6211\u4eec\u518d\u6dfb\u52a0\u53cd\u5149\u5ea6(Shininess)\u8fd9\u4e2a\u5206\u91cf\u5230\u4e0a\u8ff0\u7684\u4e09\u4e2a\u989c\u8272\u4e2d\uff0c\u8fd9\u6837\u5c31\u6709\u4e86\u6211\u4eec\u9700\u8981\u7684\u6240\u6709\u7684\u6750\u8d28\u5c5e\u6027\u4e86\uff1a #version 330 core struct Material { vec3 ambient; vec3 diffuse; vec3 specular; float shininess; }; uniform Material material;","title":"\u6750\u8d28"},{"location":"OpenGL/%E6%9D%90%E8%B4%A8/#_2","text":"Name Ambient Diffuse Specular Shininess emerald(\u7956\u6bcd\u7eff) (0.0215, 0.1745, 0.0215) (0.07568, 0.61424, 0.07568) (0.633, 0.727811, 0.633) 0.6 jade(\u7fe1\u7fe0\u7eff) (0.135, 0.2225, 0.1575) (0.54, 0.89, 0.63) (0.316228, 0.316228, 0.316228) 0.1 obsidian(\u9ed1\u66dc\u77f3) (0.05375, 0.05, 0.06625) (0.18275, 0.17, 0.22525) (0.332741, 0.328634, 0.346435) 0.3 pearl(\u73cd\u73e0\u767d) (0.25, 0.20725, 0.20725) (1, 0.829, 0.829) (0.296648, 0.296648, 0.296648) 0.088 ruby(\u7ea2\u5b9d\u77f3) (0.1745, 0.01175, 0.01175) (0.61424, 0.04136, 0.04136) (0.727811, 0.626959, 0.626959) 0.6 turquoise(\u9752\u7eff\u8272) (0.1, 0.18725, 0.1745) (0.396, 0.74151, 0.69102) (0.297254, 0.30829, 0.306678) 0.1 brass(\u9ec4\u94dc) (0.329412, 0.223529, 0.027451) (0.780392, 0.568627, 0.113725) (0.992157, 0.941176, 0.807843) 0.21794872 bronze(\u9752\u94dc) (0.2125, 0.1275, 0.054) (0.714, 0.4284, 0.18144) (0.393548, 0.271906, 0.166721) 0.2 chrome(\u94ec\u5408\u91d1) (0.25, 0.25, 0.25) (0.4, 0.4, 0.4) (0.774597, 0.774597, 0.774597) 0.6 copper(\u7d2b\u94dc\u8272) (0.19125, 0.0735, 0.0225) (0.7038, 0.27048, 0.0828) (0.256777, 0.137622, 0.086014) 0.1 gold(\u91d1\u8272) (0.24725, 0.1995, 0.0745) (0.75164, 0.60648, 0.22648) (0.628281, 0.555802, 0.366065) 0.4 silver(\u94f6\u8272) (0.19225, 0.19225, 0.19225) (0.50754, 0.50754, 0.50754) (0.508273, 0.508273, 0.508273) 0.4 black plastic(\u9ed1\u5851\u6599) (0.0, 0.0, 0.0) (0.01, 0.01, 0.01) (0.50, 0.50, 0.50) 0.25 cyan plastic(\u9752\u5851\u6599) (0.0, 0.1, 0.06) (0.0, 0.50980392, 0.50980392) (0.50196078, 0.50196078, 0.50196078) 0.25 green plastic(\u7eff\u5851\u6599) (0.0, 0.0, 0.0) (0.1, 0.35, 0.1) (0.45, 0.55, 0.45) 0.25 red plastic(\u7ea2\u5851\u6599) (0.0, 0.0, 0.0) (0.5, 0.0, 0.0) (0.7, 0.6, 0.6) 0.25 white plastic(\u767d\u5851\u6599) (0.0, 0.0, 0.0) (0.55, 0.55, 0.55) (0.70, 0.70, 0.70) 0.25 yellow plastic(\u9ec4\u5851\u6599) (0.0, 0.0, 0.0) (0.5, 0.5, 0.0) (0.60, 0.60, 0.50) 0.25 black rubber(\u9ed1\u6a61\u80f6) (0.02, 0.02, 0.02) (0.01, 0.01, 0.01) (0.4, 0.4, 0.4) 0.078125 cyan rubber(\u9752\u6a61\u80f6) (0.0, 0.05, 0.05) (0.4, 0.5, 0.5) (0.04, 0.7, 0.7) 0.078125 green rubber(\u7eff\u6a61\u80f6) (0.0, 0.05, 0.0) (0.4, 0.5, 0.4) (0.04, 0.7, 0.04) 0.078125 red rubber(\u7ea2\u6a61\u80f6) (0.05, 0.0, 0.0) (0.5, 0.4, 0.4) (0.7, 0.04, 0.04) 0.078125 white rubber(\u767d\u6a61\u80f6) (0.05, 0.05, 0.05) (0.5, 0.5, 0.5) (0.7, 0.7, 0.7) 0.078125 yellow rubber(\u9ec4\u6a61\u80f6) (0.05, 0.05, 0.0) (0.5, 0.5, 0.4) (0.7, 0.7, 0.04) 0.078125","title":"\u5e38\u7528\u6750\u8d28\u5c5e\u6027"},{"location":"OpenGL/%E6%9D%90%E8%B4%A8/#_3","text":"void main() { // \u73af\u5883\u5149 vec3 ambient = lightColor * material.ambient; // \u6f2b\u53cd\u5c04 vec3 norm = normalize(Normal); vec3 lightDir = normalize(lightPos - FragPos); float diff = max(dot(norm, lightDir), 0.0); vec3 diffuse = lightColor * (diff * material.diffuse); // \u955c\u9762\u5149 vec3 viewDir = normalize(viewPos - FragPos); vec3 reflectDir = reflect(-lightDir, norm); float spec = pow(max(dot(viewDir, reflectDir), 0.0), material.shininess); vec3 specular = lightColor * (spec * material.specular); vec3 result = ambient + diffuse + specular; FragColor = vec4(result, 1.0); } lightingShader.setVec3(\"material.ambient\", 1.0f, 0.5f, 0.31f); lightingShader.setVec3(\"material.diffuse\", 1.0f, 0.5f, 0.31f); lightingShader.setVec3(\"material.specular\", 0.5f, 0.5f, 0.5f); lightingShader.setFloat(\"material.shininess\", 32.0f);","title":"\u8bbe\u7f6e\u6750\u8d28"},{"location":"OpenGL/%E6%9D%90%E8%B4%A8/#_4","text":"\u5149\u6e90\u5bf9\u73af\u5883\u5149\u3001\u6f2b\u53cd\u5c04\u548c\u955c\u9762\u5149\u5206\u91cf\u5e94\u8be5\u5177\u6709\u7740\u4e0d\u540c\u7684\u5f3a\u5ea6\uff0c\u5426\u5219\u5c31\u4f1a\u50cf\u4e0a\u56fe\u4e00\u6837 \u7269\u4f53\u8fc7\u4e8e\u660e\u4eae\u3002 \u53ef\u4ee5\u521b\u5efa\u4e00\u4e9b\u5149\u7167\u5c5e\u6027\u6765\u5f71\u54cd\u6bcf\u4e2a\u5355\u72ec\u7684\u5149\u7167\u5206\u91cf struct Light { vec3 position; vec3 ambient; vec3 diffuse; vec3 specular; }; uniform Light light; vec3 ambient = light.ambient * material.ambient; vec3 diffuse = light.diffuse * (diff * material.diffuse); vec3 specular = light.specular * (spec * material.specular); lightingShader.setVec3(\"light.ambient\", 0.2f, 0.2f, 0.2f); lightingShader.setVec3(\"light.diffuse\", 0.5f, 0.5f, 0.5f); // \u5c06\u5149\u7167\u8c03\u6697\u4e86\u4e00\u4e9b\u4ee5\u642d\u914d\u573a\u666f lightingShader.setVec3(\"light.specular\", 1.0f, 1.0f, 1.0f);","title":"\u5149\u7684\u5c5e\u6027"},{"location":"OpenGL/%E6%9D%90%E8%B4%A8/#_5","text":"\u6211\u4eec\u8fd8\u53ef\u4ee5\u901a\u8fc7\u6750\u8d28\u8d34\u56fe\u66f4\u7cbe\u786e\u7684\u63a7\u5236\u5bf9\u7269\u4f53\u7684\u6bcf\u4e2a\u7247\u6bb5\u8bbe\u7f6e\u53cd\u5c04\u989c\u8272\u3002 \u56e0\u4e3a\u73af\u5883\u5149\u989c\u8272\u5728\u51e0\u4e4e\u6240\u6709\u60c5\u51b5\u4e0b\u90fd\u7b49\u4e8e\u6f2b\u53cd\u5c04\u989c\u8272\uff0c\u6240\u4ee5\u4e0d\u9700\u8981\u5c06\u5b83\u4eec\u5206\u5f00\u50a8\u5b58 struct Material { sampler2D diffuse; sampler2D specular; float shininess; }; vec3 ambient = light.ambient * vec3(texture(material.diffuse, TexCoords)); vec3 diffuse = light.diffuse * diff * vec3(texture(material.diffuse, TexCoords)); vec3 specular = light.specular * spec * vec3(texture(material.specular, TexCoords)); FragColor = vec4(ambient + diffuse + specular, 1.0);","title":"\u6750\u8d28\u8d34\u56fe"},{"location":"OpenGL/%E6%B3%95%E7%BA%BF%E8%B4%B4%E5%9B%BE/","text":"\u6cd5\u7ebf\u8d34\u56fe # \u5f53\u5149\u7167\u5c04\u5230\u7269\u4f53\u8868\u9762\u65f6\uff0c\u6211\u4eec\u662f\u901a\u8fc7\u8868\u9762\u7684\u6cd5\u7ebf\u5411\u91cf\u6765\u8ba1\u7b97\u5149\u7167\u7684\u3002\u73b0\u5b9e\u4e2d\u7684\u7269\u4f53\u8868\u9762\u5e76\u975e\u662f\u5e73\u5766\u7684\uff0c\u800c\u662f\u8868\u73b0\u51fa\u65e0\u6570\uff08\u51f9\u51f8\u4e0d\u5e73\u7684\uff09\u7ec6\u8282\u3002\u5982\u4f55\u8868\u73b0\u51fa\u8fd9\u4e9b\u7ec6\u8282\u5462\uff1f\u8ba9\u6bcf\u4e2a Fragment \u4f7f\u7528\u81ea\u5df1\u7684\u6cd5\u7ebf\uff0c\u5c31\u53ef\u4ee5\u8ba9\u5149\u7167\u76f8\u4fe1\u4e00\u4e2a\u8868\u9762\u662f\u7531\u5f88\u591a\u5fae\u5c0f\u7684\uff08\u5782\u76f4\u4e8e\u6cd5\u7ebf\u5411\u91cf\u7684\uff09\u5e73\u9762\u6240\u7ec4\u6210\u7684\uff0c\u7269\u4f53\u8868\u9762\u7684\u7ec6\u8282\u5c06\u4f1a\u5f97\u5230\u6781\u5927\u63d0\u5347\u3002\u8fd9\u79cd\u6bcf\u4e2afragment\u4f7f\u7528\u5404\u81ea\u7684\u6cd5\u7ebf\uff0c\u66ff\u4ee3\u4e00\u4e2a\u9762\u4e0a\u6240\u6709fragment\u4f7f\u7528\u540c\u4e00\u4e2a\u6cd5\u7ebf\u7684\u6280\u672f\u53eb\u505a\u6cd5\u7ebf\u8d34\u56fe\uff08normal mapping\uff09\u6216\u51f9\u51f8\u8d34\u56fe\uff08bump mapping\uff09\u3002 Back \u4e3a\u4f7f\u6cd5\u7ebf\u8d34\u56fe\u5de5\u4f5c\uff0c\u9700\u8981\u4e3a\u6bcf\u4e2afragment\u63d0\u4f9b\u4e00\u4e2a\u6cd5\u7ebf\u3002\u50cfdiffuse\u8d34\u56fe\u548cspecular\u8d34\u56fe\u4e00\u6837\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u4e00\u4e2a2D\u7eb9\u7406\u6765\u50a8\u5b58\u6cd5\u7ebf\u6570\u636e\u30022D\u7eb9\u7406\u4e0d\u4ec5\u53ef\u4ee5\u50a8\u5b58\u989c\u8272\u548c\u5149\u7167\u6570\u636e\uff0c\u8fd8\u53ef\u4ee5\u50a8\u5b58\u6cd5\u7ebf\u5411\u91cf\u3002\u8fd9\u6837\u5c31\u53ef\u4ee5\u4ece2D\u7eb9\u7406\u4e2d\u91c7\u6837\u5f97\u5230\u7279\u5b9a\u7eb9\u7406\u7684\u6cd5\u7ebf\u5411\u91cf\u3002 \u6cd5\u7ebf\u8d34\u56fe \u5c06\u6cd5\u7ebf\u5411\u91cf\u7684x\u3001y\u3001z\u5143\u7d20\u50a8\u5b58\u5230\u7eb9\u7406\u4e2d\uff0c\u4ee3\u66ff\u989c\u8272\u7684r\u3001g\u3001b\u5143\u7d20\u3002 \u6cd5\u7ebf\u5411\u91cf\u7684\u8303\u56f4\u5728-1\u52301\u4e4b\u95f4\uff0c\u5148\u8981\u5c06\u5176\u6620\u5c04\u52300\u52301\u7684\u8303\u56f4\uff1a vec3 rgb_normal = normal * 0.5 + 0.5; // \u4ece [-1,1] \u8f6c\u6362\u81f3 [0,1] \u5c06\u6cd5\u7ebf\u5411\u91cf\u53d8\u6362\u4e3aRGB\u989c\u8272\u5143\u7d20\uff0c\u5c31\u80fd\u628a\u6839\u636e\u8868\u9762\u7684\u5f62\u72b6\u7684fragment\u7684\u6cd5\u7ebf\u4fdd\u5b58\u57282D\u7eb9\u7406\u4e2d\u3002\u5982\uff1a \u6ce8\u610f \u6cd5\u7ebf\u8d34\u56fe\u662f\u4e00\u79cd\u504f\u84dd\u8272\u8c03\u7684\u7eb9\u7406\u3002\u8fd9\u662f\u56e0\u4e3a\u6240\u6709\u6cd5\u7ebf\u7684\u6307\u5411\u90fd\u504f\u5411z\u8f74\uff080, 0, 1\uff09\u8fd9\u662f\u4e00\u79cd\u504f\u84dd\u7684\u989c\u8272\u3002\u6cd5\u7ebf\u5411\u91cf\u4ecez\u8f74\u65b9\u5411\u4e5f\u5411\u5176\u4ed6\u65b9\u5411\u8f7b\u5fae\u504f\u79fb\uff0c\u989c\u8272\u4e5f\u5c31\u53d1\u751f\u4e86\u8f7b\u5fae\u53d8\u5316\uff0c\u8fd9\u6837\u770b\u8d77\u6765\u4fbf\u6709\u4e86\u4e00\u79cd\u6df1\u5ea6\u3002\u4f8b\u5982\uff0c\u4e0a\u56fe\u4e2d\u53ef\u4ee5\u770b\u5230\u5728\u6bcf\u4e2a\u7816\u5757\u7684\u9876\u90e8\uff0c\u989c\u8272\u503e\u5411\u4e8e\u504f\u7eff\uff0c\u8fd9\u662f\u56e0\u4e3a\u7816\u5757\u7684\u9876\u90e8\u7684\u6cd5\u7ebf\u504f\u5411\u4e8e\u6307\u5411\u6b63y\u8f74\u65b9\u5411\uff080, 1, 0\uff09\uff0c\u8fd9\u6837\u5b83\u5c31\u662f\u7eff\u8272\u7684\u4e86\u3002 uniform sampler2D normalMap; void main() { // \u4ece\u6cd5\u7ebf\u8d34\u56fe\u8303\u56f4[0,1]\u83b7\u53d6\u6cd5\u7ebf normal = texture(normalMap, fs_in.TexCoords).rgb; // \u5c06\u6cd5\u7ebf\u5411\u91cf\u8f6c\u6362\u4e3a\u8303\u56f4[-1,1] normal = normalize(normal * 2.0 - 1.0); [...] // \u50cf\u5f80\u5e38\u90a3\u6837\u5904\u7406\u5149\u7167 } \u5207\u7ebf\u7a7a\u95f4\uff08tangent space\uff09 # \u6cd5\u7ebf\u8d34\u56fe\u4e2d\u7684\u6240\u6709\u6cd5\u7ebf\u5411\u91cf\u90fd\u662f\u6307\u5411\u6b63z\u65b9\u5411\u7684\u3002\u5f53\u7269\u4f53\u8868\u9762\u7684\u6cd5\u7ebf\u6307\u5411\u6b63y\u65b9\u5411\u65f6\u600e\u4e48\u529e\u5462\uff1f \u5207\u7ebf\u7a7a\u95f4 \u5728\u4e00\u4e2a\u4e0d\u540c\u7684\u5750\u6807\u7a7a\u95f4\u4e2d\u8fdb\u884c\u5149\u7167\uff0c\u8fd9\u4e2a\u5750\u6807\u7a7a\u95f4\u91cc\uff0c\u6cd5\u7ebf\u8d34\u56fe\u5411\u91cf\u603b\u662f\u6307\u5411\u8fd9\u4e2a\u5750\u6807\u7a7a\u95f4\u7684\u6b63z\u65b9\u5411\uff1b\u6240\u6709\u7684\u5149\u7167\u5411\u91cf\u90fd\u76f8\u5bf9\u4e0e\u8fd9\u4e2a\u6b63z\u65b9\u5411\u8fdb\u884c\u53d8\u6362\u3002\u8fd9\u6837\u5c31\u80fd\u4f7f\u7528\u540c\u6837\u7684\u6cd5\u7ebf\u8d34\u56fe\uff0c\u4e0d\u7ba1\u671d\u5411\u95ee\u9898\u3002\u8fd9\u4e2a\u5750\u6807\u7a7a\u95f4\u53eb\u505a\u5207\u7ebf\u7a7a\u95f4\uff08tangent space\uff09\u3002 \u6cd5\u7ebf\u8d34\u56fe \u6cd5\u7ebf\u8d34\u56fe\u4e2d\u7684\u6cd5\u7ebf\u5411\u91cf\u5b9a\u4e49\u5728\u5207\u7ebf\u7a7a\u95f4\u4e2d\uff0c\u5728\u5207\u7ebf\u7a7a\u95f4\u4e2d\uff0c\u6cd5\u7ebf\u6c38\u8fdc\u6307\u7740\u6b63z\u65b9\u5411\u3002\u5b83\u5c31\u50cf\u6cd5\u7ebf\u8d34\u56fe\u5411\u91cf\u7684\u672c\u5730\u7a7a\u95f4\u3002\u4f7f\u7528\u4e00\u4e2a\u7279\u5b9a\u7684\u77e9\u9635\u6211\u4eec\u5c31\u80fd\u5c06\u5207\u7ebf\u7a7a\u95f4\u4e2d\u7684\u6cd5\u7ebf\u5411\u91cf\u8f6c\u6210\u4e16\u754c\u6216\u89c6\u56fe\u7a7a\u95f4\u4e0b\uff0c\u4f7f\u5b83\u4eec\u8f6c\u5411\u5230\u6700\u7ec8\u7684\u8d34\u56fe\u8868\u9762\u7684\u65b9\u5411\u3002 TBN\u77e9\u9635 TBN\u77e9\u9635\u8fd9\u4e09\u4e2a\u5b57\u6bcd\u5206\u522b\u4ee3\u8868 \u5207\u7ebf(Tagent)\u3001\u526f\u5207\u7ebf(Bitangent)\u548c\u6cd5\u7ebf(Normal) \u5411\u91cf\u3002\u8981\u5efa\u6784\u8fd9\u6837\u4e00\u4e2a\u628a\u5207\u7ebf\u7a7a\u95f4\u8f6c\u53d8\u4e3a\u4e0d\u540c\u7a7a\u95f4\u7684\u53d8\u5f02\u77e9\u9635\uff0c\u9700\u8981\u4e09\u4e2a\u76f8\u4e92\u5782\u76f4\u7684\u5411\u91cf\uff0c\u5b83\u4eec\u6cbf\u4e00\u4e2a\u8868\u9762\u7684\u6cd5\u7ebf\u8d34\u56fe\u5bf9\u9f50\u4e8e\uff1a\u4e0a\u3001\u53f3\u3001\u524d TBN\u77e9\u9635\u7684\u8ba1\u7b97\u53c2\u8003","title":"\u6cd5\u7ebf\u8d34\u56fe"},{"location":"OpenGL/%E6%B3%95%E7%BA%BF%E8%B4%B4%E5%9B%BE/#_1","text":"\u5f53\u5149\u7167\u5c04\u5230\u7269\u4f53\u8868\u9762\u65f6\uff0c\u6211\u4eec\u662f\u901a\u8fc7\u8868\u9762\u7684\u6cd5\u7ebf\u5411\u91cf\u6765\u8ba1\u7b97\u5149\u7167\u7684\u3002\u73b0\u5b9e\u4e2d\u7684\u7269\u4f53\u8868\u9762\u5e76\u975e\u662f\u5e73\u5766\u7684\uff0c\u800c\u662f\u8868\u73b0\u51fa\u65e0\u6570\uff08\u51f9\u51f8\u4e0d\u5e73\u7684\uff09\u7ec6\u8282\u3002\u5982\u4f55\u8868\u73b0\u51fa\u8fd9\u4e9b\u7ec6\u8282\u5462\uff1f\u8ba9\u6bcf\u4e2a Fragment \u4f7f\u7528\u81ea\u5df1\u7684\u6cd5\u7ebf\uff0c\u5c31\u53ef\u4ee5\u8ba9\u5149\u7167\u76f8\u4fe1\u4e00\u4e2a\u8868\u9762\u662f\u7531\u5f88\u591a\u5fae\u5c0f\u7684\uff08\u5782\u76f4\u4e8e\u6cd5\u7ebf\u5411\u91cf\u7684\uff09\u5e73\u9762\u6240\u7ec4\u6210\u7684\uff0c\u7269\u4f53\u8868\u9762\u7684\u7ec6\u8282\u5c06\u4f1a\u5f97\u5230\u6781\u5927\u63d0\u5347\u3002\u8fd9\u79cd\u6bcf\u4e2afragment\u4f7f\u7528\u5404\u81ea\u7684\u6cd5\u7ebf\uff0c\u66ff\u4ee3\u4e00\u4e2a\u9762\u4e0a\u6240\u6709fragment\u4f7f\u7528\u540c\u4e00\u4e2a\u6cd5\u7ebf\u7684\u6280\u672f\u53eb\u505a\u6cd5\u7ebf\u8d34\u56fe\uff08normal mapping\uff09\u6216\u51f9\u51f8\u8d34\u56fe\uff08bump mapping\uff09\u3002 Back \u4e3a\u4f7f\u6cd5\u7ebf\u8d34\u56fe\u5de5\u4f5c\uff0c\u9700\u8981\u4e3a\u6bcf\u4e2afragment\u63d0\u4f9b\u4e00\u4e2a\u6cd5\u7ebf\u3002\u50cfdiffuse\u8d34\u56fe\u548cspecular\u8d34\u56fe\u4e00\u6837\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u4e00\u4e2a2D\u7eb9\u7406\u6765\u50a8\u5b58\u6cd5\u7ebf\u6570\u636e\u30022D\u7eb9\u7406\u4e0d\u4ec5\u53ef\u4ee5\u50a8\u5b58\u989c\u8272\u548c\u5149\u7167\u6570\u636e\uff0c\u8fd8\u53ef\u4ee5\u50a8\u5b58\u6cd5\u7ebf\u5411\u91cf\u3002\u8fd9\u6837\u5c31\u53ef\u4ee5\u4ece2D\u7eb9\u7406\u4e2d\u91c7\u6837\u5f97\u5230\u7279\u5b9a\u7eb9\u7406\u7684\u6cd5\u7ebf\u5411\u91cf\u3002 \u6cd5\u7ebf\u8d34\u56fe \u5c06\u6cd5\u7ebf\u5411\u91cf\u7684x\u3001y\u3001z\u5143\u7d20\u50a8\u5b58\u5230\u7eb9\u7406\u4e2d\uff0c\u4ee3\u66ff\u989c\u8272\u7684r\u3001g\u3001b\u5143\u7d20\u3002 \u6cd5\u7ebf\u5411\u91cf\u7684\u8303\u56f4\u5728-1\u52301\u4e4b\u95f4\uff0c\u5148\u8981\u5c06\u5176\u6620\u5c04\u52300\u52301\u7684\u8303\u56f4\uff1a vec3 rgb_normal = normal * 0.5 + 0.5; // \u4ece [-1,1] \u8f6c\u6362\u81f3 [0,1] \u5c06\u6cd5\u7ebf\u5411\u91cf\u53d8\u6362\u4e3aRGB\u989c\u8272\u5143\u7d20\uff0c\u5c31\u80fd\u628a\u6839\u636e\u8868\u9762\u7684\u5f62\u72b6\u7684fragment\u7684\u6cd5\u7ebf\u4fdd\u5b58\u57282D\u7eb9\u7406\u4e2d\u3002\u5982\uff1a \u6ce8\u610f \u6cd5\u7ebf\u8d34\u56fe\u662f\u4e00\u79cd\u504f\u84dd\u8272\u8c03\u7684\u7eb9\u7406\u3002\u8fd9\u662f\u56e0\u4e3a\u6240\u6709\u6cd5\u7ebf\u7684\u6307\u5411\u90fd\u504f\u5411z\u8f74\uff080, 0, 1\uff09\u8fd9\u662f\u4e00\u79cd\u504f\u84dd\u7684\u989c\u8272\u3002\u6cd5\u7ebf\u5411\u91cf\u4ecez\u8f74\u65b9\u5411\u4e5f\u5411\u5176\u4ed6\u65b9\u5411\u8f7b\u5fae\u504f\u79fb\uff0c\u989c\u8272\u4e5f\u5c31\u53d1\u751f\u4e86\u8f7b\u5fae\u53d8\u5316\uff0c\u8fd9\u6837\u770b\u8d77\u6765\u4fbf\u6709\u4e86\u4e00\u79cd\u6df1\u5ea6\u3002\u4f8b\u5982\uff0c\u4e0a\u56fe\u4e2d\u53ef\u4ee5\u770b\u5230\u5728\u6bcf\u4e2a\u7816\u5757\u7684\u9876\u90e8\uff0c\u989c\u8272\u503e\u5411\u4e8e\u504f\u7eff\uff0c\u8fd9\u662f\u56e0\u4e3a\u7816\u5757\u7684\u9876\u90e8\u7684\u6cd5\u7ebf\u504f\u5411\u4e8e\u6307\u5411\u6b63y\u8f74\u65b9\u5411\uff080, 1, 0\uff09\uff0c\u8fd9\u6837\u5b83\u5c31\u662f\u7eff\u8272\u7684\u4e86\u3002 uniform sampler2D normalMap; void main() { // \u4ece\u6cd5\u7ebf\u8d34\u56fe\u8303\u56f4[0,1]\u83b7\u53d6\u6cd5\u7ebf normal = texture(normalMap, fs_in.TexCoords).rgb; // \u5c06\u6cd5\u7ebf\u5411\u91cf\u8f6c\u6362\u4e3a\u8303\u56f4[-1,1] normal = normalize(normal * 2.0 - 1.0); [...] // \u50cf\u5f80\u5e38\u90a3\u6837\u5904\u7406\u5149\u7167 }","title":"\u6cd5\u7ebf\u8d34\u56fe"},{"location":"OpenGL/%E6%B3%95%E7%BA%BF%E8%B4%B4%E5%9B%BE/#tangent-space","text":"\u6cd5\u7ebf\u8d34\u56fe\u4e2d\u7684\u6240\u6709\u6cd5\u7ebf\u5411\u91cf\u90fd\u662f\u6307\u5411\u6b63z\u65b9\u5411\u7684\u3002\u5f53\u7269\u4f53\u8868\u9762\u7684\u6cd5\u7ebf\u6307\u5411\u6b63y\u65b9\u5411\u65f6\u600e\u4e48\u529e\u5462\uff1f \u5207\u7ebf\u7a7a\u95f4 \u5728\u4e00\u4e2a\u4e0d\u540c\u7684\u5750\u6807\u7a7a\u95f4\u4e2d\u8fdb\u884c\u5149\u7167\uff0c\u8fd9\u4e2a\u5750\u6807\u7a7a\u95f4\u91cc\uff0c\u6cd5\u7ebf\u8d34\u56fe\u5411\u91cf\u603b\u662f\u6307\u5411\u8fd9\u4e2a\u5750\u6807\u7a7a\u95f4\u7684\u6b63z\u65b9\u5411\uff1b\u6240\u6709\u7684\u5149\u7167\u5411\u91cf\u90fd\u76f8\u5bf9\u4e0e\u8fd9\u4e2a\u6b63z\u65b9\u5411\u8fdb\u884c\u53d8\u6362\u3002\u8fd9\u6837\u5c31\u80fd\u4f7f\u7528\u540c\u6837\u7684\u6cd5\u7ebf\u8d34\u56fe\uff0c\u4e0d\u7ba1\u671d\u5411\u95ee\u9898\u3002\u8fd9\u4e2a\u5750\u6807\u7a7a\u95f4\u53eb\u505a\u5207\u7ebf\u7a7a\u95f4\uff08tangent space\uff09\u3002 \u6cd5\u7ebf\u8d34\u56fe \u6cd5\u7ebf\u8d34\u56fe\u4e2d\u7684\u6cd5\u7ebf\u5411\u91cf\u5b9a\u4e49\u5728\u5207\u7ebf\u7a7a\u95f4\u4e2d\uff0c\u5728\u5207\u7ebf\u7a7a\u95f4\u4e2d\uff0c\u6cd5\u7ebf\u6c38\u8fdc\u6307\u7740\u6b63z\u65b9\u5411\u3002\u5b83\u5c31\u50cf\u6cd5\u7ebf\u8d34\u56fe\u5411\u91cf\u7684\u672c\u5730\u7a7a\u95f4\u3002\u4f7f\u7528\u4e00\u4e2a\u7279\u5b9a\u7684\u77e9\u9635\u6211\u4eec\u5c31\u80fd\u5c06\u5207\u7ebf\u7a7a\u95f4\u4e2d\u7684\u6cd5\u7ebf\u5411\u91cf\u8f6c\u6210\u4e16\u754c\u6216\u89c6\u56fe\u7a7a\u95f4\u4e0b\uff0c\u4f7f\u5b83\u4eec\u8f6c\u5411\u5230\u6700\u7ec8\u7684\u8d34\u56fe\u8868\u9762\u7684\u65b9\u5411\u3002 TBN\u77e9\u9635 TBN\u77e9\u9635\u8fd9\u4e09\u4e2a\u5b57\u6bcd\u5206\u522b\u4ee3\u8868 \u5207\u7ebf(Tagent)\u3001\u526f\u5207\u7ebf(Bitangent)\u548c\u6cd5\u7ebf(Normal) \u5411\u91cf\u3002\u8981\u5efa\u6784\u8fd9\u6837\u4e00\u4e2a\u628a\u5207\u7ebf\u7a7a\u95f4\u8f6c\u53d8\u4e3a\u4e0d\u540c\u7a7a\u95f4\u7684\u53d8\u5f02\u77e9\u9635\uff0c\u9700\u8981\u4e09\u4e2a\u76f8\u4e92\u5782\u76f4\u7684\u5411\u91cf\uff0c\u5b83\u4eec\u6cbf\u4e00\u4e2a\u8868\u9762\u7684\u6cd5\u7ebf\u8d34\u56fe\u5bf9\u9f50\u4e8e\uff1a\u4e0a\u3001\u53f3\u3001\u524d TBN\u77e9\u9635\u7684\u8ba1\u7b97\u53c2\u8003","title":"\u5207\u7ebf\u7a7a\u95f4\uff08tangent space\uff09"},{"location":"OpenGL/%E9%AB%98%E7%BA%A7GLSL/","text":"\u9ad8\u7ea7GLSL # GLSL\u7684\u5185\u5efa\u53d8\u91cf # GLSL \u5b9a\u4e49\u4e86\u4e00\u4e9b\u4ee5 gl_ \u4e3a\u524d\u7f00\u7684\u53d8\u91cf\uff0c\u4ee5\u4fbf \u8bfb\u53d6/\u5199\u5165 \u6570\u636e\u3002 Built-in_Variable (GLSL) \u63a5\u53e3\u5757 # \u5f53\u4ece\u9876\u70b9\u7740\u8272\u5668\u5411\u7247\u6bb5\u7740\u8272\u5668\u53d1\u9001\u6570\u636e\u65f6\uff0c\u53ef\u4ee5\u5728\u7740\u8272\u5668\u4e2d\u58f0\u660e\u5bf9\u5e94\u7684\u8f93\u5165/\u8f93\u51fa\u53d8\u91cf\uff0c\u8fd8\u53ef\u4ee5\u901a\u8fc7 \u63a5\u53e3\u5757(Interface Block) \u5c06\u53d8\u91cf\u7ec4\u5408\u8d77\u6765\u3002 \u63a5\u53e3\u5757\u7684\u58f0\u660e\u548c struct \u7684\u58f0\u660e\u6709\u70b9\u76f8\u50cf\uff0c\u4e0d\u540c\u7684\u662f\uff0c\u4f7f\u7528 in/out \u5173\u952e\u5b57\u6765\u5b9a\u4e49\u5b83\u662f\u4e00\u4e2a \u8f93\u5165/\u8f93\u51fa\u5757(Block)\u3002 \u6ce8\u610f \u5757\u540d(Block Name) \u9700\u4fdd\u6301\u4e00\u81f4\uff08VS_OUT\uff09\uff0c\u4f46\u5b9e\u4f8b\u540d(Instance Name)\u53ef\u4ee5\u662f\u968f\u610f\u7684\u3002 \u53ea\u8981\u4e24\u4e2a\u63a5\u53e3\u5757\u7684\u540d\u5b57\u4e00\u6837\uff0c\u5b83\u4eec\u5bf9\u5e94\u7684\u8f93\u5165\u548c\u8f93\u51fa\u5c06\u4f1a\u5339\u914d\u8d77\u6765\u3002 //Vertext.shader #version 330 core layout (location = 0) in vec3 aPos; layout (location = 1) in vec2 aTexCoords; uniform mat4 model; uniform mat4 view; uniform mat4 projection; out VS_OUT { vec2 TexCoords; } vs_out; void main() { gl_Position = projection * view * model * vec4(aPos, 1.0); vs_out.TexCoords = aTexCoords; } //Fragment.shader #version 330 core out vec4 FragColor; in VS_OUT { vec2 TexCoords; } fs_in; uniform sampler2D texture; void main() { FragColor = texture(texture, fs_in.TexCoords); } Uniform\u7f13\u51b2\u5bf9\u8c61 # Uniform\u7f13\u51b2\u5bf9\u8c61\u662f\u4e00\u79cd\u7ed9Shader\u4f20\u9012\u53c2\u6570\u7684\u91cd\u8981\u65b9\u5f0f\uff0c\u5141\u8bb8\u5c06\u6570\u636e\u53d1\u9001\u5230 Shader \u7684\u4efb\u610f\u9636\u6bb5\uff0c\u5373\u6bcf\u4e2a\u58f0\u660e\u4e86\u8be5 Uniform\u53d8\u91cf \u7684\u7740\u8272\u5668\u90fd\u80fd\u591f\u8bbf\u95ee\u8be5\u7f13\u51b2\u5bf9\u8c61\u3002","title":"\u9ad8\u7ea7GLSL"},{"location":"OpenGL/%E9%AB%98%E7%BA%A7GLSL/#glsl","text":"","title":"\u9ad8\u7ea7GLSL"},{"location":"OpenGL/%E9%AB%98%E7%BA%A7GLSL/#glsl_1","text":"GLSL \u5b9a\u4e49\u4e86\u4e00\u4e9b\u4ee5 gl_ \u4e3a\u524d\u7f00\u7684\u53d8\u91cf\uff0c\u4ee5\u4fbf \u8bfb\u53d6/\u5199\u5165 \u6570\u636e\u3002 Built-in_Variable (GLSL)","title":"GLSL\u7684\u5185\u5efa\u53d8\u91cf"},{"location":"OpenGL/%E9%AB%98%E7%BA%A7GLSL/#_1","text":"\u5f53\u4ece\u9876\u70b9\u7740\u8272\u5668\u5411\u7247\u6bb5\u7740\u8272\u5668\u53d1\u9001\u6570\u636e\u65f6\uff0c\u53ef\u4ee5\u5728\u7740\u8272\u5668\u4e2d\u58f0\u660e\u5bf9\u5e94\u7684\u8f93\u5165/\u8f93\u51fa\u53d8\u91cf\uff0c\u8fd8\u53ef\u4ee5\u901a\u8fc7 \u63a5\u53e3\u5757(Interface Block) \u5c06\u53d8\u91cf\u7ec4\u5408\u8d77\u6765\u3002 \u63a5\u53e3\u5757\u7684\u58f0\u660e\u548c struct \u7684\u58f0\u660e\u6709\u70b9\u76f8\u50cf\uff0c\u4e0d\u540c\u7684\u662f\uff0c\u4f7f\u7528 in/out \u5173\u952e\u5b57\u6765\u5b9a\u4e49\u5b83\u662f\u4e00\u4e2a \u8f93\u5165/\u8f93\u51fa\u5757(Block)\u3002 \u6ce8\u610f \u5757\u540d(Block Name) \u9700\u4fdd\u6301\u4e00\u81f4\uff08VS_OUT\uff09\uff0c\u4f46\u5b9e\u4f8b\u540d(Instance Name)\u53ef\u4ee5\u662f\u968f\u610f\u7684\u3002 \u53ea\u8981\u4e24\u4e2a\u63a5\u53e3\u5757\u7684\u540d\u5b57\u4e00\u6837\uff0c\u5b83\u4eec\u5bf9\u5e94\u7684\u8f93\u5165\u548c\u8f93\u51fa\u5c06\u4f1a\u5339\u914d\u8d77\u6765\u3002 //Vertext.shader #version 330 core layout (location = 0) in vec3 aPos; layout (location = 1) in vec2 aTexCoords; uniform mat4 model; uniform mat4 view; uniform mat4 projection; out VS_OUT { vec2 TexCoords; } vs_out; void main() { gl_Position = projection * view * model * vec4(aPos, 1.0); vs_out.TexCoords = aTexCoords; } //Fragment.shader #version 330 core out vec4 FragColor; in VS_OUT { vec2 TexCoords; } fs_in; uniform sampler2D texture; void main() { FragColor = texture(texture, fs_in.TexCoords); }","title":"\u63a5\u53e3\u5757"},{"location":"OpenGL/%E9%AB%98%E7%BA%A7GLSL/#uniform","text":"Uniform\u7f13\u51b2\u5bf9\u8c61\u662f\u4e00\u79cd\u7ed9Shader\u4f20\u9012\u53c2\u6570\u7684\u91cd\u8981\u65b9\u5f0f\uff0c\u5141\u8bb8\u5c06\u6570\u636e\u53d1\u9001\u5230 Shader \u7684\u4efb\u610f\u9636\u6bb5\uff0c\u5373\u6bcf\u4e2a\u58f0\u660e\u4e86\u8be5 Uniform\u53d8\u91cf \u7684\u7740\u8272\u5668\u90fd\u80fd\u591f\u8bbf\u95ee\u8be5\u7f13\u51b2\u5bf9\u8c61\u3002","title":"Uniform\u7f13\u51b2\u5bf9\u8c61"},{"location":"Read/%E7%A6%BB%E7%BB%8F%E5%8F%9B%E9%81%93/","text":"\u79bb\u7ecf\u53db\u9053 # \u7b2c\u4e00\u7ae0\uff1a \u6210\u529f\u4eba\u58eb\u4f1a\u5728\u7ec4\u5408\u4e2d\u5e73\u8861\u5404\u9879\u98ce\u9669 \u5f53\u5728\u4e00\u4e2a\u9886\u57df\u94e4\u800c\u8d70\u9669\u65f6\uff0c\u4f1a\u5728\u5176\u4ed6\u9886\u57df\u8c28\u614e\u884c\u4e8b\u6765\u964d\u4f4e\u6574\u4f53\u98ce\u9669\u6c34\u5e73 \u7b2c\u4e8c\u7ae0\uff1a \u8fc7\u5206\u81ea\u4fe1\u5728\u521b\u65b0\u9886\u57df\u53ef\u80fd\u662f\u4e00\u79cd\u7279\u522b\u96be\u4ee5\u514b\u670d\u7684\u8ba4\u77e5\u504f\u5dee \u6ca1\u6709\u4eba\u4f1a\u8ba4\u4e3a\u81ea\u5df1\u7684\u60f3\u6cd5\u4e0d\u591f\u597d \u521b\u610f\u5929\u624d\u5728\u4ed6\u4eec\u6240\u5728\u9886\u57df\u7684\u4f5c\u54c1\u5e76\u4e0d\u6bd4\u540c\u884c\u7684\u4f5c\u54c1\u8d28\u91cf\u66f4\u597d\uff0c\u4ed6\u4eec\u53ea\u662f\u6709\u5927\u91cf\u7684\u60f3\u6cd5\u800c\u5df2 \u4e00\u4e2a\u4eba\u80fd\u60f3\u51fa\u6709\u5f71\u54cd\u529b\u7684\u6210\u529f\u521b\u610f\u7684\u6982\u7387\u540c\u4ed6\u60f3\u51fa\u7684\u521b\u610f\u603b\u6570\u6210\u6b63\u6bd4 \u60f3\u8981\u5f97\u5230\u4e00\u4e2a\u597d\u6807\u9898\uff0c\u4f60\u5f97\u81f3\u5c11\u5148\u60f3\u51fa25\u4e2a \u7ecf\u9a8c\u662f\u4e00\u628a\u53cc\u5203\u5251 \u5982\u679c\u60f3\u8fdb\u884c\u521b\u65b0\u6027\u7684\u8054\u60f3\uff0c\u5c31\u8981\u6709\u4e0e\u4ed6\u4eba\u4e0d\u4e00\u6837\u7684\u7ecf\u5386 \u8fc7\u53bb\u8d8a\u6210\u529f\u7684\u4eba\uff0c\u5728\u65b0\u73af\u5883\u4e2d\u8868\u73b0\u8d8a\u5dee\u3002\u4ed6\u4eec\u8fc7\u4e8e\u81ea\u4fe1\uff0c\u800c\u4e14\u4e0d\u592a\u53ef\u80fd\u542c\u53d6\u522b\u4eba\u7684\u6279\u8bc4\u610f\u89c1 \u7b2c\u4e09\u7ae0\uff1a \u5f53\u4eba\u5728\u7f3a\u4e4f\u5c0a\u91cd\u5374\u8bd5\u56fe\u5bf9\u4ed6\u4eba\u65bd\u52a0\u5f71\u54cd\u65f6\uff0c\u522b\u4eba\u4f1a\u8ba4\u4e3a\u6b64\u4eba\u96be\u4ee5\u76f8\u5904\u3001\u5f3a\u786c\u3001\u81ea\u79c1\u81ea\u5229\u3002\u5728\u884c\u4f7f\u6743\u529b\u4e4b\u524d\uff0c\u5e94\u8be5\u5148\u8d62\u5f97\u5730\u4f4d \u6743\u5229\uff1a\u6d89\u53ca\u5bf9\u4ed6\u4eba\u65bd\u52a0\u63a7\u5236\u548c\u6743\u5a01 \u5730\u4f4d\uff1a\u53d7\u5230\u4ed6\u4eba\u7684\u5c0a\u91cd\u548c\u94a6\u4f69 \u7b2c\u56db\u7ae0\uff1a \u7b49\u5f85\u65f6\u673a\u5c24\u4e3a\u91cd\u8981 \u5148\u53d1\u5236\u4eba\u53ea\u662f\u4e00\u79cd\u624b\u6bb5\uff0c\u800c\u4e0d\u662f\u6700\u7ec8\u76ee\u7684 \u7b2c\u4e94\u7ae0\uff1a \u8054\u76df\u662f\u5f3a\u5927\u6709\u529b\u7684\uff0c\u4f46\u5b83\u540c\u65f6\u53c8\u6709\u5185\u5728\u7684\u4e0d\u7a33\u5b9a\u6027 \u76ee\u6807\u4e00\u81f4\u662f\u5efa\u7acb\u8054\u76df\u7684\u524d\u63d0\uff0c\u800c\u7b56\u7565\u4e00\u81f4\u662f\u8054\u76df\u6301\u4e45\u7684\u6807\u51c6 \u7b2c\u516d\u7ae0\uff1a \u79f0\u8d5e\u4eba\u683c\uff0c\u800c\u4e0d\u662f\u5177\u4f53\u7684\u884c\u4e3a \u5f53\u4eba\u683c\u53d7\u5230\u79f0\u8d5e\u65f6\uff0c\u4eba\u4eec\u4f1a\u5185\u5316\u4ed6\uff0c\u4f7f\u5176\u4f5c\u4e3a\u81ea\u8eab\u7684\u4e00\u90e8\u5206\uff0c\u800c\u4e0d\u662f\u8ba4\u4e3a\u81ea\u5df1\u53ea\u662f\u53c2\u4e0e\u4e86\u4e00\u4e2a\u5b64\u7acb\u7684\u9053\u5fb7\u884c\u4e3a\u4e8b\u4ef6 \u4eba\u683c\u8d5e\u626c\u4f1a\u7559\u4e0b\u6700\u6301\u4e45\u7684\u5370\u8bb0 \u7b2c\u4e03\u7ae0\uff1a \u56e2\u4f53\u8ff7\u601d\uff1a\u56e2\u4f53\u5728\u51b3\u7b56\u8fc7\u7a0b\u4e2d\uff0c\u7531\u4e8e\u6210\u5458\u503e\u5411\u8ba9\u81ea\u5df1\u7684\u89c2\u70b9\u4e0e\u56e2\u4f53\u4e00\u81f4\uff0c\u56e0\u800c\u4ee4\u6574\u4e2a\u56e2\u4f53\u7f3a\u4e4f\u4e0d\u540c\u7684\u601d\u8003\u89d2\u5ea6\uff0c\u4e0d\u80fd\u8fdb\u884c\u5ba2\u89c2\u5206\u6790\u3002 \u5982\u4f55\u907f\u514d\u56e2\u4f53\u8ff7\u601d \u5bfb\u627e\u5f02\u89c1\u8005\uff0c\u8fdb\u884c\u5f7b\u5e95\u7684\u8ba8\u8bba \u5373\u4fbf\u5f02\u89c1\u662f\u9519\u8bef\u7684\uff0c\u4ed6\u4eec\u4e5f\u662f\u6709\u7528\u7684 \u7b2c\u516b\u7ae0\uff1a \u9632\u5fa1\u6027\u60b2\u89c2\u4e3b\u4e49\u662f\u5728\u7279\u5b9a\u60c5\u51b5\u4e0b\u7528\u6765\u7ba1\u63a7\u7126\u8651\u3001\u6050\u60e7\u548c\u62c5\u5fe7\u7684\u4e00\u79cd\u6218\u7565\u3002\u8003\u8651\u6bcf\u4e00\u4e2a\u7ec6\u8282\u786e\u4fdd\u4e0d\u4f1a\u5931\u8d25\uff0c\u5c06\u7126\u8651\u8f6c\u5316\u4e3a\u52a8\u529b \u9762\u5bf9\u6050\u60e7\u65f6\uff0c\u4e0d\u5e94\u8be5\u6fc0\u6d3b\u505c\u6b62\u7cfb\u7edf\uff08\u51b7\u9759\uff09\uff0c\u800c\u5e94\u8be5\u6fc0\u6d3b\u524d\u8fdb\u7cfb\u7edf\uff08\u5174\u594b\uff09\uff0c\u6210\u529f\u7387\u4f1a\u5927\u5927\u63d0\u9ad8 \u6d88\u9664\u4ed6\u4eba\u7684\u6050\u60e7\u7684\u6700\u597d\u529e\u6cd5\u662f\u901a\u8fc7\u67d0\u4e9b\u4fe1\u53f7\u544a\u8bc9\u4ed6\u4eec\uff0c\u4ed6\u4eec\u5e76\u4e0d\u5b64\u5355 \u540c\u4e00\u4e8b\u4ef6\u540c\u4e00\u884c\u4e3a \u63cf\u8ff0\u8fd9\u6837\u505a\u5e26\u6765\u7684\u597d\u5904\u548c\u4e0d\u8fd9\u6837\u505a\u5e26\u6765\u7684\u574f\u5904\uff0c\u4eba\u4eec\u7684\u9009\u62e9\u53ef\u80fd\u4f1a\u622a\u7136\u76f8\u53cd","title":"\u79bb\u7ecf\u53db\u9053"},{"location":"Read/%E7%A6%BB%E7%BB%8F%E5%8F%9B%E9%81%93/#_1","text":"\u7b2c\u4e00\u7ae0\uff1a \u6210\u529f\u4eba\u58eb\u4f1a\u5728\u7ec4\u5408\u4e2d\u5e73\u8861\u5404\u9879\u98ce\u9669 \u5f53\u5728\u4e00\u4e2a\u9886\u57df\u94e4\u800c\u8d70\u9669\u65f6\uff0c\u4f1a\u5728\u5176\u4ed6\u9886\u57df\u8c28\u614e\u884c\u4e8b\u6765\u964d\u4f4e\u6574\u4f53\u98ce\u9669\u6c34\u5e73 \u7b2c\u4e8c\u7ae0\uff1a \u8fc7\u5206\u81ea\u4fe1\u5728\u521b\u65b0\u9886\u57df\u53ef\u80fd\u662f\u4e00\u79cd\u7279\u522b\u96be\u4ee5\u514b\u670d\u7684\u8ba4\u77e5\u504f\u5dee \u6ca1\u6709\u4eba\u4f1a\u8ba4\u4e3a\u81ea\u5df1\u7684\u60f3\u6cd5\u4e0d\u591f\u597d \u521b\u610f\u5929\u624d\u5728\u4ed6\u4eec\u6240\u5728\u9886\u57df\u7684\u4f5c\u54c1\u5e76\u4e0d\u6bd4\u540c\u884c\u7684\u4f5c\u54c1\u8d28\u91cf\u66f4\u597d\uff0c\u4ed6\u4eec\u53ea\u662f\u6709\u5927\u91cf\u7684\u60f3\u6cd5\u800c\u5df2 \u4e00\u4e2a\u4eba\u80fd\u60f3\u51fa\u6709\u5f71\u54cd\u529b\u7684\u6210\u529f\u521b\u610f\u7684\u6982\u7387\u540c\u4ed6\u60f3\u51fa\u7684\u521b\u610f\u603b\u6570\u6210\u6b63\u6bd4 \u60f3\u8981\u5f97\u5230\u4e00\u4e2a\u597d\u6807\u9898\uff0c\u4f60\u5f97\u81f3\u5c11\u5148\u60f3\u51fa25\u4e2a \u7ecf\u9a8c\u662f\u4e00\u628a\u53cc\u5203\u5251 \u5982\u679c\u60f3\u8fdb\u884c\u521b\u65b0\u6027\u7684\u8054\u60f3\uff0c\u5c31\u8981\u6709\u4e0e\u4ed6\u4eba\u4e0d\u4e00\u6837\u7684\u7ecf\u5386 \u8fc7\u53bb\u8d8a\u6210\u529f\u7684\u4eba\uff0c\u5728\u65b0\u73af\u5883\u4e2d\u8868\u73b0\u8d8a\u5dee\u3002\u4ed6\u4eec\u8fc7\u4e8e\u81ea\u4fe1\uff0c\u800c\u4e14\u4e0d\u592a\u53ef\u80fd\u542c\u53d6\u522b\u4eba\u7684\u6279\u8bc4\u610f\u89c1 \u7b2c\u4e09\u7ae0\uff1a \u5f53\u4eba\u5728\u7f3a\u4e4f\u5c0a\u91cd\u5374\u8bd5\u56fe\u5bf9\u4ed6\u4eba\u65bd\u52a0\u5f71\u54cd\u65f6\uff0c\u522b\u4eba\u4f1a\u8ba4\u4e3a\u6b64\u4eba\u96be\u4ee5\u76f8\u5904\u3001\u5f3a\u786c\u3001\u81ea\u79c1\u81ea\u5229\u3002\u5728\u884c\u4f7f\u6743\u529b\u4e4b\u524d\uff0c\u5e94\u8be5\u5148\u8d62\u5f97\u5730\u4f4d \u6743\u5229\uff1a\u6d89\u53ca\u5bf9\u4ed6\u4eba\u65bd\u52a0\u63a7\u5236\u548c\u6743\u5a01 \u5730\u4f4d\uff1a\u53d7\u5230\u4ed6\u4eba\u7684\u5c0a\u91cd\u548c\u94a6\u4f69 \u7b2c\u56db\u7ae0\uff1a \u7b49\u5f85\u65f6\u673a\u5c24\u4e3a\u91cd\u8981 \u5148\u53d1\u5236\u4eba\u53ea\u662f\u4e00\u79cd\u624b\u6bb5\uff0c\u800c\u4e0d\u662f\u6700\u7ec8\u76ee\u7684 \u7b2c\u4e94\u7ae0\uff1a \u8054\u76df\u662f\u5f3a\u5927\u6709\u529b\u7684\uff0c\u4f46\u5b83\u540c\u65f6\u53c8\u6709\u5185\u5728\u7684\u4e0d\u7a33\u5b9a\u6027 \u76ee\u6807\u4e00\u81f4\u662f\u5efa\u7acb\u8054\u76df\u7684\u524d\u63d0\uff0c\u800c\u7b56\u7565\u4e00\u81f4\u662f\u8054\u76df\u6301\u4e45\u7684\u6807\u51c6 \u7b2c\u516d\u7ae0\uff1a \u79f0\u8d5e\u4eba\u683c\uff0c\u800c\u4e0d\u662f\u5177\u4f53\u7684\u884c\u4e3a \u5f53\u4eba\u683c\u53d7\u5230\u79f0\u8d5e\u65f6\uff0c\u4eba\u4eec\u4f1a\u5185\u5316\u4ed6\uff0c\u4f7f\u5176\u4f5c\u4e3a\u81ea\u8eab\u7684\u4e00\u90e8\u5206\uff0c\u800c\u4e0d\u662f\u8ba4\u4e3a\u81ea\u5df1\u53ea\u662f\u53c2\u4e0e\u4e86\u4e00\u4e2a\u5b64\u7acb\u7684\u9053\u5fb7\u884c\u4e3a\u4e8b\u4ef6 \u4eba\u683c\u8d5e\u626c\u4f1a\u7559\u4e0b\u6700\u6301\u4e45\u7684\u5370\u8bb0 \u7b2c\u4e03\u7ae0\uff1a \u56e2\u4f53\u8ff7\u601d\uff1a\u56e2\u4f53\u5728\u51b3\u7b56\u8fc7\u7a0b\u4e2d\uff0c\u7531\u4e8e\u6210\u5458\u503e\u5411\u8ba9\u81ea\u5df1\u7684\u89c2\u70b9\u4e0e\u56e2\u4f53\u4e00\u81f4\uff0c\u56e0\u800c\u4ee4\u6574\u4e2a\u56e2\u4f53\u7f3a\u4e4f\u4e0d\u540c\u7684\u601d\u8003\u89d2\u5ea6\uff0c\u4e0d\u80fd\u8fdb\u884c\u5ba2\u89c2\u5206\u6790\u3002 \u5982\u4f55\u907f\u514d\u56e2\u4f53\u8ff7\u601d \u5bfb\u627e\u5f02\u89c1\u8005\uff0c\u8fdb\u884c\u5f7b\u5e95\u7684\u8ba8\u8bba \u5373\u4fbf\u5f02\u89c1\u662f\u9519\u8bef\u7684\uff0c\u4ed6\u4eec\u4e5f\u662f\u6709\u7528\u7684 \u7b2c\u516b\u7ae0\uff1a \u9632\u5fa1\u6027\u60b2\u89c2\u4e3b\u4e49\u662f\u5728\u7279\u5b9a\u60c5\u51b5\u4e0b\u7528\u6765\u7ba1\u63a7\u7126\u8651\u3001\u6050\u60e7\u548c\u62c5\u5fe7\u7684\u4e00\u79cd\u6218\u7565\u3002\u8003\u8651\u6bcf\u4e00\u4e2a\u7ec6\u8282\u786e\u4fdd\u4e0d\u4f1a\u5931\u8d25\uff0c\u5c06\u7126\u8651\u8f6c\u5316\u4e3a\u52a8\u529b \u9762\u5bf9\u6050\u60e7\u65f6\uff0c\u4e0d\u5e94\u8be5\u6fc0\u6d3b\u505c\u6b62\u7cfb\u7edf\uff08\u51b7\u9759\uff09\uff0c\u800c\u5e94\u8be5\u6fc0\u6d3b\u524d\u8fdb\u7cfb\u7edf\uff08\u5174\u594b\uff09\uff0c\u6210\u529f\u7387\u4f1a\u5927\u5927\u63d0\u9ad8 \u6d88\u9664\u4ed6\u4eba\u7684\u6050\u60e7\u7684\u6700\u597d\u529e\u6cd5\u662f\u901a\u8fc7\u67d0\u4e9b\u4fe1\u53f7\u544a\u8bc9\u4ed6\u4eec\uff0c\u4ed6\u4eec\u5e76\u4e0d\u5b64\u5355 \u540c\u4e00\u4e8b\u4ef6\u540c\u4e00\u884c\u4e3a \u63cf\u8ff0\u8fd9\u6837\u505a\u5e26\u6765\u7684\u597d\u5904\u548c\u4e0d\u8fd9\u6837\u505a\u5e26\u6765\u7684\u574f\u5904\uff0c\u4eba\u4eec\u7684\u9009\u62e9\u53ef\u80fd\u4f1a\u622a\u7136\u76f8\u53cd","title":"\u79bb\u7ecf\u53db\u9053"},{"location":"UE4/UE4%E7%9A%84%E5%9E%83%E5%9C%BE%E5%9B%9E%E6%94%B6/","text":"UE4\u7684\u5783\u573e\u56de\u6536\u7cfb\u7edf # \u8ffd\u8e2a\u5f0fGC \u6807\u8bb0\u9636\u6bb5\uff1a\u4ece\u6839\u7ed3\u70b9\u96c6\u5408\u5f00\u59cb\u9012\u5f52\u7684\u6807\u8bb0\u6240\u6709\u53ef\u8fbe\u5bf9\u8c61\u3002 \u6e05\u626b\u9636\u6bb5\uff1a\u904d\u5386\u6240\u6709\u5bf9\u8c61\uff0c\u5c06\u6ca1\u6709\u6807\u8bb0\u4e3a\u53ef\u8fbe\u7684\u5bf9\u8c61\u56de\u6536\uff0c\u5e76\u6e05\u7406\u6807\u8bb0\u4f4d\u3002 \u6ce8\u610f UObject\u7c7b\u578b\u7684\u53d8\u91cf\uff0c\u5373\u4f7f\u662fstatic\uff0c\u9ed8\u8ba4\u4e5f\u4f1a\u88abGC\u6389\u3002 \u9632\u6b62UObject\u5bf9\u8c61\u88abGC\u6389\uff0c\u5c31\u8981\u4fdd\u6301\u5bf9\u5176\u5f15\u7528 1\u3001UPROPERTY # UPROPERTY() class UPaperTileMap* AssetToRename; UPROPERTY() TMap<UCompositingElementInput*, ECompPassConstructionType> UserConstructedInputs; 2\u3001AddToRoot # m_sInstance = NewObject<T>(); m_sInstance->AddToRoot(); \u6ce8\u610f \u91ca\u653e\u7684\u65f6\u5019\u9700\u8981\u8c03\u7528 m_sInstance->RemoveFromRoot(); 3\u3001TWeakObjectPtr # \u6ce8\u610f \u5f31\u5f15\u7528\uff0c\u4e0d\u5f71\u54cd\u53d8\u91cf\u7684 GC 4\u3001TSharedPtr # \u5171\u4eab\u6307\u9488 \u5171\u4eab\u6307\u9488\uff0c\u7c7b\u4f3cC++\u6807\u51c6\u5e93\u7684\u5171\u4eab\u667a\u80fd\u6307\u9488\uff0c\u7528\u4e8e\u81ea\u5b9a\u4e49\u7684\u7ed3\u6784\u4f53\u3002 TSharedPtr Test = MakeShareable(new FTest()); \u4e0d\u80fd\u7528\u4e8eUObject\u5bf9\u8c61(TWeakPtr\u5012\u662f\u53ef\u4ee5\u7528\u4e8eUObject), \u56e0\u4e3aUObject\u6709\u4e00\u5957\u4e13\u7528\u7684GC\u89c4\u5219\u3002 class MYPROJECT2_API FTest { public: FTest(); ~FTest(); }; #include \"FTest.h\" FTest::FTest() { UE_LOG(LogTemp, Warning, TEXT(\"1111FTest Constrction\")); } FTest::~FTest() { UE_LOG(LogTemp, Warning, TEXT(\"2222FTest Deconstrction\")); } UCLASS() class MYPROJECT2_API ATestActor : public AActor { GENERATED_BODY() public: // Sets default values for this actor's properties ATestActor(); TSharedPtr<FTest> Test; protected: // Called when the game starts or when spawned virtual void BeginPlay() override; } // Called when the game starts or when spawned void ATestActor::BeginPlay() { Super::BeginPlay(); Test = MakeShareable(new FTest()); } 5\u3001FGCObject # \u5982\u4f55\u6df7\u7528 \u5df2\u77e5 UObject \u7c7b\u901a\u8fc7 NewObject \u521b\u5efa\u5e76\u81ea\u52a8 GC \u975e UObject \u7c7b\u901a\u8fc7 MakeShareable \u6765\u521b\u5efa TSharedPtr \u6765\u81ea\u52a8 GC \u800c \u975e UObject \u7c7b\u4e2d\u51fa\u73b0 UObject \u53d8\u91cf\u600e\u4e48\u529e\u5462\uff1f FGCObject UE4 \u63d0\u4f9b\u4e86 FGCObject\uff0c\u975e UObject \u7c7b\u53ef\u4ee5\u7ee7\u627f FGCObject\uff0c\u7136\u540e\u901a\u8fc7 AddReferencedObjects \u51fd\u6570\u5bf9 UObject \u5bf9\u8c61\u6dfb\u52a0\u5f15\u7528\u3002 #include \"GCObject.h\" class UCameraAnim; /** * */ class MYPROJECT2_API FTest :public FGCObject { public: FTest(); ~FTest(); UCameraAnim* CameraAnim; protected: virtual void AddReferencedObjects(FReferenceCollector& Collector) override { Collector.AddReferencedObject(CameraAnim); } }; 6\u3001TSharedRef # \u5171\u4eab\u5f15\u7528 \u672c\u8d28\u4e0a\u5171\u4eab\u5f15\u7528(TSharedRef)\u548c\u5171\u4eab\u6307\u9488(TSharedPtr)\u662f\u5dee\u4e0d\u591a\u7684\uff0c\u4e00\u6837\u662f\u7528\u4e8e\u975eUObject\u4f53\u7cfb\u7684\u5bf9\u8c61\uff0c\u4e0d\u8fc7 TSharedRef \u548c TSharedPtr \u7684\u4e0d\u540c\u5728\u4e8e\u5171\u4eab\u5f15\u7528\u65e0\u6cd5\u5f15\u7528\u7a7a\u5bf9\u8c61\uff0c\u7f16\u8bd1\u76f4\u63a5\u62a5\u9519\u3002TSharedRef\u8fde \u201cIsValid\u201d \u5224\u65ad\u662f\u5426\u975e\u7a7a\u90fd\u6ca1\u6709\uff0c\u5f3a\u903c\u4f60\u4f7f\u7528\u5fc5\u5b9a\u662f\u6709\u6548\u7684\u5f15\u7528\u3002\u6240\u4ee5\u5728 UE4 \u7684 SWidget \u4e2d\u5927\u91cf\u4f7f\u7528 TSharedRef \u3002 //\u6b63\u786e\u7684\u58f0\u660e\u5b9a\u4e49 TSharedRef<FMyCustom> MyCustom = MakeShared<FMyCustom>(); //\u9519\u8bef\u7684\u58f0\u660e\u5b9a\u4e49 //TSharedRef\u6ca1\u6709\u7a7a\u5f15\u7528\uff0c\u5e94\u8be5\u6301\u6709\u7684\u5bf9\u8c61\u5fc5\u987b\u662f\u6709\u6548\u7684 //TSharedRef<FMyCustom> MyCustom; //TSharedRef<FMyCustom> MyCustom = nullptr; //TSharedPtr\u8f6c\u4e3aTSharedRef TSharedPtr<FMyCustom> MySharedPtr = MakeShareable(new FMyCustom); TSharedRef<FMyCustom> MySharedRef = MySharedPtr.ToSharedRef(); // TSharedRef\u53ef\u4ee5\u8f6c\u5316\u4e3aTSharedPtr\uff0c \u76f4\u63a5\u7b49\u4e8e\u5c31\u53ef\u4ee5\u4e86 TSharedRef<FMyCustom> RefCustom = MakeShared<FMyCustom>(); TSharedPtr<FMyCustom> PtrCustom = RefCustom; TSharedFromThis # TSharedFromThis \u4e00\u4e2a\u666e\u901a\u7684\u7ed3\u6784\u4f53\u7ee7\u627f TSharedFromThis\uff0c\u5c31\u53ef\u4ee5\u62e5\u6709 AsShared \u51fd\u6570\u8ba9\u666e\u901a\u7684\u7ed3\u6784\u4f53\u5bf9\u8c61\u8f6c\u4e3a TSharedRef, \u50cf SWidget \u8fd9\u4e2a\u7c7b\u672c\u8eab\u5c31\u4f7f\u7528\u4e86 TSharedFromThis\u3002 FMyCustom MyCustom; TSharedRef<FMyCustom> FMyCustomRef = MyCustom.AsShared(); 7\u3001TWeakPtr # TWeakPtr \u4e0a\u9762\u8bf4\u5230\u4e86 TWeakObjectPtr\uff0c\u4e13\u95e8\u7528\u4e8eUObject, \u76f8\u5e94\u7684\u666e\u901a\u7ed3\u6784\u4f53\u4e5f\u6709\u5f31\u6307\u9488 TWeakPtr, \u80fd\u591f\u8bbf\u95ee\u4e00\u4e2a\u975eUObject\u5bf9\u8c61\uff0c\u4f46\u53c8\u4e0d\u5f71\u54cd GC\u3002 \u4e00\u822c\u6765\u8bf4\u901a\u8fc7 TWeakPtr \u6765\u8bbf\u95ee\u5176\u6301\u6709\u7684\u5bf9\u8c61\uff0c\u5148\u662f\u7528 Pin() \u8f6c\u6362\u4e3a TSharedPtr \u6307\u9488\uff0c\u5224\u65ad\u5bf9\u8c61\u662f\u5426\u6709\u6548\u540e\uff0c\u518d\u8bbf\u95ee struct FMyCustom { int a = 1; FMyCustom() { UE_LOG(LogTemp, Error, TEXT(\"destruct a = %d\"), a); } ~FMyCustom() { UE_LOG(LogTemp, Error, TEXT(\"undestruct a = %d\"), a); } }; UCLASS() class MYPROJECT5_API AMyActor : public AActor { public: TWeakPtr<FMyCustom> WeakCustom; virtual void BeginPlay() override; virtual void Tick(float DeltaTime) override; } void AMyActor::BeginPlay() { Super::BeginPlay(); TSharedPtr<FMyCustom> ShareCustom = MakeShareable(new FMyCustom); WeakCustom = ShareCustom; } // Called every frame void AMyActor::Tick(float DeltaTime) { Super::Tick(DeltaTime); TSharedPtr<FMyCustom> ShareCustom = WeakCustom.Pin(); if (ShareCustom.IsValid()) { UE_LOG(LogTemp, Error, TEXT(\"a = %d\"), ShareCustom->a); } } TSharedPtr\uff0cTSharedRef, TWeakPtr\u5728\u5bb9\u5668\u4f7f\u7528\u4e8b\u9879 \u5f31\u6307\u9488(TWeakPtr)\u5bf9\u8c61\u4e0d\u80fd\u4f5c\u4e3a Set\u6216\u8005Map \u7684 Key\uff0c\u56e0\u4e3a\u4e00\u4e2a\u5bf9\u8c61\u88ab GC \u6389\u65e0\u6cd5\u901a\u77e5\u4e00\u4e2a\u5bb9\u5668\u7684 Key\uff0c\u5f53\u7136 TWeakPtr \u53ef\u4ee5\u4f5c\u4e3a\u5bb9\u5668\u7684 Value\u3002 \u800c TSharedPtr\u548cTSharedRef \u65e2\u53ef\u4ee5\u5f53\u4f5c\u5bb9\u5668\u7684 Key\uff0c\u4e5f\u53ef\u4ee5\u4f5c\u4e3a\u5bb9\u5668\u7684 Value. Demo # /** * UMyGCObject */ UCLASS() class UMyGCObject : public UObject { GENERATED_BODY() }; /** * UTestGCObject */ UCLASS() class UTestGCObject : public UObject { GENERATED_BODY() public: UPROPERTY() UMyGCObject* Obj; }; /** * FTestGCStruct */ struct FTestGCStruct { public: UPROPERTY() UMyGCObject* Obj; }; /** * FTestGCUStruct */ USTRUCT() struct FTestGCUStruct { GENERATED_BODY() public: UPROPERTY() UMyGCObject* Obj; }; /** * ATestGCActor */ UCLASS() class ATestGCActor : public AActor { GENERATED_BODY() public: //UTestGCObject UTestGCObject* TestGCObj; //\u8ffd\u8e2a\u4e0d\u53ef\u8fbe\uff0c\u5f53GC\u65f6\u4f1a\u88ab\u56de\u6536 UPROPERTY() UTestGCObject* TestGCObj_UPROPERTY; //\u4f7f\u7528 UPROPERTY \u4fee\u9970\uff0c\u8ffd\u8e2a\u53ef\u8fbe\uff0c\u5f53GC\u65f6\u4e0d\u4f1a\u88ab\u56de\u6536 //FTestGCStruct //FTestGCStruct \u6ca1\u6709\u7528 USTRUCT() \u4fee\u9970\uff0c\u6240\u4ee5\u4efb\u4f55\u5f62\u5f0f\u7684\u53d8\u91cf\u90fd\u4e0d\u80fd\u4f7f\u7528 UPROPERTY()\u4fee\u9970 //\u6240\u4ee5\u4ee5\u4e0b\u51e0\u79cd\u53d8\u91cf\u5747 \u8ffd\u8e2a\u4e0d\u53ef\u8fbe\uff0c\u5f53GC\u65f6\u5176\u53d8\u91cf UMyGCObject* Obj \u4f1a\u88ab\u56de\u6536 FTestGCStruct TestGCStruct; FTestGCStruct* TestGCStructP; TSharedPtr<FTestGCStruct> TestGCStructPtr; TArray<FTestGCStruct> TestGCStructArray; TArray<TSharedPtr<FTestGCStruct>> TestGCStructPtrArray; //FTestGCStruct \u4f7f\u7528\u4e86 USTRUCT() \u4fee\u9970 //\u53ea\u6709\u4ee5\u4e0b 2 \u79cd\u5f62\u5f0f\u7684\u53d8\u91cf\uff0c\u624d\u53ef\u4ee5\u4f7f\u7528 UPROPERTY()\u4fee\u9970 //\u5f53\u4f7f\u7528 UPROPERTY() \u4fee\u9970\u65f6\uff0c\u8ffd\u8e2a\u53ef\u8fbe\uff0c\u5f53GC\u65f6\u5176\u53d8\u91cf UMyGCObject* Obj \u4e0d\u4f1a\u88ab\u56de\u6536 UPROPERTY() FTestGCUStruct TestGCUStruct_UPROPERTY; UPROPERTY() TArray<FTestGCUStruct> TestGCUStructArray_UPROPERTY; //\u4ee5\u4e0b\u51e0\u79cd\u53d8\u91cf \u8ffd\u8e2a\u4e0d\u53ef\u8fbe\uff0c\u5f53GC\u65f6\u5176\u53d8\u91cf UMyGCObject* Obj \u4f1a\u88ab\u56de\u6536 FTestGCUStruct TestGCUStruct; FTestGCUStruct* TestGCUStructP; TSharedPtr<FTestGCUStruct> TestGCUStructPtr; TArray<FTestGCUStruct> TestGCUStructArray; TArray<TSharedPtr<FTestGCUStruct>> TestGCUStructPtrArray; };","title":"UE4\u7684\u5783\u573e\u56de\u6536"},{"location":"UE4/UE4%E7%9A%84%E5%9E%83%E5%9C%BE%E5%9B%9E%E6%94%B6/#ue4","text":"\u8ffd\u8e2a\u5f0fGC \u6807\u8bb0\u9636\u6bb5\uff1a\u4ece\u6839\u7ed3\u70b9\u96c6\u5408\u5f00\u59cb\u9012\u5f52\u7684\u6807\u8bb0\u6240\u6709\u53ef\u8fbe\u5bf9\u8c61\u3002 \u6e05\u626b\u9636\u6bb5\uff1a\u904d\u5386\u6240\u6709\u5bf9\u8c61\uff0c\u5c06\u6ca1\u6709\u6807\u8bb0\u4e3a\u53ef\u8fbe\u7684\u5bf9\u8c61\u56de\u6536\uff0c\u5e76\u6e05\u7406\u6807\u8bb0\u4f4d\u3002 \u6ce8\u610f UObject\u7c7b\u578b\u7684\u53d8\u91cf\uff0c\u5373\u4f7f\u662fstatic\uff0c\u9ed8\u8ba4\u4e5f\u4f1a\u88abGC\u6389\u3002 \u9632\u6b62UObject\u5bf9\u8c61\u88abGC\u6389\uff0c\u5c31\u8981\u4fdd\u6301\u5bf9\u5176\u5f15\u7528","title":"UE4\u7684\u5783\u573e\u56de\u6536\u7cfb\u7edf"},{"location":"UE4/UE4%E7%9A%84%E5%9E%83%E5%9C%BE%E5%9B%9E%E6%94%B6/#1uproperty","text":"UPROPERTY() class UPaperTileMap* AssetToRename; UPROPERTY() TMap<UCompositingElementInput*, ECompPassConstructionType> UserConstructedInputs;","title":"1\u3001UPROPERTY"},{"location":"UE4/UE4%E7%9A%84%E5%9E%83%E5%9C%BE%E5%9B%9E%E6%94%B6/#2addtoroot","text":"m_sInstance = NewObject<T>(); m_sInstance->AddToRoot(); \u6ce8\u610f \u91ca\u653e\u7684\u65f6\u5019\u9700\u8981\u8c03\u7528 m_sInstance->RemoveFromRoot();","title":"2\u3001AddToRoot"},{"location":"UE4/UE4%E7%9A%84%E5%9E%83%E5%9C%BE%E5%9B%9E%E6%94%B6/#3tweakobjectptr","text":"\u6ce8\u610f \u5f31\u5f15\u7528\uff0c\u4e0d\u5f71\u54cd\u53d8\u91cf\u7684 GC","title":"3\u3001TWeakObjectPtr"},{"location":"UE4/UE4%E7%9A%84%E5%9E%83%E5%9C%BE%E5%9B%9E%E6%94%B6/#4tsharedptr","text":"\u5171\u4eab\u6307\u9488 \u5171\u4eab\u6307\u9488\uff0c\u7c7b\u4f3cC++\u6807\u51c6\u5e93\u7684\u5171\u4eab\u667a\u80fd\u6307\u9488\uff0c\u7528\u4e8e\u81ea\u5b9a\u4e49\u7684\u7ed3\u6784\u4f53\u3002 TSharedPtr Test = MakeShareable(new FTest()); \u4e0d\u80fd\u7528\u4e8eUObject\u5bf9\u8c61(TWeakPtr\u5012\u662f\u53ef\u4ee5\u7528\u4e8eUObject), \u56e0\u4e3aUObject\u6709\u4e00\u5957\u4e13\u7528\u7684GC\u89c4\u5219\u3002 class MYPROJECT2_API FTest { public: FTest(); ~FTest(); }; #include \"FTest.h\" FTest::FTest() { UE_LOG(LogTemp, Warning, TEXT(\"1111FTest Constrction\")); } FTest::~FTest() { UE_LOG(LogTemp, Warning, TEXT(\"2222FTest Deconstrction\")); } UCLASS() class MYPROJECT2_API ATestActor : public AActor { GENERATED_BODY() public: // Sets default values for this actor's properties ATestActor(); TSharedPtr<FTest> Test; protected: // Called when the game starts or when spawned virtual void BeginPlay() override; } // Called when the game starts or when spawned void ATestActor::BeginPlay() { Super::BeginPlay(); Test = MakeShareable(new FTest()); }","title":"4\u3001TSharedPtr"},{"location":"UE4/UE4%E7%9A%84%E5%9E%83%E5%9C%BE%E5%9B%9E%E6%94%B6/#5fgcobject","text":"\u5982\u4f55\u6df7\u7528 \u5df2\u77e5 UObject \u7c7b\u901a\u8fc7 NewObject \u521b\u5efa\u5e76\u81ea\u52a8 GC \u975e UObject \u7c7b\u901a\u8fc7 MakeShareable \u6765\u521b\u5efa TSharedPtr \u6765\u81ea\u52a8 GC \u800c \u975e UObject \u7c7b\u4e2d\u51fa\u73b0 UObject \u53d8\u91cf\u600e\u4e48\u529e\u5462\uff1f FGCObject UE4 \u63d0\u4f9b\u4e86 FGCObject\uff0c\u975e UObject \u7c7b\u53ef\u4ee5\u7ee7\u627f FGCObject\uff0c\u7136\u540e\u901a\u8fc7 AddReferencedObjects \u51fd\u6570\u5bf9 UObject \u5bf9\u8c61\u6dfb\u52a0\u5f15\u7528\u3002 #include \"GCObject.h\" class UCameraAnim; /** * */ class MYPROJECT2_API FTest :public FGCObject { public: FTest(); ~FTest(); UCameraAnim* CameraAnim; protected: virtual void AddReferencedObjects(FReferenceCollector& Collector) override { Collector.AddReferencedObject(CameraAnim); } };","title":"5\u3001FGCObject"},{"location":"UE4/UE4%E7%9A%84%E5%9E%83%E5%9C%BE%E5%9B%9E%E6%94%B6/#6tsharedref","text":"\u5171\u4eab\u5f15\u7528 \u672c\u8d28\u4e0a\u5171\u4eab\u5f15\u7528(TSharedRef)\u548c\u5171\u4eab\u6307\u9488(TSharedPtr)\u662f\u5dee\u4e0d\u591a\u7684\uff0c\u4e00\u6837\u662f\u7528\u4e8e\u975eUObject\u4f53\u7cfb\u7684\u5bf9\u8c61\uff0c\u4e0d\u8fc7 TSharedRef \u548c TSharedPtr \u7684\u4e0d\u540c\u5728\u4e8e\u5171\u4eab\u5f15\u7528\u65e0\u6cd5\u5f15\u7528\u7a7a\u5bf9\u8c61\uff0c\u7f16\u8bd1\u76f4\u63a5\u62a5\u9519\u3002TSharedRef\u8fde \u201cIsValid\u201d \u5224\u65ad\u662f\u5426\u975e\u7a7a\u90fd\u6ca1\u6709\uff0c\u5f3a\u903c\u4f60\u4f7f\u7528\u5fc5\u5b9a\u662f\u6709\u6548\u7684\u5f15\u7528\u3002\u6240\u4ee5\u5728 UE4 \u7684 SWidget \u4e2d\u5927\u91cf\u4f7f\u7528 TSharedRef \u3002 //\u6b63\u786e\u7684\u58f0\u660e\u5b9a\u4e49 TSharedRef<FMyCustom> MyCustom = MakeShared<FMyCustom>(); //\u9519\u8bef\u7684\u58f0\u660e\u5b9a\u4e49 //TSharedRef\u6ca1\u6709\u7a7a\u5f15\u7528\uff0c\u5e94\u8be5\u6301\u6709\u7684\u5bf9\u8c61\u5fc5\u987b\u662f\u6709\u6548\u7684 //TSharedRef<FMyCustom> MyCustom; //TSharedRef<FMyCustom> MyCustom = nullptr; //TSharedPtr\u8f6c\u4e3aTSharedRef TSharedPtr<FMyCustom> MySharedPtr = MakeShareable(new FMyCustom); TSharedRef<FMyCustom> MySharedRef = MySharedPtr.ToSharedRef(); // TSharedRef\u53ef\u4ee5\u8f6c\u5316\u4e3aTSharedPtr\uff0c \u76f4\u63a5\u7b49\u4e8e\u5c31\u53ef\u4ee5\u4e86 TSharedRef<FMyCustom> RefCustom = MakeShared<FMyCustom>(); TSharedPtr<FMyCustom> PtrCustom = RefCustom;","title":"6\u3001TSharedRef"},{"location":"UE4/UE4%E7%9A%84%E5%9E%83%E5%9C%BE%E5%9B%9E%E6%94%B6/#tsharedfromthis","text":"TSharedFromThis \u4e00\u4e2a\u666e\u901a\u7684\u7ed3\u6784\u4f53\u7ee7\u627f TSharedFromThis\uff0c\u5c31\u53ef\u4ee5\u62e5\u6709 AsShared \u51fd\u6570\u8ba9\u666e\u901a\u7684\u7ed3\u6784\u4f53\u5bf9\u8c61\u8f6c\u4e3a TSharedRef, \u50cf SWidget \u8fd9\u4e2a\u7c7b\u672c\u8eab\u5c31\u4f7f\u7528\u4e86 TSharedFromThis\u3002 FMyCustom MyCustom; TSharedRef<FMyCustom> FMyCustomRef = MyCustom.AsShared();","title":"TSharedFromThis"},{"location":"UE4/UE4%E7%9A%84%E5%9E%83%E5%9C%BE%E5%9B%9E%E6%94%B6/#7tweakptr","text":"TWeakPtr \u4e0a\u9762\u8bf4\u5230\u4e86 TWeakObjectPtr\uff0c\u4e13\u95e8\u7528\u4e8eUObject, \u76f8\u5e94\u7684\u666e\u901a\u7ed3\u6784\u4f53\u4e5f\u6709\u5f31\u6307\u9488 TWeakPtr, \u80fd\u591f\u8bbf\u95ee\u4e00\u4e2a\u975eUObject\u5bf9\u8c61\uff0c\u4f46\u53c8\u4e0d\u5f71\u54cd GC\u3002 \u4e00\u822c\u6765\u8bf4\u901a\u8fc7 TWeakPtr \u6765\u8bbf\u95ee\u5176\u6301\u6709\u7684\u5bf9\u8c61\uff0c\u5148\u662f\u7528 Pin() \u8f6c\u6362\u4e3a TSharedPtr \u6307\u9488\uff0c\u5224\u65ad\u5bf9\u8c61\u662f\u5426\u6709\u6548\u540e\uff0c\u518d\u8bbf\u95ee struct FMyCustom { int a = 1; FMyCustom() { UE_LOG(LogTemp, Error, TEXT(\"destruct a = %d\"), a); } ~FMyCustom() { UE_LOG(LogTemp, Error, TEXT(\"undestruct a = %d\"), a); } }; UCLASS() class MYPROJECT5_API AMyActor : public AActor { public: TWeakPtr<FMyCustom> WeakCustom; virtual void BeginPlay() override; virtual void Tick(float DeltaTime) override; } void AMyActor::BeginPlay() { Super::BeginPlay(); TSharedPtr<FMyCustom> ShareCustom = MakeShareable(new FMyCustom); WeakCustom = ShareCustom; } // Called every frame void AMyActor::Tick(float DeltaTime) { Super::Tick(DeltaTime); TSharedPtr<FMyCustom> ShareCustom = WeakCustom.Pin(); if (ShareCustom.IsValid()) { UE_LOG(LogTemp, Error, TEXT(\"a = %d\"), ShareCustom->a); } } TSharedPtr\uff0cTSharedRef, TWeakPtr\u5728\u5bb9\u5668\u4f7f\u7528\u4e8b\u9879 \u5f31\u6307\u9488(TWeakPtr)\u5bf9\u8c61\u4e0d\u80fd\u4f5c\u4e3a Set\u6216\u8005Map \u7684 Key\uff0c\u56e0\u4e3a\u4e00\u4e2a\u5bf9\u8c61\u88ab GC \u6389\u65e0\u6cd5\u901a\u77e5\u4e00\u4e2a\u5bb9\u5668\u7684 Key\uff0c\u5f53\u7136 TWeakPtr \u53ef\u4ee5\u4f5c\u4e3a\u5bb9\u5668\u7684 Value\u3002 \u800c TSharedPtr\u548cTSharedRef \u65e2\u53ef\u4ee5\u5f53\u4f5c\u5bb9\u5668\u7684 Key\uff0c\u4e5f\u53ef\u4ee5\u4f5c\u4e3a\u5bb9\u5668\u7684 Value.","title":"7\u3001TWeakPtr"},{"location":"UE4/UE4%E7%9A%84%E5%9E%83%E5%9C%BE%E5%9B%9E%E6%94%B6/#demo","text":"/** * UMyGCObject */ UCLASS() class UMyGCObject : public UObject { GENERATED_BODY() }; /** * UTestGCObject */ UCLASS() class UTestGCObject : public UObject { GENERATED_BODY() public: UPROPERTY() UMyGCObject* Obj; }; /** * FTestGCStruct */ struct FTestGCStruct { public: UPROPERTY() UMyGCObject* Obj; }; /** * FTestGCUStruct */ USTRUCT() struct FTestGCUStruct { GENERATED_BODY() public: UPROPERTY() UMyGCObject* Obj; }; /** * ATestGCActor */ UCLASS() class ATestGCActor : public AActor { GENERATED_BODY() public: //UTestGCObject UTestGCObject* TestGCObj; //\u8ffd\u8e2a\u4e0d\u53ef\u8fbe\uff0c\u5f53GC\u65f6\u4f1a\u88ab\u56de\u6536 UPROPERTY() UTestGCObject* TestGCObj_UPROPERTY; //\u4f7f\u7528 UPROPERTY \u4fee\u9970\uff0c\u8ffd\u8e2a\u53ef\u8fbe\uff0c\u5f53GC\u65f6\u4e0d\u4f1a\u88ab\u56de\u6536 //FTestGCStruct //FTestGCStruct \u6ca1\u6709\u7528 USTRUCT() \u4fee\u9970\uff0c\u6240\u4ee5\u4efb\u4f55\u5f62\u5f0f\u7684\u53d8\u91cf\u90fd\u4e0d\u80fd\u4f7f\u7528 UPROPERTY()\u4fee\u9970 //\u6240\u4ee5\u4ee5\u4e0b\u51e0\u79cd\u53d8\u91cf\u5747 \u8ffd\u8e2a\u4e0d\u53ef\u8fbe\uff0c\u5f53GC\u65f6\u5176\u53d8\u91cf UMyGCObject* Obj \u4f1a\u88ab\u56de\u6536 FTestGCStruct TestGCStruct; FTestGCStruct* TestGCStructP; TSharedPtr<FTestGCStruct> TestGCStructPtr; TArray<FTestGCStruct> TestGCStructArray; TArray<TSharedPtr<FTestGCStruct>> TestGCStructPtrArray; //FTestGCStruct \u4f7f\u7528\u4e86 USTRUCT() \u4fee\u9970 //\u53ea\u6709\u4ee5\u4e0b 2 \u79cd\u5f62\u5f0f\u7684\u53d8\u91cf\uff0c\u624d\u53ef\u4ee5\u4f7f\u7528 UPROPERTY()\u4fee\u9970 //\u5f53\u4f7f\u7528 UPROPERTY() \u4fee\u9970\u65f6\uff0c\u8ffd\u8e2a\u53ef\u8fbe\uff0c\u5f53GC\u65f6\u5176\u53d8\u91cf UMyGCObject* Obj \u4e0d\u4f1a\u88ab\u56de\u6536 UPROPERTY() FTestGCUStruct TestGCUStruct_UPROPERTY; UPROPERTY() TArray<FTestGCUStruct> TestGCUStructArray_UPROPERTY; //\u4ee5\u4e0b\u51e0\u79cd\u53d8\u91cf \u8ffd\u8e2a\u4e0d\u53ef\u8fbe\uff0c\u5f53GC\u65f6\u5176\u53d8\u91cf UMyGCObject* Obj \u4f1a\u88ab\u56de\u6536 FTestGCUStruct TestGCUStruct; FTestGCUStruct* TestGCUStructP; TSharedPtr<FTestGCUStruct> TestGCUStructPtr; TArray<FTestGCUStruct> TestGCUStructArray; TArray<TSharedPtr<FTestGCUStruct>> TestGCUStructPtrArray; };","title":"Demo"},{"location":"UE4/%E7%94%9F%E6%88%90xcode%E5%B7%A5%E7%A8%8B%E6%96%87%E4%BB%B6/","text":"\u6267\u884c\u4ee5\u4e0b\u547d\u4ee4 # /xxx/GenerateProjectFiles.sh /yyy/MyProject.uproject -Game -Engine \u6ce8\u610f\u8def\u5f84 xxx: GenerateProjectFiles.sh\u7684\u8def\u5f84 yyy: MyProject.uproject\u7684\u8def\u5f84","title":"\u751f\u6210xcode\u5de5\u7a0b\u6587\u4ef6"},{"location":"UE4/%E7%94%9F%E6%88%90xcode%E5%B7%A5%E7%A8%8B%E6%96%87%E4%BB%B6/#_1","text":"/xxx/GenerateProjectFiles.sh /yyy/MyProject.uproject -Game -Engine \u6ce8\u610f\u8def\u5f84 xxx: GenerateProjectFiles.sh\u7684\u8def\u5f84 yyy: MyProject.uproject\u7684\u8def\u5f84","title":"\u6267\u884c\u4ee5\u4e0b\u547d\u4ee4"},{"location":"UE4/%E9%83%A8%E7%BD%B2iOS%E6%89%93%E5%8C%85%E7%8E%AF%E5%A2%83/","text":"Windows\u8fdc\u7a0b\u6253\u5305 # XCode 13.3.1 Unreal Engine 4.26 1\u3001RemoteToolChainPrivate # \u62a5\u9519 [Remote] Using private key at D:\\RemoteToolChainPrivate.key ERROR: Unable to determine home directory for remote user. SSH output: \u89e3\u51b3\u65b9\u6848 \u9700\u5728\u6253\u5305\u673a\uff08Windows\u7cfb\u7edf\uff09\u4e0a\u751f\u6210 RemoteToolChainPrivate.key \u6587\u4ef6 2\u3001-Werror # \u62a5\u9519 error: variable 'xx' set but not used [-Werror,-Wunused-but-set-variable] \u89e3\u51b3\u65b9\u6848 XCode\u7248\u672c\u95ee\u9898\uff0c\u53ef\u4ee5\u4f7f\u7528 Xcode 13.2.1 \u7248\u672c 3\u3001The Legacy Build System # \u62a5\u9519 error: The Legacy Build System will be removed in a future release. You can configure the selected build system and this deprecation message in File > Workspace Settings. \u89e3\u51b3\u65b9\u6848 Unreal Engine \u7248\u672c\u95ee\u9898\uff0c\u53ef\u4ee5\u4f7f\u7528 4.27 Mac\u6253\u5305 # jdk-11.0.15_osx-x64 Jenkins 2.332.2 LTS Jenkins\u4e2d\u914d\u7f6e svn \u8d26\u53f7\u9a8c\u8bc1\u4e0d\u901a\u8fc7\uff0c\u540e\u53f0\u62a5\u9519 \u62a5\u9519 SEVERE h.s.SubversionSCM$ModuleLocation$DescriptorImpl#checkCredentialsId: svn: E175002: SSL handshake failed: 'The server selected protocol version TLS10 is not accepted by client preferences [TLS13, TLS12] \u89e3\u51b3\u65b9\u6848 \u5728\u6587\u4ef6 /Library/Java/JavaVirtualMachines/jdk-11.0.15.jdk/Contents/Home/conf/security/java.security \u4e2d\u627e\u5230 jdk.tls.disabledAlgorithms\uff0c\u5220\u9664\u5176\u4e2d\u7684 TLSv1\u3001TLSv1.1\u30013DES_EDE_CBC \u540e\u91cd\u542f\u7cfb\u7edf\u3002 java.security\u6587\u4ef6\u6ca1\u6709\u6743\u9650\u4fee\u6539\uff0c\u53ef\u4ee5\u5c06\u5176\u590d\u5236\u5230\u6709\u6743\u9650\u4fee\u6539\u7684\u76ee\u5f55\uff0c\u6539\u5b8c\u4e4b\u540e\u518d\u8986\u76d6\u8be5\u6587\u4ef6\u3002","title":"\u90e8\u7f72iOS\u6253\u5305\u73af\u5883"},{"location":"UE4/%E9%83%A8%E7%BD%B2iOS%E6%89%93%E5%8C%85%E7%8E%AF%E5%A2%83/#windows","text":"XCode 13.3.1 Unreal Engine 4.26","title":"Windows\u8fdc\u7a0b\u6253\u5305"},{"location":"UE4/%E9%83%A8%E7%BD%B2iOS%E6%89%93%E5%8C%85%E7%8E%AF%E5%A2%83/#1remotetoolchainprivate","text":"\u62a5\u9519 [Remote] Using private key at D:\\RemoteToolChainPrivate.key ERROR: Unable to determine home directory for remote user. SSH output: \u89e3\u51b3\u65b9\u6848 \u9700\u5728\u6253\u5305\u673a\uff08Windows\u7cfb\u7edf\uff09\u4e0a\u751f\u6210 RemoteToolChainPrivate.key \u6587\u4ef6","title":"1\u3001RemoteToolChainPrivate"},{"location":"UE4/%E9%83%A8%E7%BD%B2iOS%E6%89%93%E5%8C%85%E7%8E%AF%E5%A2%83/#2-werror","text":"\u62a5\u9519 error: variable 'xx' set but not used [-Werror,-Wunused-but-set-variable] \u89e3\u51b3\u65b9\u6848 XCode\u7248\u672c\u95ee\u9898\uff0c\u53ef\u4ee5\u4f7f\u7528 Xcode 13.2.1 \u7248\u672c","title":"2\u3001-Werror"},{"location":"UE4/%E9%83%A8%E7%BD%B2iOS%E6%89%93%E5%8C%85%E7%8E%AF%E5%A2%83/#3the-legacy-build-system","text":"\u62a5\u9519 error: The Legacy Build System will be removed in a future release. You can configure the selected build system and this deprecation message in File > Workspace Settings. \u89e3\u51b3\u65b9\u6848 Unreal Engine \u7248\u672c\u95ee\u9898\uff0c\u53ef\u4ee5\u4f7f\u7528 4.27","title":"3\u3001The Legacy Build System"},{"location":"UE4/%E9%83%A8%E7%BD%B2iOS%E6%89%93%E5%8C%85%E7%8E%AF%E5%A2%83/#mac","text":"jdk-11.0.15_osx-x64 Jenkins 2.332.2 LTS Jenkins\u4e2d\u914d\u7f6e svn \u8d26\u53f7\u9a8c\u8bc1\u4e0d\u901a\u8fc7\uff0c\u540e\u53f0\u62a5\u9519 \u62a5\u9519 SEVERE h.s.SubversionSCM$ModuleLocation$DescriptorImpl#checkCredentialsId: svn: E175002: SSL handshake failed: 'The server selected protocol version TLS10 is not accepted by client preferences [TLS13, TLS12] \u89e3\u51b3\u65b9\u6848 \u5728\u6587\u4ef6 /Library/Java/JavaVirtualMachines/jdk-11.0.15.jdk/Contents/Home/conf/security/java.security \u4e2d\u627e\u5230 jdk.tls.disabledAlgorithms\uff0c\u5220\u9664\u5176\u4e2d\u7684 TLSv1\u3001TLSv1.1\u30013DES_EDE_CBC \u540e\u91cd\u542f\u7cfb\u7edf\u3002 java.security\u6587\u4ef6\u6ca1\u6709\u6743\u9650\u4fee\u6539\uff0c\u53ef\u4ee5\u5c06\u5176\u590d\u5236\u5230\u6709\u6743\u9650\u4fee\u6539\u7684\u76ee\u5f55\uff0c\u6539\u5b8c\u4e4b\u540e\u518d\u8986\u76d6\u8be5\u6587\u4ef6\u3002","title":"Mac\u6253\u5305"}]}